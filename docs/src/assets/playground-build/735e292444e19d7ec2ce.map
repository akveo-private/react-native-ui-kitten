{"version":3,"sources":["/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/assets/images/splash.png","/Users/artyorsh/Repositories/eva/packages/eva/index.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/eva-icons/evaIcon.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/eva-icons/index.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/eva-icons/createIconsMap.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/theme/theme/theme.service.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/theme/style/style.service.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/theme/style/styleConsumer.service.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/theme/mapping/mappingContext.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/theme/theme/themeContext.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/theme/style/styleConsumer.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/theme/theme/themeConsumer.component.tsx","/Users/artyorsh/Repositories/eva/packages/processor/js/src/service/common/common.service.ts","/Users/artyorsh/Repositories/eva/packages/processor/js/src/service/mapping/mapping.service.ts","/Users/artyorsh/Repositories/eva/packages/processor/js/src/service/style/style.service.ts","/Users/artyorsh/Repositories/eva/packages/processor/js/src/processor/mapping/mappingProcessor.ts","/Users/artyorsh/Repositories/eva/packages/processor/js/src/processor/meta/metaProcessor.ts","/Users/artyorsh/Repositories/eva/packages/processor/js/src/processor/schema/schemaProcessor.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/theme/mapping/mappingProvider.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/theme/theme/themeProvider.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/theme/style/styleProvider.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/theme/modal/modalResolver.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/theme/modal/modal.service.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/theme/modal/modalPanel.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/theme/style/type.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/theme/application/applicationProvider.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/animation/animation.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/animation/pulseAnimation.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/animation/shakeAnimation.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/animation/zoomAnimation.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/avatar/avatar.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/support/components/arrow/arrow.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/support/services/props.service.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/support/services/i18n/i18nLayoutFlexMap.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/support/services/i18n/i18nLayout.service.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/support/services/validation.service.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/support/services/webEventResponder.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/support/components/checkmark/checkmark.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/support/components/tabIndicator/tabIndicator.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/support/components/chevron/chevron.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/bottomNavigation/bottomNavigation.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/text/text.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/bottomNavigation/bottomNavigationTab.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/bottomNavigation/bottomNavigationTab.component.web.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/button/button.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/button/button.component.web.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/buttonGroup/buttonGroup.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/calendar/components/calendarHeader.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/calendar/components/calendarMonthHeader.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/viewPager/viewPager.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/calendar/components/calendarPager.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/calendar/components/picker/calendarPickerRow.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/calendar/components/picker/calendarPickerCell.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/calendar/components/picker/calendarPicker.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/calendar/components/calendarDateContent.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/calendar/type.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/calendar/service/date.service.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/calendar/i18n/type.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/calendar/i18n/en.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/calendar/service/nativeDate.service.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/calendar/service/helpers.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/calendar/service/calendarData.service.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/divider/divider.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/calendar/baseCalendar.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/calendar/calendar.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/card/card.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/list/listItem.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/list/listItem.component.web.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/card/cardHeader.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/calendar/service/rangeDate.service.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/calendar/rangeCalendar.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/checkbox/checkbox.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/checkbox/checkbox.component.web.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/popover/type.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/popover/popoverView.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/popover/measure.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/popover/placement.service.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/popover/popover.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/datepicker/baseDatepicker.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/datepicker/datepicker.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/datepicker/rangeDatepicker.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/list/list.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/menu/menuItem.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/menu/menuItem.component.web.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/menu/subMenu.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/menu/menu.service.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/menu/menu.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/drawer/drawer.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/drawer/drawerHeaderFooter.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/select/selectOption.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/select/selectOption.component.web.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/select/selectGroupOption.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/select/selectOptionsList.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/select/selection.strategy.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/select/select.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/select/select.component.web.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/icon/service/iconRegistry.service.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/icon/icon.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/icon/iconAnimation.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/icon/iconRegistry.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/support/typings/props.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/input/input.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/input/input.component.web.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/layout/layout.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/modal/modal.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/overflowMenu/overflowMenu.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/radio/radio.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/radio/radio.component.web.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/radioGroup/radioGroup.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/spinner/animation.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/spinner/spinner.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/tab/tabBar.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/tab/tabView.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/tab/tab.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/tab/tab.component.web.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/toggle/toggle.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/toggle/toggle.component.web.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/tooltip/tooltip.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/topNavigation/topNavigation.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/topNavigation/topNavigationAction.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/themes/themeContext.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/framework/ui/topNavigation/topNavigationAction.component.web.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/icons/index.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/sharingHeight.container.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/avatar/avatarInlineStyling.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/avatar/avatarRemoteImages.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/avatar/avatarShape.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/avatar/avatarSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/avatar/avatarSize.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/bottomNavigation/bottomNavigationInlineStyling.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/bottomNavigation/bottomNavigationSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/bottomNavigation/bottomNavigationTabInlineStyling.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/bottomNavigation/bottomNavigationTabSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/bottomNavigation/bottomNavigationTabWithExternalSourceIcon.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/bottomNavigation/bottomNavigationTabWithIcon.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/bottomNavigation/bottomNavigationWithIcons.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/bottomNavigation/bottomNavigationWithoutIndicator.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/button/buttonAppearances.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/button/buttonGhost.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/button/buttonOutline.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/button/buttonSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/button/buttonSize.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/button/buttonStatus.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/button/buttonWithIcon.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/buttonGroup/buttonGroupAppearance.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/buttonGroup/buttonGroupInlineStyling.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/buttonGroup/buttonGroupSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/buttonGroup/buttonGroupSize.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/buttonGroup/buttonGroupStatus.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/calendar/calendarBoundingMonth.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/calendar/calendarBounds.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/calendar/calendarCustomDay.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/calendar/calendarCustomLocale.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/calendar/calendarFilter.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/moment/momentDate.service.ts","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/calendar/calendarMoment.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/calendar/calendarSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/calendar/calendarStartDayOfWeek.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/calendar/rangeCalendarSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/card/cardCustomHeader.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/card/cardEvaHeader.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/card/cardFooter.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/card/cardHeaderFooter.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/card/cardSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/card/cardStatuses.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/checkbox/checkboxIndeterminate.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/checkbox/checkboxInlineStyling.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/checkbox/checkboxSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/checkbox/checkboxStatus.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/checkbox/checkboxText.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/datepicker/datepickerBoundingMonth.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/datepicker/datepickerCustomDay.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/datepicker/datepickerCustomLocale.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/datepicker/datepickerFilter.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/datepicker/datepickerMoment.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/datepicker/datepickerSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/datepicker/datepickerWithIcon.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/datepicker/rangeDatepickerSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/drawer/drawerCustomHeader.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/drawer/drawerFooter.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/drawer/drawerHeader.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/drawer/drawerHeaderFooterInlineStyling.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/drawer/drawerHeaderFooterSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/drawer/drawerHeaderFooterWithAccessory.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/drawer/drawerHeaderFooterWithExternalSourceIcon.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/drawer/drawerNotificationBadgeItem.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/drawer/drawerSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/drawer/drawerWithIcons.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/icon/iconAnimation.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/icon/iconAnimationInfinite.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/icon/iconExternalSource.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/icon/iconInlineStyling.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/icon/iconSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/icon/iconWithinButton.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/icon/iconWithinInput.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/input/inputInlineStyling.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/input/inputSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/input/inputSize.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/input/inputStatus.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/input/inputWithCaption.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/input/inputWithExternalSourceIcon.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/input/inputWithIcon.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/input/inputWithLabel.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/layout/layoutInlineStyling.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/layout/layoutLevel.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/layout/layoutSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/list/listCompositeItem.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/list/listInlineStyling.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/list/listItemInlineStyling.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/list/listItemSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/list/listItemWithAccessory.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/list/listItemWithExternalIcon.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/list/listItemWithIcon.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/list/listSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/menu/menuAppearance.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/menu/menuInlineStyling.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/menu/menuSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/menu/menuWithIcons.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/menu/menuWithSubMenu.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/overflowMenu/overflowMenuExternalSourceIcons.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/overflowMenu/overflowMenuSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/overflowMenu/overflowMenuWithDisabledItems.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/overflowMenu/overflowMenuWithIcons.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/overflowMenu/overflowMenuWithoutDivider.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/popover/popoverPlacement.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/popover/popoverSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/radio/radioInlineStyling.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/radio/radioSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/radio/radioStatus.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/radio/radioWithText.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/radioGroup/radioGroupSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/select/selectCustomIcon.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/select/selectInlineStyling.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/select/selectMultiPreselectedInline.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/select/selectMultiPreselectedReference.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/select/selectMultiSelect.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/select/selectSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/select/selectStatus.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/select/selectWithGroups.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/spinner/spinnerLoadingData.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/spinner/spinnerSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/spinner/spinnerSizes.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/spinner/spinnerStatuses.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/tab/tabBarSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/tab/tabInlineStyling.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/tab/tabSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/tab/tabViewInlineStyling.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/tab/tabViewLazyLoading.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/tab/tabViewSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/tab/tabWithExternalSourceIcon.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/tab/tabWithIcon.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/text/textAppearances.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/text/textCategories.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/text/textInlineStyling.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/text/textSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/text/textStatuses.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/toggle/toggleInlineStyling.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/toggle/toggleSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/toggle/toggleSize.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/toggle/toggleStatus.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/toggle/toggleWithText.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/tooltip/tooltipInlineStyling.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/tooltip/tooltipPlacement.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/tooltip/tooltipSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/tooltip/tooltipWithExternalSourceIcon.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/tooltip/tooltipWithIcon.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/topNavigation/topNavigationActionExternalSourceIcon.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/topNavigation/topNavigationActionInlineStyling.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/topNavigation/topNavigationActionSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/topNavigation/topNavigationActions.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/topNavigation/topNavigationAlignments.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/topNavigation/topNavigationInlineStyling.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/topNavigation/topNavigationSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/topNavigation/topNavigationWithMenu.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/viewPager/viewPagerInlineStyling.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/viewPager/viewPagerLazyLoading.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/components/showcases/viewPager/viewPagerSimpleUsage.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/navigation/app.navigator.web.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/icons/materialIconPack.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/app/loadingAnimation.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/app/applicationLoader.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/app/app.component.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/App.tsx","/Users/artyorsh/Repositories/react-native-ui-kitten/node_modules/moment/locale sync /^/.//.*$","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/assets/fonts/opensans-regular.ttf","/Users/artyorsh/Repositories/react-native-ui-kitten/src/playground/src/assets/fonts/roboto-regular.ttf"],"names":["module","exports","mapping","require","light","dark","EvaIcon","content","props","Icon","this","tintColor","restProps","fill","EvaIconsPack","name","icons","Proxy","get","target","findIconByName","SYMBOL_REFERENCE","findThemeValue","theme","value","isReferenceKey","toThemeKey","startsWith","substring","createThemedStyle","Object","keys","reduce","acc","current","mappingValue","fallback","getThemeValue","StyleConsumerService","context","meta","safe","style","generatedConfig","docRoot","message","join","console","error","appearance","getDefaultAppearance","getDefaultVariants","getDefaultStates","source","interaction","styleInfo","getStyleInfo","generatedMapping","getGeneratedStyleMapping","JSON","stringify","toLowerCase","warn","withStyledProps","createDefaultProps","withValidParameters","themedStyle","info","componentStyles","styleKeys","styles","query","findGeneratedQuery","invalidParameters","forEach","key","parameters","includes","push","length","variantProps","getDerivedVariants","stateProps","getDerivedStates","variants","map","variant","states","matches","appearances","filter","default","transformObject","variantGroups","group","find","state","isDefault","undefined","p","prop","isState","isAssigned","transform","nextValue","keyQuery","split","compareArrays","lhs","rhs","reducer","MappingContext","React","createContext","ThemeContext","styled","Component","styledComponentName","Wrapper","init","onInit","service","defaultProps","onDispatch","setState","renderWrappedElement","forwardedRef","ref","dispatch","StyledElement","Consumer","ResultComponent","forwardRef","displayName","hoistNonReactStatics","toObject","array","c","hasOwnProperty","getComponentDefaultAppearance","component","getComponentMapping","getComponentDefaultState","getAppearance","getAppearanceMapping","getVariantMapping","groupValue","groupNameValue","getStateMapping","SEPARATOR_MAPPING_ENTRY","createStyle","normalizedAppearance","normalize","normalizeAppearance","normalizedVariants","defaultVariants","getComponentDefaultVariants","normalizeVariants","normalizedStates","stateWeight","separator","preprocess","createStateVariations","result","next","nextItem","concat","shift","sort","getStateVariationWeight","normalizeStates","indexOf","appearanceMapping","apce","getStatelessAppearanceMapping","variantMapping","getStatelessVariantMapping","stateMapping","getStateAppearanceMapping","getStateVariantMapping","currentToken","nextToken","withStrictTokens","parts","createStyleEntry","params","Boolean","noNulls","Set","noDuplicates","items","MappingProcessor","getComponentMappingMeta","componentMapping","getComponentVariants","getComponentStates","concatComponentVariants","concatComponentStates","concatVariantGroups","lhsValue","rhsValue","MetaProcessor","entries","controlMeta","nextAppearanceEntries","stateless","withStates","withVariants","withVariantStates","createAllStyles","prevAppearanceStyles","nextAppearanceStyles","withControlMeta","control","controlEntry","SchemaProcessor","mappingProcessor","metaProcessor","themeMapping","components","strictTheme","strict","process","MappingProvider","children","Provider","PureComponent","ThemeProvider","StyleProvider","ModalResolver","onBackdropPress","allowBackdrop","onStartShouldSetResponder","onResponderRelease","onStartShouldSetResponderCapture","renderComponentChild","cloneElement","renderComponentChildren","Children","renderWithBackDrop","TouchableOpacity","container","onPress","activeOpacity","renderWithoutBackDrop","View","notVisibleWrapper","pointerEvents","renderComponent","derivedProps","componentChildren","dialog","contentWrapper","visible","StyleSheet","create","absoluteFillObject","position","width","height","alignSelf","ModalService","panel","element","config","show","identifier","update","hide","Interaction","State","ModalPanel","Map","delete","generateUniqueComponentKey","Math","random","toString","areThereAnyComponents","size","renderModal","index","renderModals","Array","from","values","mount","unmount","set","panelChild","childElement","flex","ApplicationProvider","schemaProcessor","createStyles","custom","customizedMapping","merge","customMapping","DEFAULT_CONFIG","cycles","useNativeDriver","Animation","counter","running","onAnimationEnd","stop","start","endCallback","callback","animation","end","easing","Easing","linear","duration","PulseAnimation","Animated","Value","restConfig","startAnimation","timing","toValue","endAnimation","sequence","scale","offset","ShakeAnimation","translateX","ZoomAnimation","AvatarComponent","getComponentStyle","roundCoefficient","containerParameters","baseStyle","flatten","borderRadius","componentStyle","Image","Avatar","Arrow","flatStyle","borderLeftWidth","borderRightWidth","borderBottomWidth","borderBottomColor","backgroundColor","borderLeftColor","borderRightColor","allWithPrefix","styleName","obj","styleKey","FlexStartEndMapper","toI18n","rtl","endsWith","FLEX_PREFIX","I18nLayoutFlexMap","alignContent","alignItems","justifyContent","flexDirection","FLEX_ROW_PREFIX","flexWrap","FLEX_WRAP_PREFIX","I18nLayoutService","I18nManager","isRTL","ltr","i18nStyle","currentStyleValue","i18nStyleValue","isValidString","WebEventResponderInstance","eventHandlers","WebEventResponder","onMouseEnter","onMouseLeave","onFocus","onBlur","CheckMark","shape","borderWidth","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","borderColor","left","top","right","isAnimated","toI18nStyle","rotate","TabIndicator","contentOffset","onContentOffsetAnimationStateChanged","onContentOffsetAnimationStateEnd","createOffsetAnimation","animationDuration","animated","select","onLayout","event","indicatorWidth","nativeEvent","layout","scrollToOffset","selectedPosition","positions","addListener","nextProps","scrollToIndex","removeAllListeners","rest","Chevron","getDirectionStyle","direction","containerTopRotate","containerRightRotate","containerLeftRotate","marginHorizontal","directionStyle","translateY","BottomNavigationComponent","onTabSelect","onSelect","selectedIndex","indicatorHeight","indicatorBackgroundColor","item","indicator","renderIndicatorElement","indicatorStyle","renderTabElement","selected","renderTabElements","tabElements","indicatorElement","BottomNavigation","TextComponent","Text","BottomNavigationTabComponent","iconWidth","iconHeight","iconMarginVertical","iconTintColor","textMarginVertical","textFontFamily","textFontSize","textLineHeight","textFontWeight","textColor","text","marginVertical","fontFamily","fontSize","lineHeight","fontWeight","color","icon","renderIconElement","iconElement","renderTitleElement","title","titleStyle","titleElement","BottomNavigationTab","bottomNavigationTabRef","createRef","webEventResponder","HOVER","outlineWidth","ButtonComponent","onPressIn","ACTIVE","onPressOut","textMarginHorizontal","iconMarginHorizontal","renderTextElement","textStyle","containerProps","childStyles","textElement","Button","buttonRef","FOCUSED","ButtonGroupComponent","dividerBackgroundColor","dividerWidth","button","isFirstElement","isLastElement","count","renderButtonElement","status","shapeStyle","borderEndWidth","borderEndColor","startShapeStyle","borderTopStartRadius","borderBottomStartRadius","endShapeStyle","borderTopEndRadius","borderBottomEndRadius","renderButtonElements","buttonElements","overflow","ButtonGroup","CalendarHeader","renderSpecificTitleIcon","renderTitleIcon","iconStyle","renderLeftIcon","lateralIcon","renderRightIcon","renderLateralNavigationControls","subContainer","headerButton","onNavigationLeftPress","onNavigationRightPress","onTitlePress","lateralNavigationAllowed","headerButtonText","paddingVertical","paddingHorizontal","minWidth","minHeight","CalendarMonthHeader","data","ViewPager","containerRef","contentWidth","contentOffsetValue","panResponder","PanResponder","onMoveShouldSetPanResponder","abs","dx","dy","i18nOffset","nextSelectedIndex","sign","getChildCount","onPanResponderMove","selectedPageOffset","setValue","onPanResponderRelease","vx","onOffsetChange","round","contentView","shouldLoadComponent","contentContainer","getContainerStyle","prevProps","childCount","panHandlers","CalendarPager","viewPagerRef","setTimeout","createChildElement","date","CalendarPickerRow","renderItem","CalendarPickerCellComponent","getContainerBorderRadius","firstRangeItem","lastRangeItem","contentBorderWidth","contentBorderRadius","contentBorderColor","contentBackgroundColor","contentTextFontSize","contentTextLineHeight","contentTextFontWeight","contentTextColor","contentTextFontFamily","contentText","renderContentElement","shouldComponentUpdate","bounding","today","CalendarPickerCell","CalendarPicker","isFirstRangeItem","range","isLastRangeItem","renderCellElement","rangedArray","isItemSelected","disabled","isItemDisabled","isItemToday","shouldItemUpdate","renderRowElement","rowStyle","CalendarDateContent","VIEW_MODE_DATE","id","navigationNext","VIEW_MODE_YEAR","pickNext","VIEW_MODE_MONTH","CalendarViewModes","DATE","MONTH","YEAR","DateService","locale","date1","date2","compareDates","isBetweenIncluding","isSameDay","isSameMonth","isSameYear","DAYS_IN_WEEK","MONTHS_IN_YEAR","TranslationWidth","EN","dayNames","short","long","monthNames","LOCALE_DEFAULT","DEFAULT_OPTIONS","startDayOfWeek","NativeDateService","options","i18n","setFechaLocaleData","format","isNaN","parse","getTime","Date","getDate","getMonth","getFullYear","getDay","SHORT","getMonthNameByIndex","getFechaMonthNames","getFechaDayNames","shiftDayOfWeekNames","fecha","num","createDate","month","setDate","min","getMonthEnd","year","setFullYear","splice","dayNamesShort","LONG","monthNamesShort","batch","batchSize","res","chunkIndex","floor","bound","producer","i","arr","DEFAULT_DATE_OPTIONS","holiday","CalendarDataService","dateService","createDayPickerData","dateRange","weeks","createDates","withBoundingMonths","createMonthPickerData","rows","columns","yearStart","getYearStart","monthRange","addMonth","createYearPickerData","yearRange","addYear","createDayPickerPagerData","startDate","endDate","numberOfDayPickers","getNumberOfMonths","createYearPickerPagerData","numberOfYears","getNumberOfYears","numberOfYearPickers","max","ceil","getYear","activeMonth","days","createDateRangeForMonth","withRangedDates","startOfWeekDayDiff","getStartOfWeekDayDiff","calendarRange","withRangedStartDates","withRangedStartEndDates","day","compareDatesSafe","isSameStartDate","isSameEndDate","isBetween","isShouldAddPrevBoundingMonth","addPrevBoundingMonth","isShouldAddNextBoundingMonth","addNextBoundingMonth","firstWeek","numberOfBoundingDates","unshift","createPrevBoundingDays","lastWeek","pop","createNextBoundingDays","daysInMonth","getNumberOfDaysInMonth","slice","startOfMonth","getMonthStart","getWeekStartDiff","getFirstDayOfWeek","getDayOfWeek","monthDate","DividerComponent","Divider","PICKER_ROWS","PICKER_COLUMNS","VIEWS_IN_PICKER","FORMAT_DAY","FORMAT_MONTH","FORMAT_YEAR","FORMAT_HEADER_DATE","FORMAT_HEADER_MONTH","FORMAT_HEADER_YEAR","BaseCalendarComponent","viewMode","startView","visibleDate","getSelectedDate","dataService","calendarDayPagerRef","calendarYearPagerRef","scrollToToday","onDaySelect","onMonthSelect","nextVisibleDate","onYearSelect","onDayPickerPagerSelect","onYearPickerPagerSelect","onPickerNavigationPress","onHeaderNavigationLeftPress","pagerRef","getCurrentPagerRef","onHeaderNavigationRightPress","shouldUpdateDayItem","shouldUpdateDayElement","getCalendarStyle","maxWidth","maxHeight","headerContainer","headerPaddingHorizontal","headerPaddingVertical","titleFontSize","titleFontWeight","titleLineHeight","titleColor","titleFontFamily","divider","dividerMarginVertical","daysHeaderContainer","rowMarginHorizontal","row","rowMinHeight","getWeekdayStyle","weekdayTextFontSize","weekdayTextFontWeight","weekdayTextLineHeight","weekdayTextColor","weekdayTextFontFamily","getIsDaySelected","isDaySelected","isMonthSelected","isSameMonthSafe","isYearSelected","isSameYearSafe","isDayDisabled","minDayStart","maxDayStart","isBetweenIncludingSafe","isDateFitsFilter","isMonthDisabled","minMonthStart","maxMonthStart","isYearDisabled","minYearStart","maxYearStart","getYearEnd","isDayToday","isSameDaySafe","isMonthToday","isYearToday","isDateFitsBounds","isDayPickerInViewPort","visibleDayPickerIndex","isYearPickerInViewPort","visibleYearPickerIndex","createHeaderTitle","getCalendarPagerIndex","isLateralNavigationAllowed","renderWeekdayElement","weekday","renderDayElement","renderDayIfNeeded","boundingMonth","renderDay","renderMonthElement","monthCell","renderYearElement","yearCell","renderDayPickerElement","getDayPickerData","renderDayPickerPagerElement","Fragment","getDayOfWeekNames","renderMonthPickerElement","renderMonth","renderYearPickerElement","renderYear","renderYearPickerPagerElement","renderPickerElement","renderCalendarFooter","renderFooter","renderCalendarHeader","titleSelector","aspectRatio","CalendarComponent","selectionChanged","disablingChanged","Calendar","CardComponent","headerStyles","bodyStyles","footerStyles","accentStyles","titleStyles","descriptionStyles","header","body","bodyPaddingVertical","bodyPaddingHorizontal","footer","footerPaddingVertical","footerPaddingHorizontal","titleMarginHorizontal","description","descriptionColor","descriptionMarginHorizontal","accent","accentBackgroundColor","accentHeight","renderDivider","renderHeader","headerStyle","accentStyle","descriptionStyle","renderBody","childrenStyles","Card","ListItemComponent","onLongPress","descriptionFontFamily","descriptionFontSize","descriptionFontWeight","descriptionLineHeight","accessoryMarginHorizontal","accessory","contentStyles","renderContentElementChildren","descriptionElement","renderDescriptionElement","renderAccessoryElement","accessoryElement","renderTemplateChildren","textAlign","ListItem","listItemRef","CardHeader","RangeDateService","createRangeForStart","createRangeForStartEnd","RangeCalendarComponent","rangeDateService","createRange","rangeChanged","rangeStartPlaceChanged","rangeEndPlaceChanged","RangeCalendar","CheckBoxComponent","onChange","checked","iconBorderRadius","outlineHeight","outlineBorderRadius","outlineBackgroundColor","highlightContainer","selectContainer","highlight","createHitSlopInsets","bottom","renderSelectIconElement","renderIndeterminateIconElement","indeterminate","selectContainerStyle","hitSlopInsets","hitSlop","CheckBox","checkboxRef","Point","x","y","Size","Frame","origin","other","zero","point","OffsetRect","Offsets","MARGIN","rawValue","MARGIN_HORIZONTAL","MARGIN_VERTICAL","MARGIN_LEFT","MARGIN_TOP","MARGIN_RIGHT","MARGIN_BOTTOM","offsetValue","parseString","applyToRect","rect","PopoverPlacements","typeOf","LEFT","TOP","RIGHT","BOTTOM","LEFT_START","LEFT_END","TOP_START","TOP_END","RIGHT_START","RIGHT_END","BOTTOM_START","BOTTOM_END","leftOf","centerVerticalOf","offsets","bounds","alignment","frame","fitsStart","fitsTop","fitsBottom","parent","family","fits","topOf","centerHorizontalOf","fitsLeft","fitsRight","rightOf","fitsEnd","bottomOf","PLACEMENT_DEFAULT","PopoverView","placement","derivedIndicatorStyle","isVertical","isStart","isEnd","isReverse","indicatorPrimaryRotate","indicatorSecondaryRotate","containerTranslate","indicatorTranslate","indicatorOffset","i18nVerticalIndicatorTranslate","containerStyle","contentStyle","rawPlacement","MeasureElement","onResult","node","findNodeHandle","UIManager","measureInWindow","w","h","window","Dimensions","bindToWindow","measuredElement","MeasureNode","onChildMeasure","tag","renderMeasuringElement","PLACEMENT_FAMILIES","PopoverPlacementService","preferredValue","findRecursive","families","oneOfCurrentFamily","findFromFamily","oneOfReversedFamily","reverse","firstTruthy","nextPlacement","preferredFrame","familyValue","familyFrame","WINDOW","WINDOW_BOUNDS","TAG_CHILD","TAG_CONTENT","PopoverComponent","placementService","handleVisibility","popoverId","updatePopoverElement","renderPopoverElement","popoverPlacement","popoverElement","popoverVisible","onMeasure","placementOptions","createPlacementOptions","showPopoverModal","createPlacement","popoverFrame","positionStyle","positionedPopoverElement","derivedStyle","measuringProps","popover","popoverInvisible","renderChildElement","child","opacity","Popover","BaseDatepickerComponent","getComponentStyles","popoverMarginHorizontal","indent","toggleVisible","dispatchActive","getComponentTitle","renderControlChildren","renderControl","popoverStyle","renderCalendar","placeholder","DatepickerComponent","formatDateToString","Datepicker","RangeDatepickerComponent","RangeDatepicker","ListComponent","listRef","scrollToEnd","getItemStyle","keyExtractor","itemStyle","itemElement","FlatList","List","MenuItemComponent","menuIndex","indicatorStyles","iconStyles","renderIcon","renderTitle","renderAccessory","restStyles","zIndex","MenuItem","menuItemRef","MAIN_ITEM_KEY","DIVIDER_ELEMENT_KEY","SUB_ITEMS_MEASURE_TAG","SubMenuComponent","subItemsVisible","subItemsHeight","subItemsAnimation","iconAnimation","subItemsExpandAnimate","spring","animateIcon","onMainItemPress","onSubItemPress","subItemsPaddingHorizontal","onSubMenuMeasure","getIsSelected","isMainItemDividerExist","isSubItemDividerExist","subItems","renderMainItemAccessory","animatedStyle","interpolate","inputRange","outputRange","renderMenuItem","isMainItem","onPressHandler","mainMenuItemAccessory","renderSubItemsInvisible","invisibleMenu","renderSubItems","sub","isSelected","dividerElement","prevState","mainItem","invisibleSubs","SubMenu","MenuService","tempIndex","MenuComponent","isDividerAbsent","areThereSubItems","setIndexes","ItemSeparatorComponent","Menu","DrawerComponent","renderMenu","showsVerticalScrollIndicator","bounces","menu","Drawer","DrawerHeaderFooter","SelectOptionComponent","onMultiSelectItemPress","renderDefaultItem","renderMultiSelectItem","multiSelectText","multiSelect","SelectOption","selectOptionRef","SelectGroupOptionComponent","itemPaddingHorizontal","getMainItemStatus","subItemsSelectedStatusArray","someSelected","some","everySelected","every","renderSubItem","option","strategy","returningOption","separators","renderSubItemsElements","renderMultiSelectMainElement","subItemsElements","subItem","itemStatus","renderDefaultMainElement","renderMainElement","mainElement","SelectGroupOption","SelectOptionsList","dropdownItem","SelectionStrategy","selectedOption","verifyData","option1","option2","hasOptionSubItems","subTexts","MultiSelectStrategy","isArray","selectOptionWithSubOptions","selectDefaultOption","compareOptions","removeOption","enabledItems","isSelectedOptionExist","findIndex","processData","Error","SingleSelectStrategy","MEASURED_CONTROL_TAG","SelectComponent","optionsListWidth","setVisibility","onItemSelect","onControlMeasure","createSelectionStrategy","handleVisibleChange","startIconAnimation","textStyles","placeholderStyles","optionsListStyles","labelStyle","placeholderMarginHorizontal","placeholderColor","placeholderFontSize","placeholderFontWeight","placeholderLineHeight","placeholderFontFamily","optionsList","optionsListMaxHeight","optionsListBorderRadius","optionsListBorderColor","optionsListBorderWidth","label","marginBottom","labelMarginBottom","labelColor","labelFontSize","labelFontWeight","labelLineHeight","labelFontFamily","renderLabelElement","renderDefaultIconElement","valueStyle","placeholderStyle","getPlaceholder","numberOfLines","ellipsizeMode","renderOptionsListElement","additionalOptionsListStyle","renderControlElement","controlStyle","optionsListElement","labelElement","controlElement","flexGrow","Select","selectRef","isVisible","throwPackNotFoundError","throwIconNotFoundError","pack","IconRegistryService","packs","registerIconPack","has","defaultPack","iconsPack","getPackOrThrow","getDefaultPack","getIconFromPack","getIconPack","shouldThrow","stopAnimation","toProps","getIconAnimation","animationConfig","release","registeredIcon","getIcon","toReactElement","IconRegistry","findDefaultIconPack","requestedPackIndex","registerIcons","defaultIconPack","register","setDefaultIconPack","defaultIcons","FlexStyleProps","InputComponent","textInputRef","focus","blur","isFocused","clear","onTextFieldFocus","onTextFieldBlur","onIconPress","allOf","allWithRest","inputContainerStyle","captionMarginTop","captionColor","captionFontSize","captionLineHeight","captionFontWeight","captionIconWidth","captionIconHeight","captionIconMarginRight","captionIconTintColor","inputContainer","captionContainer","marginTop","captionIcon","marginRight","captionLabel","renderIconTouchableElement","TouchableWithoutFeedback","renderCaptionElement","captionTextStyle","caption","renderCaptionIconElement","captionElement","captionIconElement","TextInput","placeholderTextColor","editable","flexShrink","flexBasis","Input","inputRef","LayoutComponent","Layout","initialWindowSize","initialContentSize","baseModalTestId","contentSize","getAbsoluteRelatedStyle","windowSize","renderBaseModal","absoluteRelatedStyle","testID","backdropStyle","modal","backdrop","renderMeasureNode","measureStyledModal","hiddenModal","OverflowMenuComponent","renderPopoverContentElement","initialNumToRender","contentElement","OverflowMenu","RadioComponent","Radio","radioRef","RadioGroupComponent","onRadioChange","itemMarginVertical","renderRadioElements","radioElements","RadioGroup","PI2","OFFSET_MIN","PI","OFFSET_MAX","BaseBezierEasing","bezier","StartArcEasing","progress","EndArcEasing","SpinnerAnimation","arcSize","createFrameRange","createContainerInterpolation","animationValue","toDegValue","createArcInterpolation","createArcInterpolationInputRange","createArcInterpolationOutputRange","animationFrames","boundedProgress","toStyleTransformProp","containerInterpolation","startArcInterpolation","endArcInterpolation","SpinnerComponent","containerSize","arc","renderArcElement","absolute","noOverflow","animating","animatingChanged","Spinner","TabBarComponent","tabIndicatorRef","indicatorBorderRadius","isTabSelected","TabBar","TabViewChildren","tabs","TabView","tabBarRef","onBarSelect","onPagerOffsetChange","tabBar","tabCount","onPagerSelect","tab","toArray","tabBarStyle","TabComponent","Tab","tabRef","ToggleComponent","onStartShouldSetPanResponder","onStartShouldSetPanResponderCapture","onMoveShouldSetPanResponderCapture","onPanResponderTerminationRequest","onPanResponderGrant","thumbTranslateAnimationActive","stopAnimations","animateThumbWidth","thumbWidth","animateEllipseScale","e","gestureState","toggle","thumbHeight","thumbBorderRadius","thumbBackgroundColor","toggleContainer","ellipseContainer","ellipse","thumb","thumbWidthAnimation","elevation","thumbTranslateAnimation","animateThumbTranslate","ellipseScaleAnimation","Toggle","toggleRef","TooltipComponent","childrenStyle","contentChildren","Tooltip","TopNavigationComponent","getAlignmentDependentStyles","containerCentered","titleContainer","titleContainerCentered","rightControlsContainer","rightControlsContainerStart","titleTextAlign","subtitleTextAlign","subtitleFontFamily","subtitleFontSize","subtitleLineHeight","subtitleFontWeight","subtitleColor","subtitle","leftControlContainer","leftControl","rightControls","subtitleStyle","renderActionElements","alignmentStyles","subtitleElement","leftControlElement","rightControlElements","TopNavigation","TopNavigationActionComponent","touchableProps","TopNavigationAction","topNavigationActionRef","AppTheme","setTheme","isDarkMode","ColorPaletteIcon","themes","sharingHeightContainer","menuVisible","setMenuVisible","themeContext","onThemesButtonPress","postLayoutChangeEvent","layoutChangeMessage","Platform","category","onThemeSelect","createThemeMenuItem","padding","optionsContainer","AvatarInlineStylingShowcase","uri","avatar","AvatarRemoteImagesShowcase","AvatarShapeShowcase","AvatarSimpleUsageShowcase","AvatarSizeShowcase","BottomNavigationInlineStylingShowcase","bottomNavigation","BottomNavigationSimpleUsageShowcase","BottomNavigationTabInlineStylingShowcase","tabTitle","BottomNavigationTabSimpleUsageShowcase","DashboardIcon","BottomNavigationTabWithExternalSourceIconShowcase","BottomNavigationTabWithIconShowcase","SettingsIcon","BottomNavigationWithIconsShowcase","BottomNavigationWithoutIndicatorShowcase","ButtonAppearancesShowcase","ButtonGhostShowcase","ButtonOutlineShowcase","ButtonSimpleUsageShowcase","ButtonSizeShowcase","ButtonStatusShowcase","StarIcon","ButtonWithIconShowcase","ButtonGroupAppearanceShowcase","buttonGroup","ButtonGroupInlineStylingShowcase","margin","ButtonGroupSimpleUsageShowcase","ButtonGroupSizeShowcase","ButtonGroupStatusShowcase","CalendarBoundingMonthShowcase","now","CalendarBoundsShowcase","CalendarCustomDayShowcase","dayContainer","CalendarCustomLocaleShowcase","CalendarFilterShowcase","moment","_rollupMoment","_moment","MomentDateService","setLocale","setMomentLocaleData","clone","add","months","years","utc","localeData","defaultFormat","firstDayOfWeek","endOf","startOf","isValid","momentLocaleData","longDateFormat","monthsShort","weekdaysShort","weekdays","CalendarMomentShowcase","CalendarSimpleUsageShowcase","CalendarStartDayOfWeekShowcase","RangeCalendarSimpleUsageShowcase","CustomHeader","CardCustomHeaderShowcase","card","bodyText","headerTextContainer","headerText","headerImage","Header","CardEvaHeaderShowcase","Footer","CardFooterShowcase","footerContainer","footerControl","CardHeaderFooterShowcase","CardSimpleUsageShowcase","CardStatusesShowcase","CheckboxIndeterminateShowcase","mainCheckboxChecked","mainCheckboxIndeterminate","checkbox1Checked","checkbox2Checked","checkbox3Checked","someChecked","everyChecked","checkbox","leftSpace","CheckboxInlineStylingShowcase","CheckboxSimpleUsageShowcase","checked1","CheckboxStatusShowcase","primaryChecked","successChecked","infoChecked","warningChecked","dangerChecked","basicChecked","CheckboxTextShowcase","DatepickerBoundingMonthShowcase","DatepickerCustomDayShowcase","DatepickerCustomLocaleShowcase","DatepickerFilterShowcase","DatepickerMomentShowcase","DatepickerSimpleUsageShowcase","CalendarIcon","DatepickerWithIconShowcase","RangeDatepickerSimpleUsageShowcase","DrawerCustomHeaderShowcase","level","DrawerFooterShowcase","PersonIcon","DrawerHeaderShowcase","DrawerHeaderFooterInlineStylingShowcase","drawerHeader","drawerHeaderTitle","drawerHeaderDescription","ProfileIcon","DrawerHeaderFooterSimpleUsageShowcase","LogoutIcon","LogoutButton","DrawerHeaderFooterWithAccessoryShowcase","DrawerHeaderFooterWithExternalSourceIconShowcase","NotificationBadge","DrawerNotificationBadgeItemShowcase","badge","DrawerSimpleUsageShowcase","MessagesIcon","DrawerWithIconsShowcase","IconAnimationShowcase","IconAnimationInfiniteShowcase","RemoteBulbIcon","IconExternalSourceShowcase","IconInlineStylingShowcase","IconSimpleUsageShowcase","IconWithinButtonShowcase","liked","IconWithinInputShowcase","secureTextEntry","onChangeText","InputInlineStylingShowcase","inputValue","input","inputText","inputLabel","inputCaption","InputSimpleUsageShowcase","InputSizeShowcase","smallValue","mediumValue","largeValue","InputStatusShowcase","primaryValue","successValue","infoValue","warningValue","dangerValue","InputWithCaptionShowcase","isValidInputValue","InputWithExternalSourceIconShowcase","InputWithIconShowcase","iconName","InputWithLabelShowcase","LayoutInlineStylingShowcase","additionalContainerStyle","LayoutLevelShowcase","LayoutSimpleUsageShowcase","SAMPLE_DATA","ListCompositeItemShowcase","renderItemAccessory","renderItemIcon","list","ListInlineStylingShowcase","contentContainerStyle","ListItemInlineStylingShowcase","listItem","listItemTitle","listItemDescription","ListItemSimpleUsageShowcase","ListItemWithAccessoryShowcase","RemoteStarIcon","ListItemWithExternalIconShowcase","ListItemWithIconShowcase","ListSimpleUsageShowcase","MenuAppearanceShowcase","MenuInlineStylingShowcase","menuItemTitle","MenuSimpleUsageShowcase","MenuWithIconsShowcase","MenuWithSubMenuShowcase","OverflowMenuExternalSourceIconsShowcase","OverflowMenuSimpleUsageShowcase","OverflowMenuWithDisabledItemsShowcase","OverflowMenuWithIconsShowcase","OverflowMenuWithoutDividerShowcase","PopoverPlacementShowcase","popoverContent","PopoverSimpleUsageShowcase","RadioInlineStylingShowcase","radio","radioText","RadioSimpleUsageShowcase","RadioStatusShowcase","RadioWithTextShowcase","RadioGroupSimpleUsageShowcase","SelectCustomIconShowcase","SelectInlineStylingShowcase","SelectMultiPreselectedInlineShowcase","SelectMultiPreselectedReferenceShowcase","SelectMultiSelectShowcase","SelectSimpleUsageShowcase","SelectStatusShowcase","selectedOptionPrimary","selectedOptionSuccess","selectedOptionInfo","selectedOptionDanger","selectedOptionWarning","selectedOptionBasic","SelectWithGroupsShowcase","SpinnerLoadingDataShowcase","loading","SpinnerSimpleUsageShowcase","SpinnerSizesShowcase","SpinnerStatusesShowcase","TabBarSimpleUsageShowcase","TabInlineStylingShowcase","TabSimpleUsageShowcase","TabViewInlineStylingShowcase","tabView","tabViewIndicator","TabViewLazyLoadingShowcase","TabViewSimpleUsageShowcase","TabWithExternalSourceIconShowcase","TabWithIconShowcase","TextAppearancesShowcase","TextCategoriesShowcase","TextInlineStylingShowcase","TextSimpleUsageShowcase","TextStatusesShowcase","ToggleInlineStylingShowcase","ToggleSimpleUsageShowcase","ToggleSizeShowcase","tinyChecked","smallChecked","mediumChecked","largeChecked","giantChecked","ToggleStatusShowcase","ToggleWithTextShowcase","TooltipInlineStylingShowcase","tooltipVisible","tooltipText","TooltipPlacementShowcase","TooltipSimpleUsageShowcase","InfoIcon","TooltipWithExternalSourceIconShowcase","TooltipWithIconShowcase","BackIcon","TopNavigationActionExternalSourceIconShowcase","EditIcon","TopNavigationActionInlineStylingShowcase","action","TopNavigationActionSimpleUsageShowcase","MenuIcon","BackAction","EditAction","MenuAction","TopNavigationActionsShowcase","onBackPress","TopNavigationAlignmentsShowcase","TopNavigationInlineStylingShowcase","topNavigation","TopNavigationSimpleUsageShowcase","TopNavigationWithMenuShowcase","ViewPagerInlineStylingShowcase","ViewPagerLazyLoadingShowcase","ViewPagerSimpleUsageShowcase","routes","AvatarInlineStyling","AvatarRemoteImages","AvatarShape","AvatarSimpleUsage","AvatarSize","BottomNavigationInlineStyling","BottomNavigationSimpleUsage","BottomNavigationTabInlineStyling","BottomNavigationTabSimpleUsage","BottomNavigationTabWithExternalSourceIcon","BottomNavigationTabWithIcon","BottomNavigationWithIcons","BottomNavigationWithoutIndicator","ButtonAppearances","ButtonGhost","ButtonOutline","ButtonSimpleUsage","ButtonSize","ButtonStatus","ButtonWithIcon","ButtonGroupAppearance","ButtonGroupInlineStyling","ButtonGroupSimpleUsage","ButtonGroupSize","ButtonGroupStatus","CalendarBoundingMonth","CalendarBounds","CalendarCustomDay","CalendarCustomLocale","CalendarFilter","CalendarMoment","CalendarSimpleUsage","CalendarStartDayOfWeek","RangeCalendarSimpleUsage","CardCustomHeader","CardEvaHeader","CardFooter","CardHeaderFooter","CardSimpleUsage","CardStatuses","CheckboxIndeterminate","CheckboxInlineStyling","CheckboxSimpleUsage","CheckboxStatus","CheckboxText","DatepickerBoundingMonth","DatepickerCustomDay","DatepickerCustomLocale","DatepickerFilter","DatepickerMoment","DatepickerSimpleUsage","DatepickerWithIcon","RangeDatepickerSimpleUsage","DrawerCustomHeader","DrawerFooter","DrawerHeader","DrawerHeaderFooterInlineStyling","DrawerHeaderFooterSimpleUsage","DrawerHeaderFooterWithAccessory","DrawerHeaderFooterWithExternalSourceIcon","DrawerNotificationBadgeItem","DrawerSimpleUsage","DrawerWithIcons","IconAnimation","IconAnimationInfinite","IconExternalSource","IconInlineStyling","IconSimpleUsage","IconWithinButton","IconWithinInput","InputInlineStyling","InputSimpleUsage","InputSize","InputStatus","InputWithCaption","InputWithExternalSourceIcon","InputWithIcon","InputWithLabel","LayoutInlineStyling","LayoutLevel","LayoutSimpleUsage","ListCompositeItem","ListInlineStyling","ListItemInlineStyling","ListItemSimpleUsage","ListItemWithAccessory","ListItemWithExternalIcon","ListItemWithIcon","ListSimpleUsage","MenuAppearance","MenuInlineStyling","MenuSimpleUsage","MenuWithIcons","MenuWithSubMenu","OverflowMenuExternalSourceIcons","OverflowMenuSimpleUsage","OverflowMenuWithDisabledItems","OverflowMenuWithIcons","OverflowMenuWithoutDivider","PopoverPlacement","PopoverSimpleUsage","RadioInlineStyling","RadioSimpleUsage","RadioStatus","RadioWithText","RadioGroupSimpleUsage","SelectCustomIcon","SelectInlineStyling","SelectMultiPreselectedInline","SelectMultiPreselectedReference","SelectMultiSelect","SelectSimpleUsage","SelectStatus","SelectWithGroups","SpinnerLoadingData","SpinnerSimpleUsage","SpinnerSizes","SpinnerStatuses","TabBarSimpleUsage","TabInlineStyling","TabSimpleUsage","TabViewInlineStyling","TabViewLazyLoading","TabViewSimpleUsage","TabWithExternalSourceIcon","TabWithIcon","TextAppearances","TextCategories","TextInlineStyling","TextSimpleUsage","TextStatuses","ToggleInlineStyling","ToggleSimpleUsage","ToggleSize","ToggleStatus","ToggleWithText","TooltipInlineStyling","TooltipPlacement","TooltipSimpleUsage","TooltipWithExternalSourceIcon","TooltipWithIcon","TopNavigationActionExternalSourceIcon","TopNavigationActionInlineStyling","TopNavigationActionSimpleUsage","TopNavigationActions","TopNavigationAlignments","TopNavigationInlineStyling","TopNavigationSimpleUsage","TopNavigationWithMenu","ViewPagerInlineStyling","ViewPagerLazyLoading","ViewPagerSimpleUsage","AppStack","createStackNavigator","headerMode","AppNavigator","createBrowserApp","history","MaterialIconsPack","IconProvider","MaterialIconRegistry","MaterialIcon","LoadingAnimation","animationCompleted","isLoaded","triggerAnimation","image","resizeMode","ApplicationLoader","loaded","SplashScreen","Font","tasks","images","Asset","Promise","startAsync","onFinish","onError","autoHideSplash","fonts","assets","loadFonts","loadImages","Light","Dark","applicationProviderConfig","themeContextProviderConfig","splash","webpackContext","req","webpackContextResolve","__webpack_require__","o","code","resolve"],"mappings":"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,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,gBAAiB,IACjB,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,UAAW,IACX,aAAc,IACd,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,UAAW,IACX,aAAc,IACd,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,YAAa,IACb,eAAgB,IAChB,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,QAAS,IACT,WAAY,IACZ,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,UAAW,IACX,aAAc,IACd,QAAS,IACT,WAAY,IACZ,OAAQ,IACR,UAAW,IACX,QAAS,IACT,WAAY,IACZ,QAAS,IACT,aAAc,IACd,gBAAiB,IACjB,WAAY,IACZ,UAAW,IACX,aAAc,IACd,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,YAAa,IACb,eAAgB,IAChB,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,gBAAiB,IACjB,OAAQ,IACR,UAAW,IACX,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,KAIf,SAASk1D,EAAeC,GACvB,IAAIh1C,EAAKi1C,EAAsBD,GAC/B,OAAOE,EAAoBl1C,GAE5B,SAASi1C,EAAsBD,GAC9B,IAAIE,EAAoBC,EAAEt1D,EAAKm1D,GAAM,CACpC,IAAI7hB,EAAI,IAAI5N,MAAM,uBAAyByvB,EAAM,KAEjD,MADA7hB,EAAEiiB,KAAO,mBACHjiB,EAEP,OAAOtzC,EAAIm1D,GAEZD,EAAex4D,KAAO,WACrB,OAAOD,OAAOC,KAAKsD,IAEpBk1D,EAAeM,QAAUJ,EACzBz6D,EAAOC,QAAUs6D,EACjBA,EAAe/0C,GAAK,K,oBCnRpBxlB,EAAOC,QAAU,IAA0B,gC,oBCA3CD,EAAOC,QAAU,IAA0B,8B","file":"static/js/app.c0b7cebc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/splash.4b06b531.png\";","export const mapping = require('./mapping.json');\nexport const light = require('./themes/light.json');\nexport const dark = require('./themes/dark.json');\n","import React from 'react';\nimport { SvgProps } from 'react-native-svg';\nimport { IconProvider } from 'react-native-ui-kitten';\n\ntype IconElement = React.ReactElement<SvgProps>;\ntype IconComponent = React.ComponentType<SvgProps>;\n\nexport class EvaIcon implements IconProvider<SvgProps> {\n\n  constructor(private content: IconComponent) {\n  }\n\n  public toReactElement(props: SvgProps): IconElement {\n    const Icon: IconComponent = this.content;\n\n    // @ts-ignore - Eva maps icon color to `tintColor`\n    const { tintColor, ...restProps } = props;\n\n    return (\n      <Icon\n        fill={tintColor}\n        {...restProps}\n      />\n    );\n  }\n}\n","import { IconPack } from 'react-native-ui-kitten';\nimport { SvgProps } from 'react-native-svg';\nimport { createIconsMap } from './createIconsMap';\n\nexport const EvaIconsPack: IconPack<SvgProps> = {\n  name: 'eva',\n  icons: createIconsMap(),\n};\n\n","import { IconProvider } from 'react-native-ui-kitten';\nimport { SvgProps } from 'react-native-svg';\nimport { findIconByName } from 'react-native-eva-icons/icons';\nimport { EvaIcon } from './evaIcon.component';\n\nexport const createIconsMap = (): { [key: string]: IconProvider<SvgProps> } => {\n  return new Proxy({}, {\n    get(target: {}, name: string): IconProvider<SvgProps> {\n      return new EvaIcon(findIconByName(name));\n    },\n  });\n};\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { ThemeType } from './type';\n\nconst SYMBOL_REFERENCE: string = '$';\n\n/**\n * @param name: string - theme property name, like `backgroundColor`\n * @param theme: ThemeType - theme\n * @param fallback: any - fallback value\n *\n * @return any. Theme property value if it presents in theme, fallback otherwise\n */\nexport function getThemeValue(name: string, theme: ThemeType, fallback?: any): any | undefined {\n  if (isReferenceKey(name)) {\n    const themeKey: string = toThemeKey(name);\n\n    return findThemeValue(themeKey, theme) || fallback;\n  }\n\n  return findThemeValue(name, theme) || fallback;\n}\n\nfunction findThemeValue(name: string, theme: ThemeType): any | undefined {\n  const value: any = theme[name];\n\n  if (isReferenceKey(value)) {\n    const themeKey: string = toThemeKey(value);\n\n    return findThemeValue(themeKey, theme);\n  }\n\n  return value;\n}\n\n/**\n * @returns true if theme value references to another\n */\nfunction isReferenceKey(value: any): boolean {\n  return `${value}`.startsWith(SYMBOL_REFERENCE);\n}\n\n/**\n * Transforms reference key to theme key\n */\nfunction toThemeKey(value: any): string {\n  return `${value}`.substring(1);\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { ThemedStyleType } from '@eva-design/dss';\nimport { StyleType } from './type';\nimport { getThemeValue } from '../theme/theme.service';\nimport { ThemeType } from '../theme/type';\n\nexport function createThemedStyle(mapping: ThemedStyleType, theme: ThemeType): StyleType {\n  return Object.keys(mapping).reduce((acc: StyleType, current: string): StyleType => {\n    const mappingValue: any = mapping[current];\n\n    return { ...acc, [current]: getThemeValue(mappingValue, theme, mappingValue) };\n  }, {});\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport {\n  ControlMetaType,\n  ControlThemedStyleType,\n  ThemedStyleType,\n  ThemeStyleType,\n} from '@eva-design/dss';\nimport {\n  ContextProps,\n  StyledComponentProps,\n} from './styleConsumer.component';\nimport { createThemedStyle } from './style.service';\nimport { Interaction } from './type';\n\nconst SEPARATOR_MAPPING_ENTRY: string = '.';\n\ninterface StyleInfo {\n  appearance: string;\n  variants: string[];\n  states: string[];\n}\n\nexport class StyleConsumerService {\n\n  private readonly name: string;\n  private readonly meta: ControlMetaType;\n\n  constructor(name: string, context: ContextProps) {\n    this.name = name;\n\n    this.meta = this.safe(context.style[name], (generatedConfig): ControlMetaType => {\n      return generatedConfig.meta;\n    });\n\n    if (!this.meta) {\n      const docRoot: string = 'https://akveo.github.io/react-native-ui-kitten/docs';\n\n      const message: string = [\n        `\\n${this.name}: unsupported configuration.`,\n        'Using UI Kitten components is only possible with configuring ApplicationProvider.',\n        `📖 Documentation: ${docRoot}/guides/install-into-existing-app#configure-application-root`,\n        '\\nIn case you have all in place, there might be an incorrect usage of a \"styled\" function.',\n        `📖 Documentation: ${docRoot}/design-system/custom-component-mapping`,\n      ].join('\\n');\n\n      console.error(message);\n    }\n  }\n\n  public createDefaultProps<P extends object>(): StyledComponentProps {\n    const appearance: string = this.getDefaultAppearance();\n    const variants: { [key: string]: string } = this.getDefaultVariants();\n    const states: { [key: string]: boolean } = this.getDefaultStates();\n\n    return { appearance, ...variants, ...states };\n  }\n\n  public withStyledProps<P extends object>(source: P,\n                                           context: ContextProps,\n                                           interaction: Interaction[]): P & StyledComponentProps {\n\n    const styleInfo: StyleInfo = this.getStyleInfo(source, interaction);\n\n    const generatedMapping: ThemedStyleType = this.getGeneratedStyleMapping(context.style, styleInfo);\n\n    if (!generatedMapping) {\n      const docRoot: string = 'https://akveo.github.io/react-native-ui-kitten/docs';\n\n      const message: string = [\n        `${this.name}: unsupported configuration.`,\n        `Check one of the following prop values ${JSON.stringify(styleInfo, null, 2)}`,\n        `📖 Documentation: ${docRoot}/components/${this.name.toLowerCase()}/api`,\n      ].join('\\n');\n\n      console.warn(message);\n\n      return this.withStyledProps({ ...source, ...this.createDefaultProps() }, context, interaction);\n    }\n\n    const mapping = this.withValidParameters(generatedMapping);\n\n    return {\n      ...source,\n      theme: context.theme,\n      themedStyle: createThemedStyle(mapping, context.theme),\n    };\n  }\n\n  private getGeneratedStyleMapping<P extends StyledComponentProps>(style: ThemeStyleType,\n                                                                   info: StyleInfo): ThemedStyleType {\n\n    return this.safe(style[this.name], (componentStyles: ControlThemedStyleType): ThemedStyleType => {\n      const styleKeys: string[] = Object.keys(componentStyles.styles);\n      const query: string = this.findGeneratedQuery(info, styleKeys);\n\n      return componentStyles.styles[query];\n    });\n  }\n\n  private withValidParameters(mapping: ThemedStyleType): ThemedStyleType {\n    const invalidParameters: string[] = [];\n\n    Object.keys(mapping).forEach((key: string) => {\n      if (!Object.keys(this.meta.parameters).includes(key)) {\n        invalidParameters.push(key);\n        delete mapping[key];\n      }\n    });\n\n    if (invalidParameters.length !== 0) {\n      const docRoot: string = 'https://akveo.github.io/react-native-ui-kitten/docs';\n\n      const message: string = [\n        `${this.name}: unsupported configuration.`,\n        `Unable to apply ${invalidParameters}`,\n        'There might be an incorrect usage of mapping',\n        `📖 Documentation: ${docRoot}/design-system/custom-component-mapping`,\n      ].join('\\n');\n\n      console.warn(message);\n    }\n\n    return mapping;\n  }\n\n  private getStyleInfo<P extends StyledComponentProps>(props: P, interaction: Interaction[]): StyleInfo {\n    const variantProps: Partial<P> = this.getDerivedVariants(this.meta, props);\n    const stateProps: Partial<P> = this.getDerivedStates(this.meta, props);\n\n    const variants: string[] = Object.keys(variantProps).map((variant: string): string => {\n      return variantProps[variant];\n    });\n\n    const states: string[] = Object.keys(stateProps);\n\n    return {\n      appearance: props.appearance,\n      variants: variants,\n      states: [...states, ...interaction],\n    };\n  }\n\n  private getDefaultAppearance(): string {\n    const matches: string[] = Object.keys(this.meta.appearances).filter((appearance: string): boolean => {\n      return this.meta.appearances[appearance].default === true;\n    });\n\n    return matches[matches.length - 1];\n  }\n\n  private getDefaultVariants(): { [key: string]: any } {\n    return this.transformObject(this.meta.variantGroups, (variants, group: string): string | undefined => {\n      return Object.keys(variants[group]).find((variant: string): boolean => {\n\n        return variants[group][variant].default === true;\n      });\n    });\n  }\n\n  private getDefaultStates(): { [key: string]: any } {\n    return this.transformObject(this.meta.states, (states, state: string): boolean | undefined => {\n      const isDefault: boolean = states[state].default === true;\n\n      return isDefault ? isDefault : undefined;\n    });\n  }\n\n  private getDerivedVariants<P extends StyledComponentProps>(meta: ControlMetaType, props: P): Partial<P> {\n    return this.transformObject(props, (p: P, prop: string): string | undefined => {\n      const isVariant: boolean = Object.keys(meta.variantGroups).includes(prop);\n\n      return isVariant ? p[prop] : undefined;\n    });\n  }\n\n  private getDerivedStates<P extends StyledComponentProps>(meta: ControlMetaType, props: P): Partial<P> {\n    return this.transformObject(props, (p: P, prop: string): boolean => {\n      const isState: boolean = Object.keys(meta.states).includes(prop);\n      const isAssigned: boolean = p[prop] === true;\n\n      return isState && isAssigned;\n    });\n  }\n\n  /**\n   * Iterates throw `value` object keys and fills it values with values provided by `transform` callback\n   * If `transform` returns `undefined`, then appends nothing\n   *\n   * @param value (V extends object) - object to transform\n   * @param transform - object key transformation callback\n   */\n  private transformObject<V extends object>(value: V, transform: (value: V, key: string) => any): Partial<V> {\n    return Object.keys(value).reduce((acc: Partial<V>, key: string): any => {\n      const nextValue: any = transform(value, key);\n\n      return nextValue ? {\n        ...acc,\n        [key]: nextValue,\n      } : acc;\n    }, {});\n  }\n\n  /**\n   * Finds identical keys across `source` keys array\n   *\n   * Example:\n   *\n   * source = ['default.error.small.checked', ...]\n   * info = { appearance: 'default', variants: ['small', 'error'], states: ['checked'] }\n   *\n   * will return ['default', 'error', 'small', 'checked']\n   *\n   * @param info (StyleInfo) - component style info\n   * @param source (string[]) - array of style keys\n   *\n   * @return (string | undefined) - key identical to some of `source` keys if presents\n   */\n  private findGeneratedQuery(info: StyleInfo, source: string[]): string | undefined {\n    const query: string[] = [\n      info.appearance,\n      ...info.variants,\n      ...info.states,\n    ];\n\n    const matches: string[] = source.filter((key: string): boolean => {\n      const keyQuery: string[] = key.split(SEPARATOR_MAPPING_ENTRY);\n\n      return this.compareArrays(query, keyQuery);\n    });\n\n    return matches[0];\n  }\n\n  /**\n   * @param lhs (string[]) - comparable array\n   * @param rhs (string[]) - comparing array\n   *\n   * @return true if all of lhs keys are included in rhs\n   */\n  private compareArrays(lhs: string[], rhs: string[]): boolean {\n    if (lhs.length !== rhs.length) {\n      return false;\n    }\n\n    return lhs.reduce((acc: boolean, current: string): boolean => acc && rhs.includes(current), true);\n  }\n\n  /**\n   * Safely retrieves R value of T object with reducer\n   *\n   * @param value (T | undefined) - unsafe object which should be processed\n   * @param reducer ((T) => R) - `value` processing lambda. Called if `value` is not `undefined`\n   * @param fallback (R) - fallback value to return. Optional\n   *\n   * @return (R | undefined) - object returned by `reducer` if `value` is not `undefined`, `fallback` otherwise\n   **/\n  private safe<T, R>(value: T | undefined, reducer: (value: T) => R, fallback?: R): R | undefined {\n    if (value) {\n      return reducer(value);\n    }\n\n    return fallback;\n  }\n}\n","import React from 'react';\nimport { ThemeStyleType } from '@eva-design/dss';\n\nconst defaultValue: ThemeStyleType = {};\n\nexport const MappingContext: React.Context<ThemeStyleType> = React.createContext(defaultValue);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport { ThemeType } from './type';\n\nconst defaultValue: ThemeType = {};\n\nexport const ThemeContext: React.Context<ThemeType> = React.createContext(defaultValue);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { ThemeStyleType } from '@eva-design/dss';\nimport { StyleConsumerService } from './styleConsumer.service';\nimport {\n  Interaction,\n  StyleType,\n} from './type';\nimport { MappingContext } from '../mapping/mappingContext';\nimport { ThemeContext } from '../theme/themeContext';\nimport { ThemeType } from '../theme/type';\n\ninterface PrivateProps<T> {\n  forwardedRef?: React.Ref<T>;\n}\n\nexport interface StyledComponentProps {\n  appearance?: string;\n  theme?: ThemeType;\n  themedStyle?: StyleType;\n  dispatch?: (interaction: Interaction[]) => void;\n}\n\ninterface State {\n  interaction: Interaction[];\n}\n\nexport interface ContextProps {\n  style: ThemeStyleType;\n  theme: ThemeType;\n}\n\nexport type StyledComponentClass<P> = React.ComponentClass<StyledComponentProps & P>;\n\n/**\n * `styled` is a High Order Function which is used to apply style mapping on component.\n *\n * Requires component to have `styledComponentName` string property which defines\n * corresponding component name in mapping. (e.g 'Button' for Button component).\n * Returns component class which can be used as styled component.\n *\n * @property {string} appearance - Determines style appearance of component. Default is provided by mapping.\n *\n * @property {ThemeType} theme - Determines theme used to style component.\n *\n * @property {StyleType} themedStyle - Determines component style for it's current state.\n *\n * @property {(interaction: Interaction[]) => void} dispatch - Determines function\n * for dispatching current state of component. This is designed to be used as style request function.\n * Calls component re-render if style for requested state differ from current.\n *\n * @param Component - Type: {React.ComponentClass}. Determines class or functional component to be styled.\n *\n * @overview-example Declaring Styled Component\n *\n * ```\n * import React from 'react';\n * import { TouchableOpacity } from 'react-native';\n * import { styled, Interaction } from 'react-native-ui-kitten';\n *\n * class Button extends React.Component {\n *\n *   // Define component name used in `mapping`\n *   static styledComponentName = 'Button';\n *\n *   onPressIn = (e) => {\n *     // Request styles for `active` state and re-render\n *\n *     this.props.dispatch([Interaction.ACTIVE]);\n *\n *     if(this.props.onPressIn) {\n *       this.props.onPressIn(e);\n *     }\n *   };\n *\n *   onPressOut = (e) => {\n *     // Request styles for default state and re-render\n *\n *     this.props.dispatch([]);\n *\n *     if(this.props.onPressOut) {\n *       this.props.onPressOut(e);\n *     }\n *   };\n *\n *   render() {\n *     // Retrieve styles for current state from props (provided with themedStyle prop)\n *     // And apply it with saving priority of `style` prop\n *\n *     const { style, themedStyle, ...restProps } = this.props;\n *\n *     return (\n *       <TouchableOpacity\n *         {...restProps}\n *         style={[themedStyle, style]}\n *         onPressIn={this.onPressIn}\n *         onPressOut={this.onPressOut}\n *       />\n *     );\n *   }\n * }\n *\n * export const StyledButton = styled(Button);\n * ```\n *\n * @overview-example Styled Component Usage\n *\n * ```\n * import React from 'react';\n * import { StyledButton } from './path-to/styledButton.component';\n *\n * export const StyledButtonShowcase = (props) => (\n *   <StyledButton {...props}/>\n * );\n * ```\n */\nexport const styled = <P extends object>(Component: React.ComponentType<P>): StyledComponentClass<P> => {\n\n  // @ts-ignore\n  if (!Component.styledComponentName) {\n    console.warn('Styled components should specify corresponding style name.');\n    return null;\n  }\n\n  type WrappingProps = PrivateProps<WrappedElementInstance> & WrappedProps;\n  type WrappedProps = StyledComponentProps & P;\n  type WrappingElement = React.ReactElement<WrappingProps>;\n  type WrappedElement = React.ReactElement<WrappedProps>;\n  type WrappedElementInstance = React.ReactInstance;\n\n  class Wrapper extends React.Component<WrappingProps, State> {\n\n    public state: State = {\n      interaction: [],\n    };\n\n    private init: boolean = false;\n\n    // Yes. This is not static because it is calculated once we got some meta from style context.\n    private defaultProps: StyledComponentProps;\n    private service: StyleConsumerService;\n\n    private onInit = (context: ContextProps) => {\n\n      // @ts-ignore\n      this.service = new StyleConsumerService(Component.styledComponentName, context);\n      this.defaultProps = this.service.createDefaultProps();\n\n      this.init = true;\n    };\n\n    private onDispatch = (interaction: Interaction[]) => {\n      this.setState({ interaction });\n    };\n\n    private withStyledProps = (source: P, context: ContextProps): WrappedProps => {\n      const { interaction } = this.state;\n\n      const props: WrappingProps = { ...this.defaultProps, ...source };\n\n      return this.service.withStyledProps(props, context, interaction);\n    };\n\n    private renderWrappedElement = (context: ContextProps): WrappedElement => {\n      if (!this.init) {\n        this.onInit(context);\n      }\n\n      const { forwardedRef, ...restProps } = this.props;\n      const props: P & StyledComponentProps = this.withStyledProps(restProps as P, context);\n\n      return (\n        <Component\n          {...props}\n          ref={forwardedRef}\n          dispatch={this.onDispatch}\n        />\n      );\n    };\n\n    public render(): React.ReactNode {\n      const StyledElement = this.renderWrappedElement;\n\n      return (\n        <MappingContext.Consumer>{(styles: ThemeStyleType): WrappedElement => (\n          <ThemeContext.Consumer>{(theme: ThemeType): WrappedElement => (\n            <StyledElement style={styles} theme={theme}/>\n          )}</ThemeContext.Consumer>\n        )}</MappingContext.Consumer>\n      );\n    }\n  }\n\n  const WrappingElement = (props: WrappingProps, ref: React.Ref<WrappedElementInstance>): WrappingElement => {\n    return (\n      // @ts-ignore\n\n      <Wrapper\n        {...props}\n        forwardedRef={ref}\n      />\n    );\n  };\n\n  const ResultComponent = React.forwardRef<WrappedElementInstance, WrappingProps>(WrappingElement);\n\n  ResultComponent.displayName = Component.displayName || Component.name;\n\n  // @ts-ignore\n  hoistNonReactStatics(ResultComponent, Component);\n\n  // @ts-ignore\n  return ResultComponent;\n};\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { ThemeContext } from './themeContext';\nimport {\n  StyleSheetType,\n  ThemedStyleType,\n  ThemeType,\n} from './type';\nimport { createThemedStyle } from '../style/style.service';\nimport { StyleType } from '@kitten/theme';\n\ninterface PrivateProps<T> {\n  forwardedRef?: React.RefObject<T>;\n}\n\nexport interface ThemedComponentProps {\n  theme?: ThemeType;\n  themedStyle?: ThemedStyleType | undefined;\n}\n\nexport type CreateStylesFunction = (theme: ThemeType) => StyleSheetType;\n\nexport interface Context {\n  theme: ThemeType;\n}\n\nexport type ThemedComponentClass<P> = React.ComponentClass<ThemedComponentProps & P>;\n\n/**\n * `withStyles` is a High Order Function which is used to create themed style for non-styled component.\n * Basically used when need to use theme variable somewhere.\n * Returns component class which can be used as themed component.\n *\n * @property {ThemeType} theme - Determines theme used to style component.\n *\n * @property {StyleType} themedStyle - Determines component style for it's current state.\n *\n * @param Component - Type: {React.ComponentClass}. Determines class of component to be themed.\n *\n * @param createStyles - Type: {(theme: ThemeType) => any}. Determines arrow function used to create styles.\n *\n * @overview-example Declaring Themed Component\n *\n * ```\n * import React from 'react';\n * import { TouchableOpacity } from 'react-native';\n * import { withStyles } from 'react-native-ui-kitten';\n *\n * class Button extends React.Component {\n *\n *   render() {\n *     // Retrieve styles from props (provided with themedStyle prop)\n *     // And apply it with saving priority of `style` prop\n *\n *     const { style, themedStyle, ...restProps } = this.props;\n *\n *     return (\n *       <TouchableOpacity\n *         {...restProps}\n *         style={[themedStyle, style]}\n *       />\n *     );\n *   }\n * }\n *\n * export const ThemedButton = withStyles(Button, (theme) => ({\n *   backgroundColor: theme['color-primary-default'],\n * }));\n * ```\n *\n * @overview-example Themed Component Usage\n *\n * ```\n * import React from 'react';\n * import { ThemedButton } from './path-to/themedButton.component';\n *\n * export const ThemedButtonShowcase = (props) => (\n *   <ThemedButton {...props}/>\n * );\n * ```\n */\nexport const withStyles = <P extends object>(Component: React.ComponentType<P>,\n                                             createStyles?: CreateStylesFunction): ThemedComponentClass<P> => {\n\n  type WrappingProps = PrivateProps<WrappedElementInstance> & WrappedProps;\n  type WrappedProps = ThemedComponentProps & P;\n  type WrappingElement = React.ReactElement<WrappingProps>;\n  type WrappedElement = React.ReactElement<WrappedProps>;\n  type WrappedElementInstance = React.ReactInstance;\n\n  class Wrapper extends React.Component<WrappingProps> {\n\n    private createThemedStyles = (style: ThemedStyleType, theme: ThemeType): ThemedStyleType => {\n      return Object.keys(style).reduce((acc: StyleType, current: string): ThemedStyleType => {\n        return { ...acc, [current]: createThemedStyle(style[current], theme) };\n      }, {});\n    };\n\n    private withThemedProps = (source: P, context: Context): WrappedProps => {\n      const style: ThemedStyleType = createStyles ? createStyles(context.theme) : {};\n\n      return {\n        ...source,\n        theme: context.theme,\n        themedStyle: this.createThemedStyles(style, context.theme),\n      };\n    };\n\n    private renderWrappedElement = (context: Context): WrappedElement => {\n      const { forwardedRef, ...restProps } = this.props;\n      const props: WrappedProps = this.withThemedProps(restProps as P, context);\n\n      return (\n        <Component\n          {...props}\n          ref={forwardedRef}\n        />\n      );\n    };\n\n    public render(): React.ReactNode {\n      const ThemedElement = this.renderWrappedElement;\n\n      return (\n        <ThemeContext.Consumer>{(theme: ThemeType): React.ReactElement<P> => (\n          <ThemedElement theme={theme}/>\n        )}</ThemeContext.Consumer>\n      );\n    }\n  }\n\n  const WrappingElement = (props: WrappingProps, ref: React.Ref<WrappedElementInstance>): WrappingElement => {\n    return (\n      // @ts-ignore\n\n      <Wrapper\n        {...props}\n        forwardedRef={ref}\n      />\n    );\n  };\n\n  const ThemedComponent = React.forwardRef<WrappedElementInstance, WrappingProps>(WrappingElement);\n\n  ThemedComponent.displayName = Component.displayName || Component.name;\n\n  // @ts-ignore\n  hoistNonReactStatics(ThemedComponent, Component);\n\n  // @ts-ignore\n  return ThemedComponent;\n};\n","/**\n * Safely retrieves R value of T object with reducer\n *\n * @param value (T | undefined) - unsafe object which should be processed\n * @param reducer ((T) => R) - `value` processing lambda. Called if `value` is not `undefined`\n *\n * @return (R | undefined) - object returned by `reducer` if `value` is not `undefined`, `undefined` otherwise\n **/\nexport function safe<T, R>(value: T | undefined, reducer: (value: T) => R): R | undefined {\n  if (value) {\n    return reducer(value);\n  }\n  return undefined;\n}\n\n/**\n * Maps 2-dim array to 1-dim\n *\n * @param params (T[][]) - 2-dim array\n *\n * @return 1-dim array\n */\nexport function flatten<T>(params: T[][]): T[] {\n  return [].concat(...params);\n}\n\n/**\n * Removes all duplicates from array\n *\n * @param params (T[]) - array with possible duplicate values\n *\n * @return (T[]) - processed array\n */\nexport function noDuplicates<T>(params: T[]): T[] {\n  return [...new Set(params)];\n}\n\n\n/**\n * Removes null and undefined values from array\n *\n * @param params (T[]) - array with possible null values\n *\n * @return (T[]) - processed array\n */\nexport function noNulls<T>(params: T[]): T[] {\n  return params.filter(Boolean);\n}\n\n/**\n * Returns Object with string keys from array type [string, IndexSignatureBase]\n *\n * @param array like [string, IndexSignatureBase]\n *\n * @return object with string keys and IndexSignatureBase values\n */\nexport function toObject(array: [string, any][]): any {\n  return array.reduce((p, c) => {\n    if (p && p.hasOwnProperty(c[0])) {\n      p[c[0]] = { ...p[c[0]], ...c[1] };\n    } else {\n      p[c[0]] = c[1];\n    }\n    return p;\n  }, {});\n}\n","import {\n  ThemeMappingType,\n  ControlMappingType,\n  AppearanceMappingType,\n  MappingType,\n  StatelessMappingType,\n} from '@eva-design/dss';\nimport { safe } from '../common';\n\nexport function getComponentDefaultAppearance(mapping: ThemeMappingType,\n                                              component: string): string | undefined {\n\n  const componentMapping: ControlMappingType = getComponentMapping(mapping, component);\n\n  return safe(componentMapping, (value: ControlMappingType): string => {\n    const { appearances } = value.meta;\n\n    return Object.keys(appearances).find((appearance: string): boolean => {\n      return appearances[appearance].default === true;\n    });\n  });\n}\n\nexport function getComponentDefaultVariants(mapping: ThemeMappingType,\n                                            component: string): string[] | undefined {\n\n  const componentMapping: ControlMappingType = getComponentMapping(mapping, component);\n\n  return safe(componentMapping, (value: ControlMappingType): string[] => {\n    const { variantGroups } = value.meta;\n\n    return Object.keys(variantGroups).map((group: string): string => {\n      return Object.keys(variantGroups[group]).find((variant: string): boolean => {\n        return variantGroups[group][variant].default === true;\n      });\n    });\n  });\n}\n\nexport function getComponentDefaultState(mapping: ThemeMappingType,\n                                         component: string): string | undefined {\n\n  const componentMapping: ControlMappingType = getComponentMapping(mapping, component);\n\n  return safe(componentMapping, (value: ControlMappingType): string => {\n    const { states } = value.meta;\n\n    return Object.keys(states).find((state: string): boolean => {\n      return states[state].default === true;\n    });\n  });\n}\n\nexport function getComponentVariantGroups(mapping: ThemeMappingType,\n                                          component: string): string[] | undefined {\n\n  const componentMapping: ControlMappingType = getComponentMapping(mapping, component);\n\n  return safe(componentMapping, (value: ControlMappingType): string[] => {\n    const { variantGroups } = value.meta;\n\n    return Object.keys(variantGroups);\n  });\n}\n\nexport function getComponentVariants(mapping: ThemeMappingType,\n                                     component: string): string[][] | undefined {\n\n  const componentMapping: ControlMappingType = getComponentMapping(mapping, component);\n\n  return safe(componentMapping, (value: ControlMappingType): string[][] => {\n    const { variantGroups } = value.meta;\n\n    return Object.keys(variantGroups).map((group: string): string[] => {\n      return Object.keys(variantGroups[group]);\n    });\n  });\n}\n\nexport function getComponentStates(mapping: ThemeMappingType,\n                                   component: string): string[] | undefined {\n\n  const componentMapping: ControlMappingType = getComponentMapping(mapping, component);\n\n  return safe(componentMapping, (value: ControlMappingType): string[] => {\n    const { states } = value.meta;\n\n    return Object.keys(states);\n  });\n}\n\nexport function getStateAppearanceMapping(mapping: ThemeMappingType,\n                                          component: string,\n                                          appearance: string,\n                                          state: string): StatelessMappingType | undefined {\n\n  const appearanceMapping: MappingType = getAppearanceMapping(mapping, component, appearance);\n\n  return safe(appearanceMapping, (value: MappingType): StatelessMappingType => {\n    return getStateMapping(value, state);\n  });\n}\n\nexport function getStatelessAppearanceMapping(mapping: ThemeMappingType,\n                                              component: string,\n                                              appearance: string): StatelessMappingType | undefined {\n\n  const appearanceMapping: MappingType = getAppearanceMapping(mapping, component, appearance);\n\n  return safe(appearanceMapping, (value: MappingType): StatelessMappingType => {\n    const { state, ...params } = value;\n\n    return params as StatelessMappingType;\n  });\n}\n\nexport function getStateVariantMapping(mapping: ThemeMappingType,\n                                       component: string,\n                                       appearance: string,\n                                       variant: string,\n                                       state: string): MappingType | undefined {\n\n  const variantMapping: MappingType = getVariantMapping(mapping, component, appearance, variant);\n\n  return safe(variantMapping, (value: MappingType): MappingType => {\n    return getStateMapping(value, state);\n  });\n}\n\nexport function getStatelessVariantMapping(mapping: ThemeMappingType,\n                                           component: string,\n                                           appearance: string,\n                                           variant: string): StatelessMappingType | undefined {\n\n  const variantMapping: MappingType = getVariantMapping(mapping, component, appearance, variant);\n\n  return safe(variantMapping, (value: MappingType): StatelessMappingType => {\n    const { state, ...params } = value;\n\n    return params as StatelessMappingType;\n  });\n}\n\nexport function getComponentMapping(mapping: ThemeMappingType,\n                                    component: string): ControlMappingType | undefined {\n\n  return mapping[component];\n}\n\nfunction getAppearance(mapping: ThemeMappingType,\n                       component: string,\n                       appearance: string): AppearanceMappingType | undefined {\n\n  const componentMapping: ControlMappingType = getComponentMapping(mapping, component);\n\n  return safe(componentMapping, (value: ControlMappingType): AppearanceMappingType => {\n    return value.appearances[appearance];\n  });\n}\n\nfunction getAppearanceMapping(mapping: ThemeMappingType,\n                              component: string,\n                              appearance: string): MappingType | undefined {\n\n  const appearanceConfig: AppearanceMappingType = getAppearance(mapping, component, appearance);\n\n  return safe(appearanceConfig, (value: AppearanceMappingType): MappingType => {\n    return value.mapping;\n  });\n}\n\nfunction getVariantMapping(mapping: ThemeMappingType,\n                           component: string,\n                           appearance: string,\n                           variant: string): MappingType | undefined {\n\n  const appearanceConfig: AppearanceMappingType = getAppearance(mapping, component, appearance);\n\n  return safe(appearanceConfig, (value: AppearanceMappingType): MappingType => {\n    return safe(value.variantGroups, (groupValue): MappingType => {\n\n      const groupName = Object.keys(groupValue).find((group: string) => {\n        return groupValue[group][variant] !== undefined;\n      });\n\n      return safe(groupName, (groupNameValue): MappingType => {\n        return groupValue[groupNameValue][variant];\n      });\n    });\n  });\n}\n\nfunction getStateMapping(mapping: MappingType, state: string): StatelessMappingType | undefined {\n\n  return safe(mapping.state, (value): StatelessMappingType => {\n    return value[state];\n  });\n}\n","import {\n  ThemeMappingType,\n  ControlMappingType,\n  ThemedStyleType,\n  MappingType,\n  StrictTheme,\n  StatelessMappingType,\n  ParameterType,\n} from '@eva-design/dss';\nimport {\n  safe,\n  noNulls,\n  noDuplicates,\n} from '../common';\nimport {\n  getComponentDefaultAppearance,\n  getComponentDefaultVariants,\n  getComponentDefaultState,\n  getStatelessAppearanceMapping,\n  getStatelessVariantMapping,\n  getStateAppearanceMapping,\n  getStateVariantMapping,\n} from '../mapping';\n\nexport const SEPARATOR_MAPPING_ENTRY = '.';\n\n/**\n * Creates style object for variant/list of variants(optional) and its state/list of states(optional)\n *\n * Example\n *\n * appearance = 'outline';\n * variants = ['success', 'large'];\n * state = ['active', 'checked'];\n *\n * a = `default` + `outline`                    - acc appearance (apce) mapping\n *\n * v1 = `success` of `default`                  - `success` variant mapping of `default` apce\n * v2 = `success` of `outline`                  - `success` variant mapping of `outline` apce\n * v3 = `large` of `default`                    - `large` variant mapping of `default` apce\n * v4 = `large` of `outline`                    - `large` variant mapping of `outline` apce\n *\n * s1 = `active` of `default`                   - `active` state mapping of `default` apce\n * s2 = `active` of `outline`                   - `active` state mapping of `outline` apce\n * s3 = `active` of `default success`           - `active` state mapping of `success` variant of `default` apce\n * s4 = `active` of `outline success`           - `active` state mapping of `success` variant of `outline` apce\n * s5 = `active` of `default large`             - `active` state mapping of `large` variant of `default` apce\n * s6 = `active` of `outline large`             - `active` state mapping of `large` variant of `outline` apce\n *\n * s7 = `checked` of `default`                  - `checked` state mapping of `default` apce\n * s8 = `checked` of `outline`                  - `checked` state mapping of `outline` apce\n * s9 = `checked` of `default success`          - `checked` state mapping of `success` variant of `default` apce\n * s10 = `checked` of `outline success`         - `checked` state mapping of `success` variant of `outline` apce\n * s11 = `checked` of `default large`           - `checked` state mapping of `large` variant of `default` apce\n * s12 = `checked` of `outline large`           - `checked` state mapping of `large` variant of `outline` apce\n *\n * s13 = `active.checked` of `default`          - `active.checked` state mapping of `default` apce\n * s14 = `active.checked` of `outline`          - `active.checked` state mapping of `outline` apce\n * s15 = `active.checked` of `default success`  - `active.checked` state mapping of `success` variant of `default` apce\n * s16 = `active.checked` of `outline success`  - `active.checked` state mapping of `success` variant of `outline` apce\n * s17 = `active.checked` of `default large`    - `active.checked` state mapping of `large` variant of `default` apce\n * s18 = `active.checked` of `outline large`    - `active.checked` state mapping of `large` variant of `outline` apce\n *\n * res = a + (v1 + v2 + ... + vn) + (s1 + s2 + ... + sn)\n *\n * @param mapping: ThemeMappingType - theme mapping configuration\n * @param component: string - component name\n * @param appearance: string - appearance applied to component\n * @param variants: string[] - variants applied to component. Default is []\n * @param states: string[] - states in which component is. Default is []\n * @param theme: StrictTheme - theme configuration object. Default is {}\n *\n * @return ThemedStyleType - compiled component styles declared in mappings, mapped to theme values\n */\nexport function createStyle(mapping: ThemeMappingType,\n                            component: string,\n                            appearance: string,\n                            variants: string[] = [],\n                            states: string[] = [],\n                            theme: StrictTheme = {}): ThemedStyleType {\n\n  const normalizedAppearance: string[] = normalizeAppearance(mapping, component, appearance);\n  const normalizedVariants: string[] = normalizeVariants(mapping, component, variants);\n  const normalizedStates: string[] = normalizeStates(mapping, component, states, (state: string): number => {\n    return states.indexOf(state);\n  });\n\n  const appearanceMapping: StatelessMappingType = reduce(normalizedAppearance, apce => {\n    return getStatelessAppearanceMapping(mapping, component, apce);\n  });\n\n  const variantMapping: StatelessMappingType = reduce(normalizedVariants, variant => {\n    return reduce(normalizedAppearance, apce => {\n      return getStatelessVariantMapping(mapping, component, apce, variant);\n    });\n  });\n\n  const stateMapping: StatelessMappingType = reduce(normalizedStates, state => {\n    const appearanceStateMapping = reduce(normalizedAppearance, apce => {\n      return getStateAppearanceMapping(mapping, component, apce, state);\n    });\n\n    const variantStateMapping: StatelessMappingType = reduce(normalizedVariants, variant => {\n      return reduce(normalizedAppearance, apce => {\n        return getStateVariantMapping(mapping, component, apce, variant, state);\n      });\n    });\n\n    return { ...appearanceStateMapping, ...variantStateMapping };\n  });\n\n  const strictlessMapping: StatelessMappingType = {\n    ...appearanceMapping,\n    ...variantMapping,\n    ...stateMapping,\n  };\n\n  return withStrictTokens(strictlessMapping, theme);\n}\n\nexport function createAllStyles(mapping: ThemeMappingType,\n                                component: string,\n                                appearance: string,\n                                variants: string[],\n                                states: string[],\n                                theme: StrictTheme): [string, ThemedStyleType][] {\n\n  const stateless = createStyleEntry(mapping,\n    component,\n    appearance,\n    appearance,\n    '',\n    '',\n    theme,\n  );\n\n  const withStates = states.reduce((acc: [string, ThemedStyleType][], current: string) => {\n    const key = appearance.concat(SEPARATOR_MAPPING_ENTRY, current);\n    const next = createStyleEntry(mapping, component, key, appearance, '', current, theme);\n    return [...acc, next];\n  }, []);\n\n  const withVariants = variants.map(variant => {\n    const key = appearance.concat(SEPARATOR_MAPPING_ENTRY, variant);\n    return createStyleEntry(mapping, component, key, appearance, variant, '', theme);\n  });\n\n  const withVariantStates = variants.reduce((acc: [string, ThemedStyleType][], current: string) => {\n    const next = states.map(state => {\n      const key = appearance.concat(SEPARATOR_MAPPING_ENTRY, current, SEPARATOR_MAPPING_ENTRY, state);\n      return createStyleEntry(mapping, component, key, appearance, current, state, theme);\n    });\n    return [...acc, ...next];\n  }, []);\n\n  return [\n    stateless,\n    ...withStates,\n    ...withVariants,\n    ...withVariantStates,\n  ];\n}\n\nexport function getStyle(mapping: ThemeMappingType,\n                         component: string,\n                         appearance: string,\n                         variants: string[],\n                         states: string[]): ThemedStyleType | undefined {\n\n  return safe(mapping, (themeMapping: ThemeMappingType) => {\n    return safe(themeMapping[component], (componentMapping: ControlMappingType) => {\n\n      const query = findStyleKey(Object.keys(componentMapping), [\n        appearance,\n        ...variants,\n        ...states,\n      ]);\n\n      return componentMapping[query];\n    });\n  });\n}\n\n/**\n * Creates normalized to design system array of component appearances\n *\n * Example:\n *\n * '' => ['default']\n * 'bold' => ['default', 'bold']\n * 'default' => ['default']\n * ...\n *\n * @param mapping: ThemeMappingType - theme mapping configuration\n * @param component: string - component name\n * @param appearance: string - appearance applied to component\n *\n * @return string[] - array of merged appearances\n */\nexport function normalizeAppearance(mapping: ThemeMappingType,\n                                    component: string,\n                                    appearance: string): string[] {\n\n  const defaultAppearance: string = getComponentDefaultAppearance(mapping, component);\n\n  return normalize([defaultAppearance, appearance]);\n}\n\n/**\n * Creates normalized to design system array of component variants\n *\n * Example:\n *\n * [''] => ['default0', 'default1']\n * ['success'] => ['default0', 'default1', 'success']\n * ['default0', 'tiny'] => ['default0', 'default1', 'tiny']\n * ...\n *\n * @param mapping: ThemeMappingType - theme mapping configuration\n * @param component: string - component name\n * @param variants: string[] - variants applied to component\n *\n * @return string[] - array of merged variants\n */\nexport function normalizeVariants(mapping: ThemeMappingType,\n                                  component: string,\n                                  variants: string[]): string[] {\n\n  const defaultVariants: string[] = getComponentDefaultVariants(mapping, component);\n\n  return normalize([...defaultVariants, ...variants]);\n}\n\n/**\n * Creates normalized to design system array of component states\n *\n * Example:\n *\n * [''] => ['default']\n * ['active', 'checked'] => [\n *                           'default',\n *                           'active',\n *                           'default.active',\n *                           'checked',\n *                           'default.active.checked'\n *                          ]\n * ...\n *\n * @param mapping: ThemeMappingType - theme mapping configuration\n * @param component: string - component name\n * @param states: string[] - states in which component is\n * @param stateWeight: (state: string) => number - state weight calculation lambda\n * @param separator - state separator. `.` in example\n *\n * @return string[] - array of merged states\n */\nexport function normalizeStates(mapping: ThemeMappingType,\n                                component: string,\n                                states: string[],\n                                stateWeight: (state: string) => number,\n                                separator: string = SEPARATOR_MAPPING_ENTRY): string[] {\n\n  const defaultState: string = getComponentDefaultState(mapping, component);\n\n  const preprocess: string[] = normalize([defaultState, ...states]);\n  if (preprocess.length === 0) {\n    return preprocess;\n  }\n\n  const variations = createStateVariations([...preprocess], separator, []);\n\n  return variations.sort((lhs: string, rhs: string) => {\n    const lhsWeight = getStateVariationWeight(lhs, separator, stateWeight);\n    const rhsWeight = getStateVariationWeight(rhs, separator, stateWeight);\n    return lhsWeight - rhsWeight;\n  });\n}\n\nfunction createStateVariations(states: string[], separator: string, result: string[] = []): string[] {\n  if (states.length === 0) {\n    return result;\n  }\n\n  const next = states.reduce((acc: string[], current: string) => {\n    const nextItem = acc.map(value => value.concat(separator, current));\n    return [...acc, ...nextItem];\n  }, [states.shift()]);\n\n  return createStateVariations(states, separator, [...result, ...next]);\n}\n\nfunction withStrictTokens(mapping: StatelessMappingType, theme: StrictTheme): StatelessMappingType {\n  return Object.keys(mapping).reduce((acc: StatelessMappingType, next: string): StatelessMappingType => {\n    const currentToken: ParameterType = mapping[next];\n    const nextToken: ParameterType = theme[currentToken] || currentToken;\n\n    return { ...acc, [next]: nextToken };\n  }, {});\n}\n\nfunction getStateVariationWeight(state: string,\n                                 separator: string,\n                                 stateWeight: (state: string) => number): number {\n\n  const parts = state.split(separator);\n  return parts.reduce((acc: number, current: string): number => {\n    return acc + stateWeight(current) + parts.length;\n  }, 0);\n}\n\n/**\n * Finds identical keys across `source` keys array\n *\n * Example:\n *\n * source = ['default.error.small.checked', ...]\n * query = ['default', 'small', 'error', 'checked']\n *\n * will return 'default.error.small.checked'\n *\n * @param source (string[]) - array of style keys\n * @param query (string[]) - array of key parts to search\n *\n * @return (string | undefined) - key identical to some of `source` keys if presents\n */\nexport function findStyleKey(source: string[], query: string[]): string | undefined {\n\n  const partialKeys: string[][] = source.map((key: string) => {\n    return key.split(SEPARATOR_MAPPING_ENTRY);\n  });\n\n  const result: string[][] = partialKeys.filter((partial: string[]) => {\n    return compareArrays(query, partial);\n  });\n\n  return safe(result[0], (value: string[]) => {\n    return value.join(SEPARATOR_MAPPING_ENTRY);\n  });\n}\n\nfunction createStyleEntry(mapping: ThemeMappingType,\n                          component: string,\n                          key: string,\n                          appearance: string,\n                          variant: string = '',\n                          state: string = '',\n                          theme: StrictTheme = {}): [string, ThemedStyleType] {\n\n  const value = createStyle(\n    mapping,\n    component,\n    appearance,\n    variant.split(SEPARATOR_MAPPING_ENTRY),\n    state.split(SEPARATOR_MAPPING_ENTRY),\n    theme,\n  );\n\n  return [key, value];\n}\n\nfunction normalize(params: string[]): string[] {\n  return noNulls(noDuplicates(params));\n}\n\nfunction compareArrays(lhs: string[], rhs: string[]): boolean {\n  const isEqualLength = lhs && rhs && lhs.length === rhs.length;\n  if (!isEqualLength) {\n    return false;\n  }\n\n  return lhs.reduce((acc: boolean, next: string): boolean => acc && rhs.includes(next), true);\n}\n\nfunction reduce(items: string[], next: (item: string) => any): any {\n  return items.reduce((acc, current) => ({ ...acc, ...next(current) }), {});\n}\n","import {\n  ThemeMappingType,\n  ControlMappingType,\n} from '@eva-design/dss';\nimport { Processor } from '../processor';\nimport {\n  getComponentVariants,\n  getComponentStates,\n  SEPARATOR_MAPPING_ENTRY,\n} from '../../service';\n\nexport interface MappingMetaType {\n  name: string;\n  appearance: string;\n  variants: string[];\n  states: string[];\n}\n\nexport class MappingProcessor implements Processor<ThemeMappingType, MappingMetaType[]> {\n\n  public process(params: ThemeMappingType): MappingMetaType[] {\n    return Object.keys(params).reduce((acc: MappingMetaType[], component: string) => {\n      return [\n        ...acc,\n        ...this.getComponentMappingMeta(params, component),\n      ];\n    }, []);\n  }\n\n  private getComponentMappingMeta(mapping: ThemeMappingType, component: string): MappingMetaType[] {\n    const componentMapping: ControlMappingType = mapping[component];\n\n    return Object.keys(componentMapping.appearances).map((appearance: string): MappingMetaType => {\n      return {\n        name: component,\n        appearance: appearance,\n        variants: this.getComponentVariants(mapping, component),\n        states: this.getComponentStates(mapping, component),\n      };\n    });\n  }\n\n  private getComponentVariants(mapping: ThemeMappingType, component: string): string[] {\n    const variants: string[][] = getComponentVariants(mapping, component);\n\n    return this.concatComponentVariants([...variants]);\n  }\n\n  private getComponentStates(mapping: ThemeMappingType, component: string): string[] {\n    const states: string[] = getComponentStates(mapping, component);\n\n    return this.concatComponentStates([...states]);\n  }\n\n  private concatComponentVariants(variants: string[][], result: string[] = []): string[] {\n    if (variants.length === 0) {\n      return result;\n    }\n\n    const concat = variants.reduce((acc: string[], current: string[]) => {\n      return [...acc, ...this.concatVariantGroups(acc, current)];\n    }, variants.shift());\n\n    return this.concatComponentVariants(variants, [...result, ...concat]);\n  }\n\n  private concatVariantGroups(lhs: string[], rhs: string[]): string[] {\n    return lhs.reduce((acc: string[], lhsValue: string) => {\n      const concat = rhs.map(rhsValue => {\n        return lhsValue.concat(SEPARATOR_MAPPING_ENTRY, rhsValue);\n      });\n      return [...acc, ...concat];\n    }, []);\n  }\n\n  private concatComponentStates(states: string[], result: string[] = []): string[] {\n    if (states.length === 0) {\n      return result;\n    }\n\n    const concat = states.reduce((acc: string[], current: string) => {\n      const next = acc.map(value => value.concat(SEPARATOR_MAPPING_ENTRY, current));\n      return [...acc, ...next];\n    }, [states.shift()]);\n\n    return this.concatComponentStates(states, [...result, ...concat]);\n  }\n}\n","import {\n  ThemeStyleType,\n  ThemeMappingType,\n  StrictTheme,\n  ThemedStyleType,\n  ControlThemedStyleType,\n} from '@eva-design/dss';\nimport { MappingMetaType } from '../mapping/mappingProcessor';\nimport { Processor } from '../processor';\nimport {\n  createAllStyles,\n  toObject,\n} from '../../service';\n\nexport interface MappingProcessorParamsType {\n  mapping: ThemeMappingType;\n  meta: MappingMetaType[];\n  theme: StrictTheme;\n}\n\ninterface NoMetaThemeStyleType {\n  [key: string]: {\n    [key: string]: ThemedStyleType,\n  };\n}\n\nexport class MetaProcessor implements Processor<MappingProcessorParamsType, ThemeStyleType> {\n\n  public process(params: MappingProcessorParamsType): ThemeStyleType {\n    const { mapping, meta, theme } = params;\n\n    const entries = meta.reduce((acc: ThemeStyleType, controlMeta: MappingMetaType) => {\n      const { name, appearance, variants, states } = controlMeta;\n\n      const nextAppearanceEntries = createAllStyles(mapping, name, appearance, variants, states, theme);\n      const prevAppearanceStyles = acc[name];\n      const nextAppearanceStyles = toObject(nextAppearanceEntries);\n\n      return { ...acc, [name]: { ...prevAppearanceStyles, ...nextAppearanceStyles } };\n    }, {});\n\n    return this.withControlMeta(mapping, entries);\n  }\n\n  private withControlMeta(mapping: ThemeMappingType, style: NoMetaThemeStyleType): ThemeStyleType {\n    return Object.keys(style).reduce((acc: ThemeStyleType, control: string) => {\n      const controlEntry: ControlThemedStyleType = {\n        meta: mapping[control].meta,\n        styles: style[control],\n      };\n\n      return { ...acc, [control]: controlEntry };\n    }, {});\n  }\n}\n","import { Processor } from '../processor';\nimport {\n  MappingProcessor,\n  MappingMetaType,\n} from '../mapping/mappingProcessor';\nimport { MetaProcessor } from '../meta/metaProcessor';\nimport {\n  SchemaType,\n  ThemeStyleType,\n} from '@eva-design/dss';\n\nexport class SchemaProcessor implements Processor<SchemaType, ThemeStyleType> {\n\n  private mappingProcessor: MappingProcessor = new MappingProcessor();\n  private metaProcessor: MetaProcessor = new MetaProcessor();\n\n  public process(params: SchemaType): ThemeStyleType {\n    const { components: themeMapping, strict: strictTheme } = params;\n\n    const meta: MappingMetaType[] = this.mappingProcessor.process(themeMapping);\n\n    return this.metaProcessor.process({\n      mapping: themeMapping,\n      meta: meta,\n      theme: strictTheme,\n    });\n  }\n}\n","import React from 'react';\nimport { ThemeStyleType } from '@eva-design/dss';\nimport { MappingContext } from './mappingContext';\n\nexport interface MappingProviderProps {\n  styles: ThemeStyleType;\n  children?: React.ReactNode;\n}\n\nexport class MappingProvider extends React.PureComponent<MappingProviderProps> {\n\n  public render(): React.ReactNode {\n    const { styles, children } = this.props;\n\n    return (\n      <MappingContext.Provider\n        value={styles}>\n        {children}\n      </MappingContext.Provider>\n    );\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport { ThemeContext } from './themeContext';\nimport { ThemeType } from './type';\n\nexport interface ThemeProviderProps {\n  theme: ThemeType;\n  children?: React.ReactNode;\n}\n\nexport class ThemeProvider extends React.PureComponent<ThemeProviderProps> {\n\n  public render(): React.ReactNode {\n    const { theme, children } = this.props;\n\n    return (\n      <ThemeContext.Provider\n        value={theme}>\n        {children}\n      </ThemeContext.Provider>\n    );\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  MappingProvider,\n  MappingProviderProps,\n} from '../mapping/mappingProvider.component';\nimport {\n  ThemeProvider,\n  ThemeProviderProps,\n} from '../theme/themeProvider.component';\n\nexport type StyleProviderProps = MappingProviderProps & ThemeProviderProps;\n\nexport class StyleProvider extends React.PureComponent<StyleProviderProps> {\n\n  public render(): React.ReactNode {\n    const { styles, theme, children } = this.props;\n\n    return (\n      <MappingProvider styles={styles}>\n        <ThemeProvider theme={theme}>\n          {children}\n        </ThemeProvider>\n      </MappingProvider>\n    );\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  View,\n  ViewProps,\n  StyleSheet,\n  TouchableOpacity,\n  TouchableOpacityProps,\n} from 'react-native';\n\ntype ChildElement = React.ReactElement<any>;\ntype ChildrenProp = ChildElement | ChildElement[];\n\ninterface ComponentProps {\n  visible: boolean;\n  children: ChildrenProp;\n  allowBackdrop: boolean;\n  onBackdropPress: () => void;\n}\n\nexport type ModalResolverProps = ViewProps & ComponentProps;\n\nexport class ModalResolver extends React.Component<ModalResolverProps> {\n\n  static defaultProps: Partial<ModalResolverProps> = {\n    visible: false,\n  };\n\n  private onBackdropPress = (): void => {\n    const { allowBackdrop, onBackdropPress } = this.props;\n\n    if (allowBackdrop) {\n      onBackdropPress();\n    }\n  };\n\n  private onStartShouldSetResponder = (): boolean => {\n    return true;\n  };\n\n  private onResponderRelease = (): void => {\n    return;\n  };\n\n  private onStartShouldSetResponderCapture = (): boolean => {\n    return false;\n  };\n\n  private renderComponentChild = (source: React.ReactElement<any>): React.ReactElement<any> => {\n    return React.cloneElement(source, {\n      style: [source.props.style, this.props.style],\n    });\n  };\n\n  private renderComponentChildren = (source: React.ReactNode): React.ReactElement<any>[] => {\n    return React.Children.map(source, this.renderComponentChild);\n  };\n\n  private renderWithBackDrop = (component: React.ReactElement<ViewProps>):\n    React.ReactElement<TouchableOpacityProps> => {\n\n    return (\n      <TouchableOpacity\n        style={styles.container}\n        onPress={this.onBackdropPress}\n        activeOpacity={1}>\n        {component}\n      </TouchableOpacity>\n    );\n  };\n\n  private renderWithoutBackDrop = (component: React.ReactElement<ViewProps>): React.ReactElement<ViewProps> => {\n    return (\n      <View style={styles.notVisibleWrapper}>\n        <View\n          style={styles.container}\n          pointerEvents='none'/>\n        {component}\n      </View>\n    );\n  };\n\n  private renderComponent = (): React.ReactElement<TouchableOpacityProps | ViewProps> => {\n    const { children, allowBackdrop, ...derivedProps } = this.props;\n    const componentChildren: React.ReactElement<any>[] = this.renderComponentChildren(children);\n\n    const dialog: React.ReactElement<ViewProps> =\n      <View\n        {...derivedProps}\n        style={styles.contentWrapper}\n        onStartShouldSetResponder={this.onStartShouldSetResponder}\n        onResponderRelease={this.onResponderRelease}\n        onStartShouldSetResponderCapture={this.onStartShouldSetResponderCapture}\n        pointerEvents='box-none'>\n        {componentChildren}\n      </View>;\n\n    return allowBackdrop ?\n      this.renderWithBackDrop(dialog) : this.renderWithoutBackDrop(dialog);\n  };\n\n  public render(): React.ReactElement<ViewProps | TouchableOpacityProps> | null {\n    return this.props.visible ? this.renderComponent() : null;\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: StyleSheet.absoluteFillObject,\n  notVisibleWrapper: {\n    position: 'absolute',\n    width: 0,\n    height: 0,\n  },\n  contentWrapper: {\n    alignSelf: 'flex-start',\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport { ModalPresentingBased } from '../../ui/support/typings';\n\n/**\n * Singleton service designed to manage modal components.\n *\n * @type ModalServiceType\n *\n * @method {(element: React.ReactElement<ModalPresentingBased>, config: ModalPresentingConfig) => string} show -\n * Shows component in a modal window. Returns its id.\n *\n * @method {(identifier: string) => string} hide - Hides component from a modal window and returns empty string.\n *\n * @method {(identifier: string, children: React.ReactNode) => void} update - Updates component from a modal window.\n *\n * @example Simple Usage\n *\n * ```\n * import React from 'react';\n * import { Layout, Button, Text, ModalService } from 'react-native-ui-kitten';\n *\n * export const ModalServiceShowcase = () => {\n *\n *   const modalID = '';\n *\n *   const showModal = () => {\n *     const contentElement = this.renderModalContentElement();\n *     this.modalID = ModalService.show(contentElement, { allowBackdrop: true, onBackdropPress: this.hideModal });\n *   };\n *\n *   const hideModal = () => {\n *     ModalService.hide(this.modalID);\n *   };\n *\n *   const renderModalContentElement = () => {\n *     return (\n *       <Layout>\n *         <Text>Hi, I'm modal!</Text>\n *       </Layout>\n *     );\n *   };\n *\n *   return (\n *     <Layout>\n *       <Button onPress={showModal}>SHOW MODAL</Button>\n *       <Button onPress={hideModal}>HIDE MODAL</Button>\n *     </Layout>\n *   );\n * }\n * ```\n */\nclass ModalServiceType {\n\n  panel: ModalPresenting | null = null;\n\n  public mount(panel: ModalPresenting | null): void {\n    this.panel = panel;\n  }\n\n  public unmount(): void {\n    this.panel = null;\n  }\n\n  public show(element: React.ReactElement<ModalPresentingBased>,\n              config: ModalPresentingConfig): string {\n\n    if (this.panel) {\n      return this.panel.show(element, config);\n    }\n  }\n\n  public update(identifier: string, children: React.ReactNode): void {\n    if (this.panel) {\n      this.panel.update(identifier, children);\n    }\n  }\n\n  public hide(identifier: string): string {\n    if (this.panel) {\n      return this.panel.hide(identifier);\n    }\n  }\n}\n\nexport interface ModalPresentingConfig {\n  allowBackdrop: boolean;\n  onBackdropPress: () => void;\n}\n\nexport interface ModalPresenting {\n  show(element: React.ReactElement<ModalPresentingBased>,\n       config: ModalPresentingConfig): string;\n\n  hide(identifier: string): string;\n\n  update(identifier: string, children: React.ReactNode): void;\n}\n\nexport const ModalService = new ModalServiceType();\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  View,\n  StyleSheet,\n  ViewProps,\n} from 'react-native';\nimport {\n  ModalResolver,\n  ModalResolverProps,\n} from './modalResolver.component';\nimport {\n  ModalService,\n  ModalPresenting,\n  ModalPresentingConfig,\n} from './modal.service';\nimport { ModalPresentingBased } from '../../ui/support/typings';\n\ninterface ModalPanelChild extends ModalPresentingConfig {\n  element: React.ReactElement<ModalPresentingBased>;\n}\n\nexport interface ModalPanelProps {\n  children: React.ReactNode;\n}\n\ninterface ModalPanelState {\n  components: Map<string, ModalPanelChild>;\n}\n\nexport class ModalPanel extends React.Component<ModalPanelProps, ModalPanelState> implements ModalPresenting {\n\n  public state: ModalPanelState = {\n    components: new Map(),\n  };\n\n  public componentDidMount(): void {\n    ModalService.mount(this);\n  }\n\n  public componentWillUnmount(): void {\n    ModalService.unmount();\n  }\n\n  public hide = (identifier: string): string => {\n    const components: Map<string, ModalPanelChild> = this.state.components;\n    components.delete(identifier);\n    this.setState({ components });\n    return '';\n  };\n\n  public show(element: React.ReactElement<ModalPresentingBased>,\n              config: ModalPresentingConfig): string {\n\n    const key: string = this.generateUniqueComponentKey();\n    const components: Map<string, ModalPanelChild> = this.state.components\n      .set(key, { ...config, element });\n\n    this.setState({ components });\n\n    return key;\n  }\n\n  public update(identifier: string, children: React.ReactNode): void {\n    const panelChild: ModalPanelChild = this.state.components.get(identifier);\n    const childElement: React.ReactElement<ModalPresentingBased> = panelChild.element;\n\n    panelChild.element = React.cloneElement(childElement, {\n      children: children,\n    });\n\n    const components: Map<string, ModalPanelChild> = this.state.components;\n    components.delete(identifier);\n    components.set(identifier, panelChild);\n    this.setState({ components });\n  }\n\n  private generateUniqueComponentKey = (): string => {\n    return Math.random().toString(36).substring(2);\n  };\n\n  private areThereAnyComponents = (): boolean => {\n    return this.state.components && this.state.components.size !== 0;\n  };\n\n  private renderModal = (config: ModalPanelChild, index: number): React.ReactElement<ModalResolverProps> => {\n    return (\n      <ModalResolver\n        {...config.element.props}\n        visible={true}\n        key={index}\n        allowBackdrop={config.allowBackdrop}\n        onBackdropPress={config.onBackdropPress}>\n        {config.element}\n      </ModalResolver>\n    );\n  };\n\n  private renderModals = (): React.ReactElement<ModalResolverProps>[] => {\n    return Array.from(this.state.components.values()).map(this.renderModal);\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    return (\n      <View style={styles.container}>\n        {this.props.children}\n        {this.areThereAnyComponents() && this.renderModals()}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n","export interface StyleType {\n  [key: string]: any;\n}\n\nexport enum Interaction {\n  HOVER = 'hover',\n  ACTIVE = 'active',\n  FOCUSED = 'focused',\n  INDETERMINATE = 'indeterminate',\n  VISIBLE = 'visible',\n}\n\nexport enum State {\n  CHECKED = 'checked',\n  SELECTED = 'selected',\n  DISABLED = 'disabled',\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport merge from 'lodash.merge';\nimport { SchemaProcessor } from '@eva-design/processor';\nimport {\n  CustomSchemaType,\n  SchemaType,\n  ThemeStyleType,\n} from '@eva-design/dss';\nimport { StyleProvider } from '../style/styleProvider.component';\nimport { ThemeProviderProps } from '../theme/themeProvider.component';\nimport { ModalPanel } from '../modal/modalPanel.component';\nimport { ThemeType } from '../theme/type';\n\ninterface ComponentProps {\n  mapping: SchemaType;\n  customMapping?: CustomSchemaType;\n}\n\nexport type ApplicationProviderProps = ComponentProps & ThemeProviderProps;\nexport type ApplicationProviderElement = React.ReactElement<ApplicationProviderProps>;\n\ninterface State {\n  styles: ThemeStyleType;\n}\n\n/**\n * `ApplicationProvider` component is designed to be a root of the application.\n *\n * This does basically two things:\n * - Provides styles for basic components;\n * - Renders modal window which is used to be common for all elements presented as modal;\n *\n * @extends React.Component\n *\n * @property {SchemaType} mapping - Determines the mapping for basic components.\n * This is designed to be provided by developers team and can be imported from npm package (e.g. `@eva-design/eva`).\n *\n * @property {CustomSchemaType} customMapping - Determines the customization mapping.\n * This is merged with `mapping` property and designed to be used components customization.\n *\n * @property {ThemeType} theme - Determines the theme for basic components.\n * This is designed to be provided by developers team and can be imported from npm package (e.g. `@eva-design/eva`).\n *\n * @property {React.ReactNode} children - Determines application root component.\n *\n * @overview-example Simple Usage\n *\n * ```\n * import React from 'react';\n * import { mapping, light as lightTheme } from '@eva-design/eva';\n * import { ApplicationProvider, Layout, Text } from 'react-native-ui-kitten';\n *\n * export default class App extends React.Component {\n *\n *   render() {\n *     return (\n *       <ApplicationProvider\n *         mapping={mapping}\n *         theme={lightTheme}>\n *         <Layout style={{ flex: 1 }}>\n *           <Text>Welcome to UI Kitten</Text>\n *         </Layout>\n *       </ApplicationProvider>\n *     );\n *   }\n * }\n * ```\n */\nexport class ApplicationProvider extends React.Component<ApplicationProviderProps, State> {\n\n  private schemaProcessor: SchemaProcessor = new SchemaProcessor();\n\n  constructor(props: ApplicationProviderProps) {\n    super(props);\n    const { mapping, customMapping, theme } = this.props;\n\n    const styles: ThemeStyleType = this.createStyles(mapping, customMapping);\n\n    this.state = { styles };\n  }\n\n  private createStyles = (mapping: SchemaType, custom: CustomSchemaType): ThemeStyleType => {\n    const customizedMapping: SchemaType = merge({}, mapping, custom);\n\n    return this.schemaProcessor.process(customizedMapping);\n  };\n\n  public render(): React.ReactNode {\n    return (\n      <StyleProvider\n        theme={this.props.theme}\n        styles={this.state.styles}>\n        <ModalPanel>\n          {this.props.children}\n        </ModalPanel>\n      </StyleProvider>\n    );\n  }\n}\n","import { Animated } from 'react-native';\n\nexport const DEFAULT_CONFIG: AnimationConfig = {\n  cycles: 1,\n  useNativeDriver: true,\n};\n\n/**\n * @property {number} cycles - number of animation cycles. -1 for infinite\n */\nexport interface AnimationConfig extends Animated.AnimationConfig {\n  cycles?: number;\n}\n\nexport abstract class Animation<C extends AnimationConfig, R> {\n\n  protected abstract animation: Animated.CompositeAnimation;\n  protected counter: number = 0;\n  protected endCallback: Animated.EndCallback;\n  protected running: boolean = false;\n  protected config: C;\n\n  public abstract toProps(): R;\n\n  constructor(config?: C) {\n    this.config = {\n      ...DEFAULT_CONFIG,\n      ...config,\n    };\n  }\n\n  public start(callback?: Animated.EndCallback) {\n    this.endCallback = callback;\n    this.running = true;\n\n    this.animation.start(this.onAnimationEnd);\n  }\n\n  public stop() {\n    this.running = false;\n\n    this.animation.stop();\n  }\n\n  public release() {\n    this.stop();\n  }\n\n  protected onAnimationEnd = (result: Animated.EndResult) => {\n    this.counter += 1;\n    if (this.counter === this.config.cycles) {\n      this.stop();\n    }\n    if (this.running) {\n      this.start(this.endCallback);\n    }\n    if (!this.running) {\n      this.counter = 0;\n      this.endCallback && this.endCallback(result);\n      this.endCallback = null;\n    }\n  };\n}\n","import {\n  Animated,\n  Easing,\n  ViewProps,\n} from 'react-native';\nimport {\n  Animation,\n  AnimationConfig,\n} from './animation';\n\nconst DEFAULT_CONFIG: PulseAnimationConfig = {\n  start: 1.0,\n  end: 1.25,\n  easing: Easing.linear,\n  duration: 500,\n};\n\ntype TimingAnimationConfig = Omit<Animated.TimingAnimationConfig, 'toValue'>;\n\nexport interface PulseAnimationConfig extends AnimationConfig, TimingAnimationConfig {\n  start?: number;\n  end?: number;\n}\n\nexport class PulseAnimation extends Animation<PulseAnimationConfig, ViewProps> {\n\n  private value: Animated.Value;\n\n  protected get animation(): Animated.CompositeAnimation {\n    const { start, end, ...restConfig } = this.config;\n\n    const startAnimation: Animated.CompositeAnimation = Animated.timing(this.value, {\n      toValue: end,\n      ...restConfig,\n    });\n\n    const endAnimation: Animated.CompositeAnimation = Animated.timing(this.value, {\n      toValue: start,\n      ...restConfig,\n    });\n\n    return Animated.sequence([\n      startAnimation,\n      endAnimation,\n    ]);\n  }\n\n  constructor(config?: PulseAnimationConfig) {\n    super({ ...DEFAULT_CONFIG, ...config });\n    this.value = new Animated.Value(this.config.start);\n  }\n\n  public toProps(): ViewProps {\n    return {\n      // @ts-ignore: Animated.Value is not assignable to a number, but it is a number\n      style: {\n        transform: [{ scale: this.value }],\n      },\n    };\n  }\n}\n","import {\n  Animated,\n  Easing,\n  ViewProps,\n} from 'react-native';\nimport {\n  Animation,\n  AnimationConfig,\n} from './animation';\n\nconst DEFAULT_CONFIG: ShakeAnimationConfig = {\n  start: 0.0,\n  offset: 2.5,\n  easing: Easing.linear,\n  duration: 25,\n  cycles: 8,\n};\n\ntype TimingAnimationConfig = Omit<Animated.TimingAnimationConfig, 'toValue'>;\n\nexport interface ShakeAnimationConfig extends AnimationConfig, TimingAnimationConfig {\n  start?: number;\n  offset?: number;\n}\n\nexport class ShakeAnimation extends Animation<ShakeAnimationConfig, ViewProps> {\n\n  private value: Animated.Value;\n\n  protected get animation(): Animated.CompositeAnimation {\n    const { start, offset, ...restConfig } = this.config;\n\n    const startAnimation: Animated.CompositeAnimation = Animated.timing(this.value, {\n      toValue: this.counter % 2 !== 0 ? -offset : offset,\n      ...restConfig,\n    });\n\n    const endAnimation: Animated.CompositeAnimation = Animated.timing(this.value, {\n      toValue: this.counter % 2 !== 0 ? offset : -offset,\n      ...restConfig,\n    });\n\n    return Animated.sequence([\n      startAnimation,\n      endAnimation,\n    ]);\n  }\n\n  constructor(config?: ShakeAnimationConfig) {\n    super({ ...DEFAULT_CONFIG, ...config });\n    this.value = new Animated.Value(this.config.start);\n  }\n\n  public toProps(): ViewProps {\n    return {\n      // @ts-ignore: Animated.Value is not assignable to a number, but it is a number\n      style: {\n        transform: [{ translateX: this.value }],\n      },\n    };\n  }\n}\n","import {\n  Animated,\n  Easing,\n  ViewProps,\n} from 'react-native';\nimport {\n  Animation,\n  AnimationConfig,\n} from './animation';\n\nconst DEFAULT_CONFIG: ZoomAnimationConfig = {\n  start: 1.0,\n  end: 0.5,\n  easing: Easing.linear,\n  duration: 500,\n};\n\ntype TimingAnimationConfig = Omit<Animated.TimingAnimationConfig, 'toValue'>;\n\nexport interface ZoomAnimationConfig extends AnimationConfig, TimingAnimationConfig {\n  start?: number;\n  end?: number;\n}\n\nexport class ZoomAnimation extends Animation<ZoomAnimationConfig, ViewProps> {\n\n  private value: Animated.Value;\n\n  protected get animation(): Animated.CompositeAnimation {\n    const { start, end, ...restConfig } = this.config;\n\n    const startAnimation: Animated.CompositeAnimation = Animated.timing(this.value, {\n      toValue: end,\n      ...restConfig,\n    });\n\n    const endAnimation: Animated.CompositeAnimation = Animated.timing(this.value, {\n      toValue: start,\n      ...restConfig,\n    });\n\n    return Animated.sequence([\n      startAnimation,\n      endAnimation,\n    ]);\n  }\n\n  constructor(config?: ZoomAnimationConfig) {\n    super({ ...DEFAULT_CONFIG, ...config });\n    this.value = new Animated.Value(this.config.start);\n  }\n\n  public toProps(): ViewProps {\n    return {\n      // @ts-ignore: Animated.Value is not assignable to a number, but it is a number\n      style: {\n        transform: [{ scale: this.value }],\n      },\n    };\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  Image,\n  ImageProps,\n  ImageStyle,\n  StyleSheet,\n} from 'react-native';\nimport {\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\n\ninterface ComponentProps {\n  shape?: string;\n  size?: string;\n}\n\nexport type AvatarProps = StyledComponentProps & ImageProps & ComponentProps;\nexport type AvatarElement = React.ReactElement<AvatarProps>;\n\n/**\n * `Avatar` is a styled `Image` component.\n *\n * @extends React.Component\n *\n * @property {string} shape - Determines the shape of the component.\n * Can be `round`, `rounded` or `square`.\n * Default is `round`.\n *\n * @property {string} size - Determines the size of the component.\n * Can be `tiny`, `small`, `medium`, `large`, or `giant`.\n * Default is `medium`.\n *\n * @property {ImageProps} ...ImageProps - Any props applied to Image component.\n *\n * @overview-example AvatarSimpleUsage\n *\n * @overview-example AvatarSize\n *\n * @overview-example AvatarShape\n *\n * @example AvatarRemoteImages\n *\n * @example AvatarInlineStyling\n */\nexport class AvatarComponent extends React.Component<AvatarProps> {\n\n  static styledComponentName: string = 'Avatar';\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const { roundCoefficient, ...containerParameters } = source;\n\n    // @ts-ignore: avoid checking `containerParameters`\n    const baseStyle: ImageStyle = StyleSheet.flatten([\n      containerParameters,\n      this.props.style,\n    ]);\n\n    // @ts-ignore: rhs operator is restricted to be number\n    const borderRadius: number = roundCoefficient * baseStyle.height;\n\n    return {\n      borderRadius,\n      ...baseStyle,\n    };\n  };\n\n  public render(): React.ReactElement<ImageProps> {\n    const { themedStyle, ...restProps } = this.props;\n    const componentStyle: ImageStyle = this.getComponentStyle(themedStyle);\n\n    return (\n      <Image\n        {...restProps}\n        style={componentStyle}\n      />\n    );\n  }\n}\n\nexport const Avatar = styled<AvatarProps>(AvatarComponent);\n","import React from 'react';\nimport {\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\nimport { StyleType } from '@kitten/theme';\n\nexport type ArrowProps = ViewProps;\nexport type ArrowElement = React.ReactElement<ArrowProps>;\n\nexport class Arrow extends React.Component<ArrowProps> {\n\n  private getComponentStyle = (source: StyleProp<ViewStyle>): StyleType => {\n    const flatStyle: ViewStyle = StyleSheet.flatten(source);\n\n    return {\n      container: {\n        // @ts-ignore: `width` is restricted to be a number\n        borderLeftWidth: flatStyle.width,\n        // @ts-ignore: `width` is restricted to be a number\n        borderRightWidth: flatStyle.width,\n        // @ts-ignore: `height` is restricted to be a number\n        borderBottomWidth: flatStyle.height,\n        borderBottomColor: flatStyle.backgroundColor,\n        borderLeftColor: 'transparent',\n        borderRightColor: 'transparent',\n        backgroundColor: 'transparent',\n      },\n    };\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { style, ...props } = this.props;\n    const componentStyle = this.getComponentStyle(style);\n\n    return (\n      <View\n        {...props}\n        style={[style, styles.container, componentStyle.container]}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {},\n});\n","import { StyleType } from '@kitten/theme';\n\nexport interface Props {\n  [key: string]: any;\n}\n\nexport interface RestProps {\n  rest?: Partial<Props>;\n}\n\nexport type AllOfProps = Partial<Props>;\n\nexport type AllWithRestProps = Partial<Props> & RestProps;\n\n/**\n * Retrieves all props included in `from` array\n *\n * @param source (Props) - source object\n * @param from (string[]) - array of keys needed to retrieve from `source`\n *\n * @return (Partial<Props>) - object with keys contained in `from` array\n */\nexport function all(source: Props | undefined, from: string[]): AllOfProps {\n  if (!source) {\n    return {};\n  }\n\n  return from.reduce((acc: Partial<AllOfProps>, prop: string): Partial<AllOfProps> => {\n    return { ...acc, [prop]: source[prop] };\n  }, {});\n}\n\n/**\n * Retrieves all props included in `from` array, rest props includes in under the `rest` key\n */\nexport function allWithRest(source: Props | undefined, from: string[]): AllWithRestProps {\n  if (!source) {\n    return { rest: {} };\n  }\n\n  return Object.keys(source).reduce((acc: Partial<AllWithRestProps>, prop: string): Partial<AllWithRestProps> => {\n    const { rest, ...allOf } = acc;\n\n    if (from.includes(prop)) {\n      return { ...allOf, [prop]: source[prop], rest };\n    }\n\n    return { ...allOf, rest: { ...rest, [prop]: source[prop] } };\n  }, {});\n}\n\n/**\n * Returns all styles with prefix\n *\n * @param {StyleType} source - Eva Styles\n * @param {string} key - prefix\n *\n * @return {StyleType} - all styles with prefix\n */\nexport function allWithPrefix(source: StyleType, key: string): StyleType {\n  return Object.keys(source)\n    .filter((styleName: string) => styleName.includes(key))\n    .reduce((obj: StyleType, styleKey: string) => {\n      return {\n        ...obj,\n        [styleKey]: source[styleKey],\n      };\n    }, {});\n}\n","const FLEX_PREFIX: string = 'flex';\nconst FLEX_ROW_PREFIX: string = 'row';\nconst FLEX_WRAP_PREFIX: string = 'wrap';\nconst FLEX_START_PREFIX: string = 'start';\nconst FLEX_END_PREFIX: string = 'end';\nconst FLEX_REVERSE_PREFIX: string = 'reverse';\n\n/**\n * Works with FlexBox style properties that starts with `flex` and ends with `-start` or `-end`\n *\n * E.g justifyContent: flex-start\n */\nconst FlexStartEndMapper: I18nLayoutFlexMapper<string> = {\n  toI18n(value: string, rtl: boolean): string {\n    if (!rtl || !value.startsWith(FLEX_PREFIX)) {\n      return value;\n    }\n\n    const isReverse: boolean = value.endsWith(FLEX_END_PREFIX);\n\n    if (isReverse) {\n      return `${FLEX_PREFIX}-${FLEX_START_PREFIX}`;\n    }\n\n    return `${FLEX_PREFIX}-${FLEX_END_PREFIX}`;\n  },\n};\n\n/**\n * Works with FlexBox style properties that starts with `row` and optionally ends with `-reverse`\n *\n * E.g flexDirection: row-reverse\n */\nconst FlexRowMapper: I18nLayoutFlexMapper<string> = {\n  toI18n(value: string, rtl: boolean): string {\n    if (!rtl || !value.startsWith(FLEX_ROW_PREFIX)) {\n      return value;\n    }\n\n    const isReverse: boolean = value.endsWith(FLEX_REVERSE_PREFIX);\n\n    if (isReverse) {\n      return FLEX_ROW_PREFIX;\n    }\n\n    return `${FLEX_ROW_PREFIX}-${FLEX_REVERSE_PREFIX}`;\n  },\n};\n\n/**\n * Works with FlexBox style properties that starts with `wrap` and optionally ends with `-reverse`\n *\n * E.g flexWrap: wrap-reverse\n */\nconst FlexWrapMapper: I18nLayoutFlexMapper<string> = {\n  toI18n(value: string, rtl: boolean): string {\n    if (!rtl || !value.startsWith(FLEX_WRAP_PREFIX)) {\n      return value;\n    }\n\n    const isReverse: boolean = value.endsWith(`-${FLEX_REVERSE_PREFIX}`);\n\n    if (isReverse) {\n      return FLEX_WRAP_PREFIX;\n    }\n\n    return `${FLEX_WRAP_PREFIX}-${FLEX_REVERSE_PREFIX}`;\n  },\n};\n\n/**\n * Matches FlexBox style properties that can affect on Layout depending on LTR/RTL mode corresponding Mappers\n */\nexport const I18nLayoutFlexMap: { [key: string]: I18nLayoutFlexMapper<any> } = {\n  alignContent: FlexStartEndMapper,\n  alignItems: FlexStartEndMapper,\n  alignSelf: FlexStartEndMapper,\n  justifyContent: FlexStartEndMapper,\n  flexDirection: FlexRowMapper,\n  flexWrap: FlexWrapMapper,\n};\n\ninterface I18nLayoutFlexMapper<T> {\n  toI18n(value: T, rtl: boolean): T;\n}\n","import {\n  I18nManager,\n  ViewStyle,\n} from 'react-native';\nimport { I18nLayoutFlexMap } from './i18nLayoutFlexMap';\nimport { I18nLayoutServiceType } from './type';\n\nclass NativeI18nLayoutService implements I18nLayoutServiceType {\n\n  public isRTL(): boolean {\n    return I18nManager.isRTL;\n  }\n\n  public select<T>(ltr: T, rtl): T {\n    return this.isRTL() ? rtl : ltr;\n  }\n\n  /**\n   * Iterates through I18nLayoutFlexMap and reverses style values if needed.\n   *\n   * @param {ViewStyle} source - style to convert\n   * @param {boolean} rtl - is layout currently in RTL mode (Needed for tests, because unable to mock this)\n   *\n   * @returns {ViewStyle} - style reversed to fit i18n\n   */\n  public toI18nStyle(source: ViewStyle, rtl: boolean = this.isRTL()): ViewStyle {\n    const i18nStyle: ViewStyle = Object.keys(I18nLayoutFlexMap).reduce((style: ViewStyle, prop: string): ViewStyle => {\n      const currentStyleValue = source[prop];\n      if (currentStyleValue) {\n        const i18nStyleValue = I18nLayoutFlexMap[prop].toI18n(currentStyleValue, rtl);\n        return { ...style, [prop]: i18nStyleValue };\n      }\n\n      return style;\n    }, {});\n\n    return { ...source, ...i18nStyle };\n  }\n}\n\nexport const I18nLayoutService = new NativeI18nLayoutService();\n","export const isValidString = (source: string | null): boolean => {\n  if (source && source.length > 0) {\n    return true;\n  }\n  return false;\n};\n","export interface WebEventResponderCallbacks {\n  onMouseEnter?: () => void;\n  onMouseLeave?: () => void;\n  onFocus?: () => void;\n  onBlur?: () => void;\n}\n\nexport class WebEventResponderInstance {\n  readonly eventHandlers: WebEventResponderCallbacks;\n\n  constructor(props: WebEventResponderCallbacks) {\n    this.eventHandlers = props;\n  }\n}\n\nclass WebEventResponderStatic {\n  static create(config: WebEventResponderCallbacks): WebEventResponderInstance {\n    return new WebEventResponderInstance({\n      onMouseEnter: () => {\n        config.onMouseEnter && config.onMouseEnter();\n      },\n      onMouseLeave: () => {\n        config.onMouseLeave && config.onMouseLeave();\n      },\n      onFocus: () => {\n        config.onFocus && config.onFocus();\n      },\n      onBlur: () => {\n        config.onBlur && config.onBlur();\n      },\n    });\n  }\n}\n\nexport const WebEventResponder = WebEventResponderStatic;\n","import React from 'react';\nimport {\n  View,\n  Animated,\n  StyleSheet,\n  ViewProps,\n} from 'react-native';\nimport { StyleType } from '@kitten/theme';\nimport { I18nLayoutService } from '../../services';\n\ninterface ComponentProps {\n  isAnimated?: boolean;\n}\n\nexport type CheckMarkProps = ViewProps & ComponentProps;\nexport type CheckMarkElement = React.ReactElement<CheckMarkProps>;\n\nexport class CheckMark extends React.Component<CheckMarkProps> {\n\n  static defaultProps = {\n    isAnimated: false,\n  };\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const { width, height, backgroundColor } = source;\n\n    return {\n      container: {\n        width: width,\n        height: height,\n      },\n      // the dependence of the variables was determined experimentally. Changes may be needed later.\n      shape: {\n        borderWidth: width * 0.125,\n        borderTopLeftRadius: height * 0.5,\n        borderTopRightRadius: height * 0.5,\n        borderBottomLeftRadius: height * 0.5,\n        borderBottomRightRadius: height * 0.5,\n        borderColor: backgroundColor,\n        backgroundColor: backgroundColor,\n      },\n      left: {\n        left: width * 0.125,\n        top: width * 0.25,\n        height: height * 0.65,\n      },\n      right: {\n        right: width * 0.175,\n        height: height * 0.875,\n      },\n    };\n  };\n\n  public render(): React.ReactNode {\n    const { style, isAnimated } = this.props;\n    const { container, shape, left, right } = this.getComponentStyle(StyleSheet.flatten(style));\n\n    const Component = isAnimated ? Animated.View : View;\n\n    return (\n      <Component style={[container, styles.container]}>\n        <Component style={[shape, left, styles.shape, styles.left]} />\n        <Component style={[shape, right, styles.shape, styles.right]} />\n      </Component>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: I18nLayoutService.toI18nStyle({\n    flexDirection: 'row',\n    transform: [{ rotate: '-5deg' }],\n  }),\n  shape: {\n    position: 'absolute',\n  },\n  left: {\n    transform: [{ rotate: '-40deg' }],\n  },\n  right: {\n    transform: [{ rotate: '40deg' }],\n  },\n});\n","import React from 'react';\nimport {\n  Animated,\n  Easing,\n  LayoutChangeEvent,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\nimport { I18nLayoutService } from '../../services';\n\ninterface ComponentProps {\n  positions: number;\n  selectedPosition?: number;\n  animationDuration?: number;\n}\n\nexport type TabIndicatorProps = ViewProps & ComponentProps;\nexport type TabIndicatorElement = React.ReactElement<TabIndicatorProps>;\n\nexport class TabIndicator extends React.Component<TabIndicatorProps> {\n\n  static defaultProps: Partial<TabIndicatorProps> = {\n    selectedPosition: 0,\n    animationDuration: 200,\n  };\n\n  private indicatorWidth: number;\n  private contentOffset: Animated.Value = new Animated.Value(0);\n\n  public componentDidMount() {\n    this.contentOffset.addListener(this.onContentOffsetAnimationStateChanged);\n  }\n\n  public shouldComponentUpdate(nextProps: TabIndicatorProps): boolean {\n    return this.props.selectedPosition !== nextProps.selectedPosition;\n  }\n\n  public componentDidUpdate() {\n    const { selectedPosition: index } = this.props;\n\n    this.scrollToIndex({ index, animated: true });\n  }\n\n  public componentWillUnmount() {\n    this.contentOffset.removeAllListeners();\n  }\n\n  /**\n   * scrolls indicator to passed index\n   *\n   * @param params (object) - {\n   *  index: number,\n   *  animated: boolean | undefined\n   * }\n   */\n  public scrollToIndex(params: { index: number, animated?: boolean }) {\n    const { index, ...rest } = params;\n    const offset: number = this.indicatorWidth * index;\n\n    this.scrollToOffset({ offset, ...rest });\n  }\n\n  /**\n   * scrolls indicator to passed offset\n   *\n   * @param params (object) - {\n   *  offset: number,\n   *  animated: boolean | undefined\n   * }\n   */\n  public scrollToOffset(params: { offset: number, animated?: boolean }) {\n    this.createOffsetAnimation(params).start(this.onContentOffsetAnimationStateEnd);\n  }\n\n  private onContentOffsetAnimationStateChanged = (state: { value: number }) => {\n    // no-op\n  };\n\n  private onContentOffsetAnimationStateEnd = (result: { finished: boolean }) => {\n    // no-op\n  };\n\n  private createOffsetAnimation = (params: { offset: number, animated?: boolean }): Animated.CompositeAnimation => {\n    const animationDuration: number = params.animated ? this.props.animationDuration : 0;\n\n    return Animated.timing(this.contentOffset, {\n      toValue: I18nLayoutService.select(params.offset, -params.offset),\n      duration: animationDuration,\n      easing: Easing.linear,\n    });\n  };\n\n  private onLayout = (event: LayoutChangeEvent) => {\n    this.indicatorWidth = event.nativeEvent.layout.width;\n\n    this.scrollToOffset({\n      offset: this.indicatorWidth * this.props.selectedPosition,\n      animated: false,\n    });\n  };\n\n  private getComponentStyle = (): ViewStyle => {\n    const widthPercent: number = 100 / this.props.positions;\n\n    return {\n      width: `${widthPercent}%`,\n\n      // @ts-ignore: RN has no types for `Animated` styles\n      transform: [{ translateX: this.contentOffset }],\n    };\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { style, ...restProps } = this.props;\n    const componentStyle: ViewStyle = this.getComponentStyle();\n\n    return (\n      <Animated.View\n        {...restProps}\n        onLayout={this.onLayout}\n        style={[style, componentStyle]}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport {\n  View,\n  Animated,\n  StyleSheet,\n  ViewProps,\n} from 'react-native';\nimport { StyleType } from '@kitten/theme';\n\nexport type ChevronDirection = 'top' | 'bottom' | 'left' | 'right';\n\ninterface ComponentProps {\n  isAnimated?: boolean;\n  direction?: ChevronDirection;\n}\n\nexport type ChevronProps = ViewProps & ComponentProps;\nexport type ChevronElement = React.ReactElement<ChevronProps>;\n\nexport class Chevron extends React.Component<ChevronProps> {\n\n  static defaultProps = {\n    isAnimated: false,\n    direction: 'bottom',\n  };\n\n  private getDirectionStyle = (): StyleType => {\n    const { direction } = this.props;\n\n    switch (direction) {\n      case 'top':\n        return styles.containerTopRotate;\n      case 'right':\n        return styles.containerRightRotate;\n      case 'left':\n        return styles.containerLeftRotate;\n      default:\n        return null;\n    }\n  };\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const {\n      width,\n      height,\n      tintColor: backgroundColor,\n      marginHorizontal,\n    } = source;\n\n    return {\n      container: {\n        width: width,\n        height: height,\n        marginHorizontal: marginHorizontal,\n      },\n      // the dependence of the variables was determined experimentally. Changes may be needed later.\n      shape: {\n        top: height * 0.25,\n        borderWidth: width * 0.06,\n        borderTopLeftRadius: height * 0.5,\n        borderTopRightRadius: height * 0.5,\n        borderBottomLeftRadius: height * 0.5,\n        borderBottomRightRadius: height * 0.5,\n        borderColor: backgroundColor,\n        backgroundColor: backgroundColor,\n      },\n      left: {\n        left: width * 0.28,\n        height: height * 0.45,\n      },\n      right: {\n        right: width * 0.28,\n        height: height * 0.45,\n      },\n    };\n  };\n\n  public render(): React.ReactNode {\n    const { style, isAnimated } = this.props;\n    const { container, shape, left, right } = this.getComponentStyle(StyleSheet.flatten(style));\n    const directionStyle: StyleType = this.getDirectionStyle();\n\n    const Component = isAnimated ? Animated.View : View;\n\n    return (\n      <Component style={[container, directionStyle, style]}>\n        <Component style={[shape, left, styles.shape, styles.left]}/>\n        <Component style={[shape, right, styles.shape, styles.right]}/>\n      </Component>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  containerTopRotate: {\n    transform: [{ rotate: '180deg' }],\n  },\n  containerLeftRotate: {\n    transform: [{ rotate: '90deg' }],\n  },\n  containerRightRotate: {\n    transform: [{ rotate: '-90deg' }],\n  },\n  shape: {\n    position: 'absolute',\n  },\n  left: {\n    transform: [{ rotate: '-45deg' }, { translateY: 1 }],\n  },\n  right: {\n    transform: [{ rotate: '45deg' }, { translateY: 1 }],\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\nimport {\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport { BottomNavigationTabElement } from './bottomNavigationTab.component';\nimport {\n  TabIndicator,\n  TabIndicatorProps,\n} from '../support/components';\n\ntype IndicatorElement = React.ReactElement<TabIndicatorProps>;\ntype ChildrenProp = BottomNavigationTabElement | BottomNavigationTabElement[];\n\ninterface ComponentProps {\n  children: ChildrenProp;\n  selectedIndex?: number;\n  indicatorStyle?: StyleProp<ViewStyle>;\n  onSelect?: (index: number) => void;\n}\n\nexport type BottomNavigationProps = StyledComponentProps & ViewProps & ComponentProps;\nexport type BottomNavigationElement = React.ReactElement<BottomNavigationProps>;\n\n/**\n * `BottomNavigation` component is designed to be a Bottom Tab Bar.\n * Can be used for navigation.\n *\n * @extends React.Component\n *\n * @property {number} selectedIndex - Determines index of the selected tab.\n *\n * @property {string} appearance - Determines the appearance of the component.\n * Can be `default` or `noIndicator`.\n *\n * @property {React.ReactElement<TabProps> | React.ReactElement<TabProps>[]} children -\n * Determines tabs of the Bottom Navigation.\n *\n * @property {StyleProp<ViewStyle>} indicatorStyle - Determines styles of the indicator.\n *\n * @property {(index: number) => void} onSelect - Triggered on select value.\n *\n * @property {ViewProps} ...ViewProps - Any props applied to View component.\n *\n * @overview-example BottomNavigationSimpleUsage\n *\n * @overview-example Using with React Navigation\n *\n * ```\n * import React from 'react';\n * import { createAppContainer, SafeAreaView } from 'react-navigation';\n * import { createBottomTabNavigator } from 'react-navigation-tabs';\n * import { BottomNavigation, BottomNavigationTab, Layout, Text } from 'react-native-ui-kitten';\n *\n * // React Navigation also requires installing additional dependencies:\n * //\n * // npm i react-navigation react-navigation-tabs react-native-reanimated react-native-gesture-handler\n * //\n * // Then install it for ios:\n * //\n * // cd ios && pod install\n *\n * const HomeScreen = () => (\n *   <Layout style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n *     <Text category='h1'>HOME</Text>\n *   </Layout>\n * );\n *\n * const SettingsScreen = () => (\n *   <Layout style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n *     <Text category='h1'>SETTINGS</Text>\n *   </Layout>\n * );\n *\n * const TabBarComponent = ({ navigation }) => {\n *\n *   const onSelect = (index) => {\n *     const { [index]: selectedTabRoute } = navigation.state.routes;\n *     navigation.navigate(selectedTabRoute.routeName);\n *   };\n *\n *   return (\n *     <SafeAreaView>\n *       <BottomNavigation selectedIndex={navigation.state.index} onSelect={onSelect}>\n *         <BottomNavigationTab title='HOME'/>\n *         <BottomNavigationTab title='SETTINGS'/>\n *       </BottomNavigation>\n *     </SafeAreaView>\n *   );\n * };\n *\n * const TabNavigator = createBottomTabNavigator({\n *   Home: HomeScreen,\n *   Settings: SettingsScreen,\n * }, {\n *   tabBarComponent: TabBarComponent,\n * });\n *\n * export const AppNavigator = createAppContainer(TabNavigator);\n * ```\n *\n * @example BottomNavigationWithoutIndicator\n *\n * @overview-example BottomNavigationWithIcons\n *\n * @example BottomNavigationInlineStyling\n */\nexport class BottomNavigationComponent extends React.Component<BottomNavigationProps> {\n\n  static styledComponentName: string = 'BottomNavigation';\n\n  static defaultProps: Partial<BottomNavigationProps> = {\n    selectedIndex: 0,\n  };\n\n  private onTabSelect = (index: number): void => {\n    if (this.props.onSelect && this.props.selectedIndex !== index) {\n      this.props.onSelect(index);\n    }\n  };\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const { indicatorHeight, indicatorBackgroundColor, ...containerParameters } = source;\n\n    return {\n      container: containerParameters,\n      item: {},\n      indicator: {\n        height: indicatorHeight,\n        backgroundColor: indicatorBackgroundColor,\n      },\n    };\n  };\n\n  private renderIndicatorElement = (positions: number, style: ViewStyle): IndicatorElement => {\n    const { indicatorStyle, selectedIndex } = this.props;\n\n    return (\n      <TabIndicator\n        key={0}\n        style={[style, styles.indicator, indicatorStyle]}\n        selectedPosition={selectedIndex}\n        positions={positions}\n      />\n    );\n  };\n\n  private renderTabElement = (element: BottomNavigationTabElement, index: number): BottomNavigationTabElement => {\n    return React.cloneElement(element, {\n      key: index,\n      style: [styles.item, element.props.style],\n      selected: index === this.props.selectedIndex,\n      onSelect: () => this.onTabSelect(index),\n    });\n  };\n\n  private renderTabElements = (source: ChildrenProp): BottomNavigationTabElement[] => {\n    return React.Children.map(source, this.renderTabElement);\n  };\n\n  private renderComponentChildren = (style: StyleType): React.ReactNodeArray => {\n    const tabElements: BottomNavigationTabElement[] = this.renderTabElements(this.props.children);\n\n    const hasIndicator: boolean = style.indicator.height > 0;\n\n    return [\n      hasIndicator && this.renderIndicatorElement(tabElements.length, style.indicator),\n      ...tabElements,\n    ];\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { themedStyle, style, ...derivedProps } = this.props;\n    const { container, ...componentStyles } = this.getComponentStyle(themedStyle);\n\n    const [indicatorElement, ...tabElements] = this.renderComponentChildren(componentStyles);\n\n    return (\n      <View\n        {...derivedProps}\n        style={[container, styles.container, style]}>\n        {indicatorElement}\n        {tabElements}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n  },\n  item: {\n    flex: 1,\n  },\n  indicator: {\n    position: 'absolute',\n  },\n});\n\nexport const BottomNavigation = styled<BottomNavigationProps>(BottomNavigationComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  Text as RNText,\n  TextProps as RNTextProps,\n} from 'react-native';\nimport {\n  styled,\n  StyledComponentProps,\n} from '@kitten/theme';\n\ntype ChildElement = string | TextElement;\n\ninterface ComponentProps {\n  category?: string;\n  status?: string;\n  children?: ChildElement | ChildElement[];\n}\n\nexport type TextProps = StyledComponentProps & RNTextProps & ComponentProps;\nexport type TextElement = React.ReactElement<TextProps>;\n\n/**\n * Styled `Text` component.\n *\n * @extends React.Component\n *\n * @property {string} appearance - Determines the appearance of the component.\n * Can be `default`, `alternative`, `hint`.\n * Default is `default`.\n *\n * @property {string} status - Determines the status of the component.\n * Can be `basic`, `primary`, `success`, `info`, `warning`, `danger` or `control`.\n * Default is `basic`.\n *\n * @property {string} category - Determines the category of the component.\n * Can be `h1`, `h2`, `h3`, `h4`, `h5`, `h6`, `s1`, `s2`, `p1`, `p2`, `c1`, `c2`, `label`.\n * Default is `p1`.\n *\n * @property {string} children - Determines text of the component.\n *\n * @property {TextProps} ...TextProps - Any props applied to Text component.\n *\n * @overview-example TextSimpleUsage\n *\n * @overview-example TextAppearances\n *\n * @overview-example TextCategories\n *\n * @overview-example TextStatuses\n *\n * @example TextInlineStyling\n */\nexport class TextComponent extends React.Component<TextProps> {\n\n  static styledComponentName: string = 'Text';\n\n  public render(): React.ReactElement<RNTextProps> {\n    const { themedStyle, style, ...derivedProps } = this.props;\n\n    return (\n      <RNText\n        {...derivedProps}\n        style={[themedStyle, style]}\n      />\n    );\n  }\n}\n\nexport const Text = styled<TextProps>(TextComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  ImageProps,\n  ImageStyle,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  TouchableOpacity,\n  TouchableOpacityProps,\n} from 'react-native';\nimport {\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport {\n  Text,\n  TextElement,\n} from '../text/text.component';\nimport { isValidString } from '../support/services';\n\ntype IconElement = React.ReactElement<ImageProps>;\ntype IconProp = (style: ImageStyle) => IconElement;\n\ninterface ComponentProps {\n  title?: string;\n  titleStyle?: StyleProp<TextStyle>;\n  icon?: IconProp;\n  selected?: boolean;\n  onSelect?: (selected: boolean) => void;\n}\n\nexport type BottomNavigationTabProps = StyledComponentProps & TouchableOpacityProps & ComponentProps;\nexport type BottomNavigationTabElement = React.ReactElement<BottomNavigationTabProps>;\n\n/**\n * `BottomNavigationTab` component is a part of the `BottomNavigation` component.\n * `BottomNavigation` tabs should be wrapped in BottomNavigation to provide usable component.\n * See usage examples at `BottomNavigation` component documentation.\n *\n * @extends React.Component\n *\n * @property {boolean} selected - Determines whether component is selected.\n *\n * @property {string} title - Determines the title of the tab.\n *\n * @property {StyleProp<TextStyle>} titleStyle - Customizes title style.\n *\n * @property {(style: StyleType) => React.ReactElement<ImageProps>} icon - Determines the icon of the tab.\n *\n * @property {(selected: boolean) => void} onSelect - Triggered on select value.\n *\n * @property {TouchableOpacityProps} ...TouchableOpacityProps - Any props applied to TouchableOpacity component.\n *\n * @overview-example BottomNavigationTabSimpleUsage\n *\n * @overview-example BottomNavigationTabWithIcon\n *\n * @example BottomNavigationTabWithExternalSourceIcon\n *\n * @example BottomNavigationTabInlineStyling\n */\nexport class BottomNavigationTabComponent extends React.Component<BottomNavigationTabProps> {\n\n  static styledComponentName: string = 'BottomNavigationTab';\n\n  private onPress = (): void => {\n    if (this.props.onSelect) {\n      this.props.onSelect(!this.props.selected);\n    }\n  };\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const {\n      iconWidth,\n      iconHeight,\n      iconMarginVertical,\n      iconTintColor,\n      textMarginVertical,\n      textFontFamily,\n      textFontSize,\n      textLineHeight,\n      textFontWeight,\n      textColor,\n      ...containerParameters\n    } = source;\n\n    return {\n      container: containerParameters,\n      text: {\n        marginVertical: textMarginVertical,\n        fontFamily: textFontFamily,\n        fontSize: textFontSize,\n        lineHeight: textLineHeight,\n        fontWeight: textFontWeight,\n        color: textColor,\n      },\n      icon: {\n        width: iconWidth,\n        height: iconHeight,\n        marginVertical: iconMarginVertical,\n        tintColor: iconTintColor,\n      },\n    };\n  };\n\n  private renderIconElement = (style: ImageStyle): IconElement => {\n    const iconElement: IconElement = this.props.icon(style);\n\n    return React.cloneElement(iconElement, {\n      key: 1,\n      style: [style, styles.icon, iconElement.props.style],\n    });\n  };\n\n  private renderTitleElement = (style: TextStyle): TextElement => {\n    const { title, titleStyle } = this.props;\n\n    return (\n      <Text\n        key={2}\n        style={[style, styles.text, titleStyle]}>\n        {title}\n      </Text>\n    );\n  };\n\n  private renderComponentChildren = (style: StyleType): React.ReactNodeArray => {\n    const { icon, title } = this.props;\n\n    return [\n      icon && this.renderIconElement(style.icon),\n      isValidString(title) && this.renderTitleElement(style.text),\n    ];\n  };\n\n  public render(): React.ReactElement<TouchableOpacityProps> {\n    const { style, themedStyle, ...restProps } = this.props;\n    const { container, ...componentStyles } = this.getComponentStyle(themedStyle);\n    const [iconElement, titleElement] = this.renderComponentChildren(componentStyles);\n\n    return (\n      <TouchableOpacity\n        activeOpacity={1.0}\n        {...restProps}\n        style={[container, styles.container, style]}\n        onPress={this.onPress}>\n        {iconElement}\n        {titleElement}\n      </TouchableOpacity>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  text: {},\n  icon: {},\n});\n\nexport const BottomNavigationTab = styled<BottomNavigationTabProps>(BottomNavigationTabComponent);\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Interaction } from '@kitten/theme';\nimport {\n  BottomNavigationTab as RNBottomNavigationTab,\n  BottomNavigationTabElement as RNBottomNavigationTabElement,\n  BottomNavigationTabProps as RNBottomNavigationTabProps,\n  // @ts-ignore\n} from './bottomNavigationTab.component.tsx';\nimport {\n  WebEventResponder,\n  WebEventResponderCallbacks,\n  WebEventResponderInstance,\n} from '../support/services';\n\nexport type BottomNavigationTabProps = RNBottomNavigationTabProps & WebEventResponderCallbacks;\nexport type BottomNavigationTabElement = React.ReactElement<BottomNavigationTabProps>;\n\nexport class BottomNavigationTab extends React.Component<BottomNavigationTabProps>\n  implements WebEventResponderCallbacks {\n\n  private bottomNavigationTabRef: React.RefObject<any> = React.createRef();\n  private webEventResponder: WebEventResponderInstance = WebEventResponder.create(this);\n\n  public onMouseEnter = (): void => {\n    this.bottomNavigationTabRef.current.props.dispatch([Interaction.HOVER]);\n\n    if (this.props.onMouseEnter) {\n      this.props.onMouseEnter();\n    }\n  };\n\n  public onMouseLeave = (): void => {\n    this.bottomNavigationTabRef.current.props.dispatch([]);\n\n    if (this.props.onMouseLeave) {\n      this.props.onMouseLeave();\n    }\n  };\n\n  public onFocus = (): void => {\n    if (this.props.onFocus) {\n      this.props.onFocus();\n    }\n  };\n\n  public onBlur = (): void => {\n    if (this.props.onBlur) {\n      this.props.onBlur();\n    }\n  };\n\n  public render(): RNBottomNavigationTabElement {\n    const { style, ...restProps } = this.props;\n\n    return (\n      <RNBottomNavigationTab\n        {...restProps}\n        {...this.webEventResponder.eventHandlers}\n        ref={this.bottomNavigationTabRef}\n        style={[style, styles.element]}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  element: {\n    // @ts-ignore\n    outlineWidth: 0,\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  GestureResponderEvent,\n  ImageProps,\n  ImageStyle,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  TouchableOpacity,\n  TouchableOpacityProps,\n} from 'react-native';\nimport {\n  Interaction,\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport {\n  Text,\n  TextElement,\n} from '../text/text.component';\nimport { isValidString } from '../support/services';\n\ntype IconElement = React.ReactElement<ImageProps>;\ntype IconProp = (style: ImageStyle) => IconElement;\n\ninterface ComponentProps {\n  textStyle?: StyleProp<TextStyle>;\n  icon?: IconProp;\n  status?: string;\n  size?: string;\n  children?: string;\n}\n\nexport type ButtonProps = StyledComponentProps & TouchableOpacityProps & ComponentProps;\nexport type ButtonElement = React.ReactElement<ButtonProps>;\n\n/**\n * Styled `Button` component.\n *\n * @extends React.Component\n *\n * @property {string} appearance - Determines the appearance of the component.\n * Can be `filled`, `outline` or `ghost`.\n * Default is `filled`.\n *\n * @property {string} status - Determines the status of the component.\n * Can be `basic`, `primary`, `success`, `info`, `warning`, `danger` or `control`.\n * Default is `primary`.\n *\n * @property {string} size - Determines the size of the component.\n * Can be `tiny`, `small`, `medium`, `large`, or `giant`.\n * Default is `medium`.\n *\n * @property {boolean} disabled - Determines whether component is disabled.\n * Default is `false`.\n *\n * @property {string} children - Determines text of the component.\n *\n * @property {StyleProp<TextStyle>} textStyle - Customizes text style.\n *\n * @property {(style: StyleType) => React.ReactElement<ImageProps>} icon - Determines icon of the component.\n *\n * @property {TouchableOpacityProps} ...TouchableOpacityProps - Any props applied to TouchableOpacity component.\n *\n * @overview-example ButtonSimpleUsage\n *\n * @overview-example ButtonAppearances\n *\n * @overview-example ButtonStatus\n *\n * @overview-example ButtonSize\n *\n * @overview-example ButtonOutline\n *\n * @overview-example ButtonGhost\n *\n * @overview-example ButtonWithIcon\n */\nexport class ButtonComponent extends React.Component<ButtonProps> {\n\n  static styledComponentName: string = 'Button';\n\n  private onPress = (event: GestureResponderEvent): void => {\n    if (this.props.onPress) {\n      this.props.onPress(event);\n    }\n  };\n\n  private onPressIn = (event: GestureResponderEvent): void => {\n    this.props.dispatch([Interaction.ACTIVE]);\n\n    if (this.props.onPressIn) {\n      this.props.onPressIn(event);\n    }\n  };\n\n  private onPressOut = (event: GestureResponderEvent): void => {\n    this.props.dispatch([]);\n\n    if (this.props.onPressOut) {\n      this.props.onPressOut(event);\n    }\n  };\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const {\n      textColor,\n      textFontFamily,\n      textFontSize,\n      textLineHeight,\n      textFontWeight,\n      textMarginHorizontal,\n      iconWidth,\n      iconHeight,\n      iconTintColor,\n      iconMarginHorizontal,\n      ...containerParameters\n    } = source;\n\n    return {\n      container: containerParameters,\n      text: {\n        color: textColor,\n        fontFamily: textFontFamily,\n        fontSize: textFontSize,\n        lineHeight: textLineHeight,\n        fontWeight: textFontWeight,\n        marginHorizontal: textMarginHorizontal,\n      },\n      icon: {\n        width: iconWidth,\n        height: iconHeight,\n        tintColor: iconTintColor,\n        marginHorizontal: iconMarginHorizontal,\n      },\n    };\n  };\n\n  private renderTextElement = (style: TextStyle): TextElement => {\n    return (\n      <Text\n        key={1}\n        style={[style, styles.text, this.props.textStyle]}>\n        {this.props.children}\n      </Text>\n    );\n  };\n\n  private renderIconElement = (style: ImageStyle): IconElement => {\n    const iconElement: IconElement = this.props.icon(style);\n\n    return React.cloneElement(iconElement, {\n      key: 2,\n      style: [style, styles.icon, iconElement.props.style],\n    });\n  };\n\n  private renderComponentChildren = (style: StyleType): React.ReactNodeArray => {\n    const { icon, children } = this.props;\n\n    return [\n      icon && this.renderIconElement(style.icon),\n      isValidString(children) && this.renderTextElement(style.text),\n    ];\n  };\n\n  public render(): React.ReactElement<TouchableOpacityProps> {\n    const { themedStyle, style, ...containerProps } = this.props;\n    const { container, ...childStyles } = this.getComponentStyle(themedStyle);\n    const [iconElement, textElement] = this.renderComponentChildren(childStyles);\n\n    return (\n      <TouchableOpacity\n        activeOpacity={1.0}\n        {...containerProps}\n        style={[container, styles.container, style]}\n        onPress={this.onPress}\n        onPressIn={this.onPressIn}\n        onPressOut={this.onPressOut}>\n        {iconElement}\n        {textElement}\n      </TouchableOpacity>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  text: {},\n  icon: {},\n});\n\nexport const Button = styled<ButtonProps>(ButtonComponent);\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Interaction } from '@kitten/theme';\nimport {\n  Button as RNButton,\n  ButtonElement as RNButtonElement,\n  ButtonProps as RNButtonProps,\n  // @ts-ignore\n} from './button.component.tsx';\nimport {\n  WebEventResponder,\n  WebEventResponderCallbacks,\n  WebEventResponderInstance,\n} from '../support/services';\n\nexport type ButtonProps = RNButtonProps & WebEventResponderCallbacks;\nexport type ButtonElement = React.ReactElement<ButtonProps>;\n\nexport class Button extends React.Component<ButtonProps> implements WebEventResponderCallbacks {\n\n  private buttonRef: React.RefObject<any> = React.createRef();\n  private webEventResponder: WebEventResponderInstance = WebEventResponder.create(this);\n\n  public onMouseEnter = (): void => {\n    this.buttonRef.current.props.dispatch([Interaction.HOVER]);\n\n    if (this.props.onMouseEnter) {\n      this.props.onMouseEnter();\n    }\n  };\n\n  public onMouseLeave = (): void => {\n    this.buttonRef.current.props.dispatch([]);\n\n    if (this.props.onMouseLeave) {\n      this.props.onMouseLeave();\n    }\n  };\n\n  public onFocus = (): void => {\n    this.buttonRef.current.props.dispatch([Interaction.FOCUSED]);\n\n    if (this.props.onFocus) {\n      this.props.onFocus();\n    }\n  };\n\n  public onBlur = (): void => {\n    this.buttonRef.current.props.dispatch([]);\n\n    if (this.props.onBlur) {\n      this.props.onBlur();\n    }\n  };\n\n  public render(): RNButtonElement {\n    const { style, ...restProps } = this.props;\n\n    return (\n      <RNButton\n        {...restProps}\n        {...this.webEventResponder.eventHandlers}\n        ref={this.buttonRef}\n        style={[style, styles.element]}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  element: {\n    // @ts-ignore\n    outlineWidth: 0,\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  StyleSheet,\n  View,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\nimport {\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport { ButtonElement } from '../button/button.component';\n\ntype ChildrenProp = ButtonElement | ButtonElement[];\n\ninterface ComponentProps {\n  size?: string;\n  status?: string;\n  children: ChildrenProp;\n}\n\nexport type ButtonGroupProps = StyledComponentProps & ViewProps & ComponentProps;\nexport type ButtonGroupElement = React.ReactElement<ButtonGroupProps>;\n\n/**\n * Renders a group of `Buttons`.\n *\n * @extends React.Component\n *\n * @property {string} appearance - Determines the appearance of the component.\n * Can be `filled` or `outline`.\n * Default is `filled`.\n *\n * @property {string} status - Determines the status of the component.\n * Can be `basic`, `primary`, `success`, `info`, `warning`, `danger` or `control`.\n * Default is `primary`.\n *\n * @property {string} size - Determines the size of the component.\n * Can be `tiny`, `small`, `medium`, `large`, or `giant`.\n * Default is `medium`.\n *\n * @property {React.ReactElement<ButtonProps>[]} children - Determines buttons in group.\n *\n * @property {ViewProps} ...ViewProps - Any props applied to View component.\n *\n * @overview-example ButtonGroupSimpleUsage\n *\n * @overview-example ButtonGroupStatus\n *\n * @overview-example ButtonGroupSize\n *\n * @example ButtonGroupInlineStyling\n */\nclass ButtonGroupComponent extends React.Component<ButtonGroupProps> {\n\n  static styledComponentName: string = 'ButtonGroup';\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const { dividerBackgroundColor, dividerWidth, ...containerParameters } = source;\n\n    return {\n      container: {\n        ...containerParameters,\n        borderWidth: containerParameters.borderWidth + 0.25,\n      },\n      button: {\n        borderWidth: dividerWidth,\n        borderColor: dividerBackgroundColor,\n      },\n    };\n  };\n\n  private isFirstElement = (index: number): boolean => {\n    return index === 0;\n  };\n\n  private isLastElement = (index: number): boolean => {\n    return index === React.Children.count(this.props.children) - 1;\n  };\n\n  private renderButtonElement = (element: ButtonElement, index: number, style: StyleType): ButtonElement => {\n    const { appearance, size, status } = this.props;\n    const { borderRadius }: ViewStyle = style.container;\n    const { borderWidth, borderColor }: ViewStyle = style.button;\n\n    const shapeStyle: ViewStyle = !this.isLastElement(index) && {\n      borderEndWidth: borderWidth,\n      borderEndColor: borderColor,\n    };\n\n    const startShapeStyle: ViewStyle = this.isFirstElement(index) && {\n      borderTopStartRadius: borderRadius,\n      borderBottomStartRadius: borderRadius,\n    };\n\n    const endShapeStyle: ViewStyle = this.isLastElement(index) && {\n      borderTopEndRadius: borderRadius,\n      borderBottomEndRadius: borderRadius,\n    };\n\n    return React.cloneElement(element, {\n      key: index,\n      appearance: appearance,\n      size: size,\n      status: status,\n      style: [element.props.style, styles.button, shapeStyle, startShapeStyle, endShapeStyle],\n    });\n  };\n\n  private renderButtonElements = (source: ChildrenProp, style: StyleType): ButtonElement[] => {\n    return React.Children.map(source, (element: ButtonElement, index: number): ButtonElement => {\n      return this.renderButtonElement(element, index, style);\n    });\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { themedStyle, style, children, ...derivedProps } = this.props;\n    const componentStyle: StyleType = this.getComponentStyle(themedStyle);\n\n    const buttonElements: ButtonElement[] = this.renderButtonElements(children, componentStyle);\n\n    return (\n      <View\n        {...derivedProps}\n        style={[componentStyle.container, styles.container, style]}>\n        {buttonElements}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    overflow: 'hidden',\n  },\n  button: {\n    borderRadius: 0,\n    borderWidth: 0,\n  },\n});\n\nexport const ButtonGroup = styled<ButtonGroupProps>(ButtonGroupComponent);\n","import React from 'react';\nimport {\n  ImageStyle,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  View,\n  ViewProps,\n} from 'react-native';\nimport { Button } from '../../button/button.component';\nimport {\n  Chevron,\n  ChevronElement,\n  ChevronDirection,\n} from '../../support/components';\n\ninterface ComponentProps extends ViewProps {\n  title: string;\n  titleStyle?: StyleProp<TextStyle>;\n  iconStyle?: ImageStyle;\n  lateralNavigationAllowed: boolean;\n  onTitlePress?: () => void;\n  onNavigationLeftPress?: () => void;\n  onNavigationRightPress?: () => void;\n}\n\nexport type CalendarHeaderProps = ComponentProps;\nexport type CalendarHeaderElement = React.ReactElement<CalendarHeaderProps>;\n\nexport class CalendarHeader extends React.Component<CalendarHeaderProps> {\n\n  private renderSpecificTitleIcon = (style: StyleProp<ImageStyle>, direction: ChevronDirection): ChevronElement => {\n    return (\n      <Chevron\n        style={style}\n        direction={direction}\n      />\n    );\n  };\n\n  private renderTitleIcon = (style: ImageStyle): ChevronElement => {\n    const { iconStyle } = this.props;\n\n    return this.renderSpecificTitleIcon(iconStyle, 'bottom');\n  };\n\n  private renderLeftIcon = (style: ImageStyle): ChevronElement => {\n    const { iconStyle } = this.props;\n\n    return this.renderSpecificTitleIcon([iconStyle, styles.lateralIcon], 'left');\n  };\n\n  private renderRightIcon = (style: ImageStyle): ChevronElement => {\n    const { iconStyle } = this.props;\n\n    return this.renderSpecificTitleIcon([iconStyle, styles.lateralIcon], 'right');\n  };\n\n  private renderLateralNavigationControls = (): React.ReactElement<ViewProps> => {\n    return (\n      <View style={styles.subContainer}>\n        <Button\n          style={styles.headerButton}\n          appearance='ghost'\n          // @ts-ignore\n          icon={this.renderLeftIcon}\n          onPress={this.props.onNavigationLeftPress}\n        />\n        <Button\n          style={styles.headerButton}\n          appearance='ghost'\n          // @ts-ignore\n          icon={this.renderRightIcon}\n          onPress={this.props.onNavigationRightPress}\n        />\n      </View>\n    );\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { style, titleStyle, onTitlePress, title, lateralNavigationAllowed, ...restProps } = this.props;\n\n    return (\n      <View style={[styles.container, style]} {...restProps}>\n        <Button\n          style={styles.headerButton}\n          appearance='ghost'\n          textStyle={[titleStyle, styles.headerButtonText]}\n          // @ts-ignore\n          icon={this.renderTitleIcon}\n          onPress={onTitlePress}>\n          {title}\n        </Button>\n        {lateralNavigationAllowed && this.renderLateralNavigationControls()}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n  headerButton: {\n    paddingVertical: 0,\n    paddingHorizontal: 0,\n    minWidth: 24,\n    minHeight: 24,\n  },\n  headerButtonText: {\n    marginHorizontal: 0,\n  },\n  lateralIcon: {\n    marginHorizontal: 0,\n  },\n  subContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  StyleSheet,\n  View,\n  ViewProps,\n} from 'react-native';\n\ninterface ComponentProps extends ViewProps {\n  data: string[];\n  children: (data: string, index: number) => React.ReactElement<any>;\n}\n\nexport type CalendarMonthHeaderProps = ComponentProps;\nexport type CalendarMonthHeaderElement = React.ReactElement<CalendarMonthHeaderProps>;\n\nexport class CalendarMonthHeader extends React.Component<CalendarMonthHeaderProps> {\n\n  public render(): React.ReactElement<ViewProps> {\n    const { style, data, children, ...restProps } = this.props;\n\n    return (\n      <View\n        {...restProps}\n        style={[styles.container, style]}>\n        {data.map(children)}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    flexDirection: 'row',\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  Animated,\n  Easing,\n  GestureResponderEvent,\n  LayoutChangeEvent,\n  PanResponder,\n  PanResponderCallbacks,\n  PanResponderGestureState,\n  PanResponderInstance,\n  StyleSheet,\n  View,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\nimport { I18nLayoutService } from '../support/services';\n\ntype ChildElement = React.ReactElement<any>;\ntype ChildrenProp = ChildElement | ChildElement[];\n\ninterface ComponentProps {\n  children: ChildrenProp;\n  selectedIndex?: number;\n  shouldLoadComponent?: (index: number) => boolean;\n  onOffsetChange?: (offset: number) => void;\n  onSelect?: (index: number) => void;\n}\n\nexport type ViewPagerProps = ViewProps & ComponentProps;\nexport type ViewPagerElement = React.ReactElement<ViewPagerProps>;\n\n/**\n * `ViewPager` allows flipping through the \"pages\".\n *\n * @extends React.Component\n *\n * @property {React.ReactElement<any> | React.ReactElement<any>[]} children - Determines children of the component.\n *\n * @property {number} selectedIndex - Determines the index of selected \"page\".\n *\n * @property {(index: number) => boolean} shouldLoadComponent - Determines loading behavior particular page and can be\n * used for lazy loading.\n *\n * @property {(offset: number) => void} onOffsetChange - Fires on scroll event with current scroll offset.\n *\n * @property {(index: number) => void} onSelect - Fires on \"page\" select with corresponding index.\n *\n * @property {ViewProps} ...ViewProps - Any props applied to View component.\n *\n * @overview-example ViewPagerSimpleUsage\n *\n * @overview-example ViewPagerLazyLoading\n *\n * @example ViewPagerInlineStyling\n */\nexport class ViewPager extends React.Component<ViewPagerProps> implements PanResponderCallbacks {\n\n  static defaultProps: Partial<ViewPagerProps> = {\n    selectedIndex: 0,\n    shouldLoadComponent: (): boolean => true,\n  };\n\n  private containerRef: React.RefObject<View> = React.createRef();\n  private contentWidth: number = 0;\n  private contentOffsetValue: number = 0;\n  private contentOffset: Animated.Value = new Animated.Value(this.contentOffsetValue);\n  private panResponder: PanResponderInstance = PanResponder.create(this);\n\n  public componentDidMount(): void {\n    this.contentOffset.addListener(this.onContentOffsetAnimationStateChanged);\n  }\n\n  public componentDidUpdate(prevProps: ViewPagerProps): void {\n    if (prevProps.selectedIndex !== this.props.selectedIndex) {\n      const index: number = this.props.selectedIndex;\n      this.scrollToIndex({ index, animated: true });\n    }\n  }\n\n  public componentWillUnmount(): void {\n    this.contentOffset.removeAllListeners();\n  }\n\n  public onMoveShouldSetPanResponder = (event: GestureResponderEvent, state: PanResponderGestureState): boolean => {\n    const isHorizontalMove: boolean = Math.abs(state.dx) > 0 && Math.abs(state.dx) > Math.abs(state.dy);\n\n    if (isHorizontalMove) {\n      const i18nOffset: number = I18nLayoutService.select(state.dx, -state.dx);\n      const nextSelectedIndex: number = this.props.selectedIndex - Math.sign(i18nOffset);\n\n      return nextSelectedIndex >= 0 && nextSelectedIndex < this.getChildCount();\n    }\n\n    return false;\n  };\n\n  public onPanResponderMove = (event: GestureResponderEvent, state: PanResponderGestureState): void => {\n    const i18nOffset: number = I18nLayoutService.select(this.contentWidth, -this.contentWidth);\n    const selectedPageOffset: number = this.props.selectedIndex * i18nOffset;\n\n    this.contentOffset.setValue(state.dx - selectedPageOffset);\n  };\n\n  public onPanResponderRelease = (event: GestureResponderEvent, state: PanResponderGestureState) => {\n    if (Math.abs(state.vx) >= 0.5 || Math.abs(state.dx) >= 0.5 * this.contentWidth) {\n      const i18nOffset: number = I18nLayoutService.select(state.dx, -state.dx);\n      const index: number = i18nOffset > 0 ? this.props.selectedIndex - 1 : this.props.selectedIndex + 1;\n      this.scrollToIndex({ index, animated: true });\n    } else {\n      const index: number = this.props.selectedIndex;\n      this.scrollToIndex({ index, animated: true });\n    }\n  };\n\n  public scrollToIndex(params: { index: number, animated?: boolean }): void {\n    const { index, ...rest } = params;\n    const childCount = this.getChildCount() - 1;\n    const offset: number = this.contentWidth * (index < 0 ? 0 : index > childCount ? childCount : index);\n\n    this.scrollToOffset({ offset, ...rest });\n  }\n\n  public scrollToOffset = (params: { offset: number, animated?: boolean }): void => {\n    this.createOffsetAnimation(params).start(this.onContentOffsetAnimationStateEnd);\n  };\n\n  private onLayout = (event: LayoutChangeEvent): void => {\n    this.contentWidth = event.nativeEvent.layout.width / this.getChildCount();\n\n    this.scrollToIndex({\n      index: this.props.selectedIndex,\n    });\n  };\n\n  private onContentOffsetAnimationStateChanged = (state: { value: number }): void => {\n    this.contentOffsetValue = I18nLayoutService.select(-state.value, state.value);\n\n    if (this.props.onOffsetChange) {\n      this.props.onOffsetChange(this.contentOffsetValue);\n    }\n  };\n\n  private onContentOffsetAnimationStateEnd = (result: { finished: boolean }): void => {\n    const selectedIndex: number = this.contentOffsetValue / this.contentWidth;\n\n    if (selectedIndex !== this.props.selectedIndex && this.props.onSelect) {\n      this.props.onSelect(Math.round(selectedIndex));\n    }\n  };\n\n  private createOffsetAnimation = (params: { offset: number, animated?: boolean }): Animated.CompositeAnimation => {\n    const animationDuration: number = params.animated ? 300 : 0;\n\n    return Animated.timing(this.contentOffset, {\n      toValue: I18nLayoutService.select(-params.offset, params.offset),\n      easing: Easing.linear,\n      duration: animationDuration,\n    });\n  };\n\n  private renderComponentChild = (source: ChildElement, index: number): ChildElement => {\n    const contentView: ChildElement | null = this.props.shouldLoadComponent(index) ? source : null;\n\n    return (\n      <View style={styles.contentContainer}>\n        {contentView}\n      </View>\n    );\n  };\n\n  private renderComponentChildren = (source: ChildrenProp): ChildElement[] => {\n    return React.Children.map(source, this.renderComponentChild);\n  };\n\n  private getChildCount = (): number => {\n    return React.Children.count(this.props.children);\n  };\n\n  private getContainerStyle = (): ViewStyle => {\n    return {\n      width: `${100 * this.getChildCount()}%`,\n\n      // @ts-ignore: RN has no types for `Animated` styles\n      transform: [{ translateX: this.contentOffset }],\n    };\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { style, children, ...restProps } = this.props;\n\n    return (\n      <Animated.View\n        {...restProps}\n        ref={this.containerRef}\n        style={[styles.container, style, this.getContainerStyle()]}\n        onLayout={this.onLayout}\n        {...this.panResponder.panHandlers}>\n        {this.renderComponentChildren(children)}\n      </Animated.View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n  },\n  contentContainer: {\n    flex: 1,\n    width: '100%',\n  },\n});\n","import React from 'react';\nimport {\n  ViewPager,\n  ViewPagerElement,\n  ViewPagerProps,\n} from '../../viewPager/viewPager.component';\nimport { CalendarDateInfo } from '../type';\nimport { Override } from '../../support/typings';\n\nexport type CalendarPagerProps<D> = Override<ViewPagerProps, {\n  data: CalendarDateInfo<D>[];\n  children: (date: CalendarDateInfo<D>, index: number) => React.ReactElement<any>;\n}>;\n\nexport type CalendarPagerElement<D> = React.ReactElement<CalendarPagerProps<D>>;\n\nexport class CalendarPager<D> extends React.Component<CalendarPagerProps<D>> {\n\n  public scrollToIndex(params: { index: number, animated?: boolean }): void {\n    this.viewPagerRef.current.scrollToIndex(params);\n  }\n\n  private viewPagerRef: React.RefObject<ViewPager> = React.createRef();\n\n  private onSelect = (index: number): void => {\n    // For any reason, this fixes layout junks\n    setTimeout(() => {\n      this.props.onSelect(index);\n    });\n  };\n\n  private shouldLoadComponent = (index: number): boolean => {\n    if (this.props.shouldLoadComponent) {\n      return this.props.shouldLoadComponent(index);\n    }\n    return true;\n  };\n\n  private createChildElement = (date: CalendarDateInfo<D>, index: number): React.ReactElement<any> => {\n    if (this.shouldLoadComponent(index)) {\n      return this.props.children(date, index);\n    }\n    return null;\n  };\n\n  public render(): ViewPagerElement {\n    const { data, children, ...restProps } = this.props;\n\n    return (\n      <ViewPager\n        {...restProps}\n        ref={this.viewPagerRef}\n        shouldLoadComponent={this.shouldLoadComponent}\n        onSelect={this.onSelect}>\n        {data.map(this.createChildElement)}\n      </ViewPager>\n    );\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  StyleSheet,\n  View,\n  ViewProps,\n} from 'react-native';\nimport { CalendarPickerCellElement } from './calendarPickerCell.component';\nimport { CalendarDateInfo } from '../../type';\n\ninterface ComponentProps<D> extends ViewProps {\n  data: CalendarDateInfo<D>[];\n  renderItem: (item: CalendarDateInfo<D>, index: number) => CalendarPickerCellElement<D>;\n}\n\nexport type CalendarPickerRowProps<D> = ComponentProps<D>;\nexport type CalendarPickerRowElement<D> = React.ReactElement<CalendarPickerRowProps<D>>;\n\nexport class CalendarPickerRow<D> extends React.Component<CalendarPickerRowProps<D>> {\n\n  public render(): React.ReactElement<ViewProps> {\n    const { style, data, renderItem, ...restProps } = this.props;\n\n    return (\n      <View\n        {...restProps}\n        style={[styles.container, style]}>\n        {data.map(renderItem)}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    overflow: 'hidden',\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  StyleSheet,\n  TouchableOpacity,\n  TouchableOpacityProps,\n} from 'react-native';\nimport {\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport { CalendarDateInfo } from '../../type';\n\ntype ChildrenProp<D> = (date: CalendarDateInfo<D>, style: StyleType) => React.ReactElement<any>;\n\ninterface ComponentProps<D> extends TouchableOpacityProps {\n  date: CalendarDateInfo<D>;\n  selected?: boolean;\n  bounding?: boolean;\n  today?: boolean;\n  range?: boolean;\n  firstRangeItem?: boolean;\n  lastRangeItem?: boolean;\n  onSelect?: (date: CalendarDateInfo<D>) => void;\n  children: ChildrenProp<D>;\n  shouldComponentUpdate?: (props: CalendarPickerCellProps<D>, nextProps: CalendarPickerCellProps<D>) => boolean;\n}\n\nexport type CalendarPickerCellProps<D> = StyledComponentProps & ComponentProps<D>;\nexport type CalendarPickerCellElement<D> = React.ReactElement<CalendarPickerCellProps<D>>;\n\nclass CalendarPickerCellComponent<D> extends React.Component<CalendarPickerCellProps<D>> {\n\n  static styledComponentName: string = 'CalendarCell';\n\n  static defaultProps = {\n    selected: false,\n    today: false,\n  };\n\n  public shouldComponentUpdate(nextProps: CalendarPickerCellProps<D>): boolean {\n    if (nextProps.shouldComponentUpdate) {\n      return nextProps.shouldComponentUpdate(this.props, nextProps);\n    }\n    return true;\n  }\n\n  private onPress = (): void => {\n    if (this.props.onSelect) {\n      this.props.onSelect(this.props.date);\n    }\n  };\n\n  private getContainerBorderRadius = (borderRadius: number): StyleType => {\n    const { firstRangeItem, lastRangeItem } = this.props;\n\n    if (firstRangeItem) {\n      return {\n        borderBottomLeftRadius: borderRadius,\n        borderBottomRightRadius: 0,\n        borderTopLeftRadius: borderRadius,\n        borderTopRightRadius: 0,\n      };\n    }\n    if (lastRangeItem) {\n      return {\n        borderBottomLeftRadius: 0,\n        borderBottomRightRadius: borderRadius,\n        borderTopLeftRadius: 0,\n        borderTopRightRadius: borderRadius,\n      };\n    }\n\n    return {};\n  };\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const {\n      contentBorderWidth,\n      contentBorderRadius,\n      contentBorderColor,\n      contentBackgroundColor,\n      contentTextFontSize,\n      contentTextLineHeight,\n      contentTextFontWeight,\n      contentTextColor,\n      contentTextFontFamily,\n      borderRadius,\n      ...containerParameters\n    } = source;\n\n    return {\n      container: {\n        ...containerParameters,\n        ...this.getContainerBorderRadius(borderRadius),\n      },\n      contentContainer: {\n        borderWidth: contentBorderWidth,\n        borderRadius: contentBorderRadius,\n        borderColor: contentBorderColor,\n        backgroundColor: contentBackgroundColor,\n      },\n      contentText: {\n        fontSize: contentTextFontSize,\n        fontWeight: contentTextFontWeight,\n        lineHeight: contentTextLineHeight,\n        color: contentTextColor,\n        fontFamily: contentTextFontFamily,\n      },\n    };\n  };\n\n  private renderContentElement = (source: ChildrenProp<D>, style: StyleType): React.ReactElement<any> => {\n    return source && source(this.props.date, {\n      container: style.contentContainer,\n      text: style.contentText,\n    });\n  };\n\n  public render(): React.ReactElement<TouchableOpacityProps> {\n    const { style, themedStyle, date, bounding, children, ...restProps } = this.props;\n    const { container, ...componentStyles } = this.getComponentStyle(themedStyle);\n\n    return (\n      <TouchableOpacity\n        activeOpacity={1.0}\n        onPress={this.onPress}\n        {...restProps}\n        style={[container, styles.container, style]}>\n        {this.renderContentElement(children, componentStyles)}\n      </TouchableOpacity>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n\nexport const CalendarPickerCell = styled(CalendarPickerCellComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  View,\n  ViewProps,\n  StyleProp,\n} from 'react-native';\nimport { StyleType } from '@kitten/theme';\nimport {\n  CalendarPickerRow,\n  CalendarPickerRowElement,\n} from './calendarPickerRow.component';\nimport {\n  CalendarPickerCell,\n  CalendarPickerCellElement,\n  CalendarPickerCellProps,\n} from './calendarPickerCell.component';\nimport { CalendarDateInfo } from '../../type';\n\ninterface ComponentProps<D> extends ViewProps {\n  data: CalendarDateInfo<D>[][];\n  isItemSelected: (item: CalendarDateInfo<D>) => boolean;\n  isItemDisabled: (item: CalendarDateInfo<D>) => boolean;\n  isItemToday: (item: CalendarDateInfo<D>) => boolean;\n  onSelect?: (item: CalendarDateInfo<D>) => void;\n  renderItem: (item: CalendarDateInfo<D>, style: StyleType) => React.ReactElement<any>;\n  shouldItemUpdate?: (props: CalendarPickerCellProps<D>, nextProps: CalendarPickerCellProps<D>) => boolean;\n  rowStyle?: StyleProp<ViewProps>;\n}\n\nexport type CalendarPickerProps<D> = ComponentProps<D>;\nexport type CalendarPickerElement<D> = React.ReactElement<CalendarPickerProps<D>>;\n\nexport class CalendarPicker<D> extends React.Component<CalendarPickerProps<D>> {\n\n  private get rangedArray (): CalendarDateInfo<D>[] {\n    const { data } = this.props;\n\n    return [].concat(...data).filter((item: CalendarDateInfo<D>) => {\n      return item.range;\n    });\n  }\n\n  private isFirstRangeItem = (item: CalendarDateInfo<D>, range: CalendarDateInfo<D>[]): boolean => {\n    return range.indexOf(item) === 0;\n  };\n\n  private isLastRangeItem = (item: CalendarDateInfo<D>, range: CalendarDateInfo<D>[]): boolean => {\n    return range.indexOf(item) === range.length - 1;\n  };\n\n  private renderCellElement = (item: CalendarDateInfo<D>, index: number): CalendarPickerCellElement<D> => {\n    const isFirstRangeItem: boolean = this.isFirstRangeItem(item, this.rangedArray);\n    const isLastRangeItem: boolean = this.isLastRangeItem(item, this.rangedArray);\n\n    return (\n      <CalendarPickerCell\n        key={index}\n        date={item}\n        selected={this.props.isItemSelected(item)}\n        disabled={this.props.isItemDisabled(item)}\n        bounding={item.bounding}\n        today={this.props.isItemToday(item)}\n        range={item.range}\n        firstRangeItem={isFirstRangeItem}\n        lastRangeItem={isLastRangeItem}\n        onSelect={this.props.onSelect}\n        shouldComponentUpdate={this.props.shouldItemUpdate}>\n        {this.props.renderItem}\n      </CalendarPickerCell>\n    );\n  };\n\n  private renderRowElement = (item: CalendarDateInfo<D>[], index: number): CalendarPickerRowElement<D> => {\n    const { rowStyle } = this.props;\n\n    return (\n      <CalendarPickerRow\n        style={rowStyle}\n        key={index}\n        data={item}\n        renderItem={this.renderCellElement}\n      />\n    );\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { data, renderItem, ...restProps } = this.props;\n\n    return (\n      <View\n        {...restProps}>\n        {data.map(this.renderRowElement)}\n      </View>\n    );\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  View,\n  ViewProps,\n} from 'react-native';\nimport { Text } from '../../text/text.component';\n\ninterface ComponentProps extends ViewProps {\n  textStyle?: StyleProp<TextStyle>;\n  children: string;\n}\n\nexport type CalendarDateContentProps = ComponentProps;\nexport type CalendarDateContentElement = React.ReactElement<CalendarDateContentProps>;\n\nexport class CalendarDateContent extends React.Component<CalendarDateContentProps> {\n\n  public render(): React.ReactElement<ViewProps> {\n    const { style, textStyle, children, ...restProps } = this.props;\n\n    return (\n      <View\n        {...restProps}\n        style={[styles.container, style]}>\n        <Text style={textStyle}>{children}</Text>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n","export interface CalendarDateOptions {\n  bounding: boolean;\n  holiday: boolean;\n  range?: boolean;\n}\n\nexport interface CalendarRange<D> {\n  startDate?: D;\n  endDate?: D;\n}\n\nexport interface CalendarDateInfo<D> extends CalendarDateOptions {\n  date: D;\n}\n\nconst VIEW_MODE_DATE: CalendarViewMode = {\n  id: 'DATE',\n  navigationNext: (): CalendarViewMode => {\n    return VIEW_MODE_YEAR;\n  },\n  pickNext: (): CalendarViewMode => {\n    return VIEW_MODE_DATE;\n  },\n};\n\nconst VIEW_MODE_MONTH: CalendarViewMode = {\n  id: 'MONTH',\n  navigationNext: (): CalendarViewMode => {\n    return VIEW_MODE_DATE;\n  },\n  pickNext: (): CalendarViewMode => {\n    return VIEW_MODE_DATE;\n  },\n};\n\nconst VIEW_MODE_YEAR: CalendarViewMode = {\n  id: 'YEAR',\n  navigationNext: (): CalendarViewMode => {\n    return VIEW_MODE_DATE;\n  },\n  pickNext: (): CalendarViewMode => {\n    return VIEW_MODE_MONTH;\n  },\n};\n\nexport interface CalendarViewMode {\n  id: string;\n  navigationNext: () => CalendarViewMode;\n  pickNext: () => CalendarViewMode;\n}\n\ninterface CalendarViewModes {\n  DATE: CalendarViewMode;\n  MONTH: CalendarViewMode;\n  YEAR: CalendarViewMode;\n}\n\nexport const CalendarViewModes: CalendarViewModes = {\n  DATE: VIEW_MODE_DATE,\n  MONTH: VIEW_MODE_MONTH,\n  YEAR: VIEW_MODE_YEAR,\n};\n\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nimport { TranslationWidth } from '../i18n/type';\n\nexport abstract class DateService<D> {\n  static DAYS_IN_WEEK: number = 7;\n  static MONTHS_IN_YEAR: number = 12;\n\n  protected locale: string;\n\n  public setLocale(locale: any) {\n    this.locale = locale;\n  }\n\n  public compareDatesSafe(date1: D, date2: D): number {\n    if (date1 && date2) {\n      return this.compareDates(date1, date2);\n    } else if (!date1 && !date2) {\n      return 0;\n    }\n    return -1;\n  }\n\n  /**\n   * Checks if the date is between the start date and the end date.\n   * */\n  public isBetween(date: D, start: D, end: D): boolean {\n    return this.compareDates(date, start) > 0 && this.compareDates(date, end) < 0;\n  }\n\n  /**\n   * Checks if the date is between the start date and the end date.\n   * */\n  public isBetweenSafe(date: D, start: D, end: D): boolean {\n    return date && start && end && this.compareDates(date, start) > 0 && this.compareDates(date, end) < 0;\n  }\n\n  /**\n   * Checks if the date is between the start date and the end date including bounds.\n   * */\n  public isBetweenIncluding(date: D, start: D, end: D): boolean {\n    return this.compareDates(date, start) >= 0 && this.compareDates(date, end) <= 0;\n  }\n\n  /**\n   * Checks if the date is between the start date and the end date including bounds.\n   * */\n  public isBetweenIncludingSafe(date: D, start: D, end: D): boolean {\n    return date && start && end && this.isBetweenIncluding(date, start, end);\n  }\n\n  /**\n   * Checks is two dates have the same day.\n   * */\n  public isSameDaySafe(date1: D, date2: D): boolean {\n    return date1 && date2 && this.isSameDay(date1, date2);\n  }\n\n  /**\n   * Checks is two dates have the same month.\n   * */\n  public isSameMonthSafe(date1: D, date2: D): boolean {\n    return date1 && date2 && this.isSameMonth(date1, date2);\n  }\n\n  /**\n   * Checks is two dates have the same year.\n   * */\n  public isSameYearSafe(date1: D, date2: D): boolean {\n    return date1 && date2 && this.isSameYear(date1, date2);\n  }\n\n  /**\n   * Returns true if date string is valid date string according to the provided format.\n   * */\n  public abstract isValidDateString(date: string, format: string): boolean;\n\n  /**\n   * Returns today date.\n   * */\n  public abstract today(): D;\n\n  /**\n   * Gets the date of the month component of the given date.\n   */\n  public abstract getDate(date: D): number;\n\n  /**\n   * Gets the month component of the given date.\n   * */\n  public abstract getMonth(date: D): number;\n\n  /**\n   * Gets the year component of the given date.\n   * */\n  public abstract getYear(date: D): number;\n\n  /**\n   * Returns day of the week of the given date.\n   */\n  public abstract getDayOfWeek(date: D): number;\n\n  /**\n   * Returns first day of the week, it can be 1 if week starts from monday\n   * and 0 if from sunday and so on.\n   * */\n  public abstract getFirstDayOfWeek(): number;\n\n  /**\n   * Returns localized month name by date and style.\n   * */\n  public abstract getMonthName(date: D, style?: TranslationWidth): string;\n\n  /**\n   * Returns localized month name by month index and style.\n   * */\n  public abstract getMonthNameByIndex(month: number, style?: TranslationWidth): string;\n\n  /**\n   * Returns localized days names.\n   * */\n  public abstract getDayOfWeekNames(style?: TranslationWidth): string[];\n\n  /**\n   * Parses the date string according to the passed format.\n   * */\n  public abstract parse(date: string, format: string): D;\n\n  /**\n   * Transforms the date to the string according to the passed format.\n   * */\n  public abstract format(date: D, format: string): string;\n\n  /**\n   * Creates new date from year, month and date.\n   * */\n  public abstract createDate(year: number, month: number, date: number): D;\n\n  /**\n   * Checks is two dates have the same year.\n   * */\n  public abstract isSameYear(date1: D, date2: D): boolean;\n\n  /**\n   * Checks is two dates have the same month.\n   * */\n  public abstract isSameMonth(date1: D, date2: D): boolean;\n\n  /**\n   * Checks is two dates have the same day.\n   * */\n  public abstract isSameDay(date1: D, date2: D): boolean;\n\n  /**\n   * Compares two dates.\n   * Returns 0 if dates are the same.\n   * Returns 1 if the first date is greater than the second.\n   * Returns -1 if the second date is greater than the first.\n   * */\n  public abstract compareDates(date1: D, date2: D): number;\n\n  /**\n   * Clones passed date.\n   * */\n  public abstract clone(date: D): D;\n\n  /**\n   * Creates the same date but with day equals to 1.\n   * */\n  public abstract getMonthStart(date: D): D;\n\n  /**\n   * Creates the same date but with day equals to the last day in this month.\n   * */\n  public abstract getMonthEnd(date: D): D;\n\n  /**\n   * Creates the same date but with month equals to 0 and day equals to 1.\n   * */\n  public abstract getYearStart(date: D): D;\n\n  /**\n   * Creates the same date but with month equals to 11 and day equals to 31.\n   * */\n  public abstract getYearEnd(date: D): D;\n\n  /**\n   * Returns number of days in the date.\n   * */\n  public abstract getNumberOfDaysInMonth(date: D): number;\n\n  /**\n   * Returns date with added number of days.\n   * */\n  public abstract addDay(date: D, days: number): D;\n\n  /**\n   * Returns date with added number of months.\n   * */\n  public abstract addMonth(date: D, months: number): D;\n\n  /**\n   * Returns date with added number of years.\n   * */\n  public abstract addYear(date: D, years: number): D;\n\n  public abstract getId(): string;\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\ntype DaysArray = [string, string, string, string, string, string, string];\ntype MonthsArray = [string, string, string, string, string, string, string, string, string, string, string, string];\n\nexport enum TranslationWidth {\n  SHORT = 'short',\n  LONG = 'long',\n}\n\nexport interface I18nDayNames {\n  [TranslationWidth.SHORT]: DaysArray;\n  [TranslationWidth.LONG]: DaysArray;\n}\n\nexport interface I18nMonthNames {\n  [TranslationWidth.SHORT]?: MonthsArray;\n  [TranslationWidth.LONG]?: MonthsArray;\n}\n\nexport interface I18nConfig {\n  dayNames: I18nDayNames;\n  monthNames: I18nMonthNames;\n}\n","import { I18nConfig } from './type';\n\nexport const EN: I18nConfig = {\n  dayNames: {\n    short: [\n      'Su',\n      'Mo',\n      'Tu',\n      'We',\n      'Th',\n      'Fr',\n      'Sa',\n    ],\n    long: [\n      'Sunday',\n      'Monday',\n      'Tuesday',\n      'Wednesday',\n      'Thursday',\n      'Friday',\n      'Saturday',\n    ],\n  },\n  monthNames: {\n    short: [\n      'Jan',\n      'Feb',\n      'Mar',\n      'Apr',\n      'May',\n      'Jun',\n      'Jul',\n      'Aug',\n      'Sep',\n      'Oct',\n      'Nov',\n      'Dec',\n    ],\n    long: [\n      'January',\n      'February',\n      'March',\n      'April',\n      'May',\n      'June',\n      'July',\n      'August',\n      'September',\n      'October',\n      'November',\n      'December',\n    ],\n  },\n};\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport fecha from 'fecha';\nimport { DateService } from './date.service';\nimport {\n  I18nConfig,\n  TranslationWidth,\n} from '../i18n/type';\nimport { EN } from '../i18n/en';\n\nexport const LOCALE_DEFAULT = 'en';\n\nexport interface NativeDateServiceOptions {\n  // 0 for Sunday, 1 for Monday, etc\n  startDayOfWeek?: 0 | 1 | 2 | 3 | 4 | 5 | 6;\n  i18n?: I18nConfig;\n}\n\nconst DEFAULT_OPTIONS: NativeDateServiceOptions = {\n  startDayOfWeek: 0,\n};\n\n/**\n * The `NativeDateService` is basic implementation of `DateService` using\n * native js date objects.\n */\nexport class NativeDateService extends DateService<Date> {\n\n  protected options: NativeDateServiceOptions;\n\n  constructor(locale: string = LOCALE_DEFAULT, options?: NativeDateServiceOptions) {\n    super();\n    this.options = { ...DEFAULT_OPTIONS, ...options };\n    super.setLocale(this.options.i18n ? locale : LOCALE_DEFAULT);\n    this.setFechaLocaleData(this.options.i18n || EN);\n  }\n\n  public setLocale(locale: string) {\n    console.warn('Runtime locale is not supported');\n  }\n\n  public isValidDateString(date: string, format: string): boolean {\n    return !isNaN(this.parse(date, format).getTime());\n  }\n\n  public today(): Date {\n    return new Date();\n  }\n\n  public getDate(date: Date): number {\n    return date.getDate();\n  }\n\n  public getMonth(date: Date): number {\n    return date.getMonth();\n  }\n\n  public getYear(date: Date): number {\n    return date.getFullYear();\n  }\n\n  public getDayOfWeek(date: Date): number {\n    return date.getDay();\n  }\n\n  /**\n   * returns first day of the week, it can be 1 if week starts from monday\n   * and 0 if from sunday and so on.\n   * */\n  public getFirstDayOfWeek(): number {\n    return this.options.startDayOfWeek;\n  }\n\n  public getMonthName(date: Date, style: TranslationWidth = TranslationWidth.SHORT): string {\n    const index: number = date.getMonth();\n\n    return this.getMonthNameByIndex(index, style);\n  }\n\n  public getMonthNameByIndex(index: number, style: TranslationWidth = TranslationWidth.SHORT): string {\n    return this.getFechaMonthNames(style)[index];\n  }\n\n  public getDayOfWeekNames(style: TranslationWidth = TranslationWidth.SHORT): string[] {\n    const dayNames: string[] = this.getFechaDayNames(style);\n\n    // avoid mutation of source array\n    return this.shiftDayOfWeekNames([...dayNames], this.options.startDayOfWeek);\n  }\n\n  public format(date: Date, format: string): string {\n    return fecha.format(date, format);\n  }\n\n  /**\n   * We haven't got capability to parse date using formatting without third party libraries.\n   * */\n  public parse(date: string, format: string): Date {\n    return new Date(Date.parse(date));\n  }\n\n  public addDay(date: Date, num: number): Date {\n    return this.createDate(date.getFullYear(), date.getMonth(), date.getDate() + num);\n  }\n\n  public addMonth(date: Date, num: number): Date {\n    const month: Date = this.createDate(date.getFullYear(), date.getMonth() + num, 1);\n\n    // In case of date has more days than calculated month js Date will change that month to the next one\n    // because of the date overflow.\n    month.setDate(Math.min(date.getDate(), this.getMonthEnd(month).getDate()));\n\n    return month;\n  }\n\n  public addYear(date: Date, num: number): Date {\n    return this.createDate(date.getFullYear() + num, date.getMonth(), date.getDate());\n  }\n\n  public clone(date: Date): Date {\n    return new Date(date.getTime());\n  }\n\n  public compareDates(date1: Date, date2: Date): number {\n    return date1.getTime() - date2.getTime();\n  }\n\n  public compareDatesSafe(date1: Date, date2: Date): number {\n    if (this.compareDates(date1, date2) < 0) {\n      return -1;\n    } else if (this.compareDates(date1, date2) > 0) {\n      return 1;\n    } else if (this.compareDates(date1, date2) === 0) {\n      return 0;\n    }\n  }\n\n  public createDate(year: number, month: number, date: number): Date {\n    const result = new Date(year, month, date);\n\n    // We need to correct for the fact that JS native Date treats years in range [0, 99] as\n    // abbreviations for 19xx.\n    if (year >= 0 && year < 100) {\n      result.setFullYear(result.getFullYear() - 1900);\n    }\n\n    return result;\n  }\n\n  public getMonthEnd(date: Date): Date {\n    return this.createDate(date.getFullYear(), date.getMonth() + 1, 0);\n  }\n\n  public getMonthStart(date: Date): Date {\n    return this.createDate(date.getFullYear(), date.getMonth(), 1);\n  }\n\n  public getNumberOfDaysInMonth(date: Date): number {\n    return this.getMonthEnd(date).getDate();\n  }\n\n  public getYearEnd(date: Date): Date {\n    return this.createDate(date.getFullYear(), 11, 31);\n  }\n\n  public getYearStart(date: Date): Date {\n    return this.createDate(date.getFullYear(), 0, 1);\n  }\n\n  public isSameDay(date1: Date, date2: Date): boolean {\n    return this.isSameMonth(date1, date2) && date1.getDate() === date2.getDate();\n  }\n\n  public isSameMonth(date1: Date, date2: Date): boolean {\n    return this.isSameYear(date1, date2) && date1.getMonth() === date2.getMonth();\n  }\n\n  public isSameYear(date1: Date, date2: Date): boolean {\n    return date1.getFullYear() === date2.getFullYear();\n  }\n\n  public getId(): string {\n    return 'native';\n  }\n\n  protected shiftDayOfWeekNames<T>(value: T[], offset: number): T[] {\n    return value.splice(offset).concat(value);\n  }\n\n  private getFechaDayNames(style: TranslationWidth): string[] {\n    switch (style) {\n      case TranslationWidth.SHORT:\n        return fecha.i18n.dayNamesShort;\n      case TranslationWidth.LONG:\n        return fecha.i18n.dayNames;\n    }\n  }\n\n  private getFechaMonthNames(style: TranslationWidth): string[] {\n    switch (style) {\n      case TranslationWidth.SHORT:\n        return fecha.i18n.monthNamesShort;\n      case TranslationWidth.LONG:\n        return fecha.i18n.monthNames;\n    }\n  }\n\n  private setFechaLocaleData(config: I18nConfig) {\n    fecha.i18n.dayNames = config.dayNames[TranslationWidth.LONG];\n    fecha.i18n.dayNamesShort = config.dayNames[TranslationWidth.SHORT];\n    fecha.i18n.monthNames = config.monthNames[TranslationWidth.LONG];\n    fecha.i18n.monthNamesShort = config.monthNames[TranslationWidth.SHORT];\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nexport const batch = <T>(target: T[], batchSize: number, offset: number = 0): T[][] => {\n  return target.reduce((res, item, index): T[] => {\n    const chunkIndex = Math.floor((index + offset) / batchSize);\n    if (!res[chunkIndex]) {\n      res[chunkIndex] = [];\n    }\n    res[chunkIndex].push(item);\n\n    return res;\n  }, []);\n};\n\n/**\n * returns array with numbers from zero to bound.\n * */\nexport const range = <T>(bound: number, producer: (number) => T = i => i) => {\n  const arr: T[] = [];\n\n  for (let i = 0; i < bound; i++) {\n    arr.push(producer(i));\n  }\n\n  return arr;\n};\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { DateService } from './date.service';\nimport {\n  batch,\n  range,\n} from './helpers';\nimport {\n  CalendarDateInfo,\n  CalendarDateOptions,\n  CalendarRange,\n} from '../type';\n\nconst DEFAULT_DATE_OPTIONS: CalendarDateOptions = {\n  bounding: false,\n  holiday: false,\n  range: false,\n};\n\nexport type DateRange<D> = CalendarDateInfo<D>[];\nexport type DateBatch<D> = DateRange<D>[];\n\nexport class CalendarDataService<D> {\n\n  constructor(protected dateService: DateService<D>) {\n  }\n\n  public createDayPickerData = (date: D, dateRange?: CalendarRange<D>): DateBatch<D> => {\n    const weeks: DateBatch<D> = this.createDates(date, DEFAULT_DATE_OPTIONS, dateRange);\n\n    return this.withBoundingMonths(weeks, date);\n  };\n\n  public createMonthPickerData = (date: D, rows: number, columns: number): DateBatch<D> => {\n    const yearStart: D = this.dateService.getYearStart(date);\n    const monthRange: DateRange<D> = range(rows * columns, (index: number): CalendarDateInfo<D> => {\n      const monthDate: D = this.dateService.addMonth(yearStart, index);\n      return { date: monthDate, ...DEFAULT_DATE_OPTIONS };\n    });\n\n    return batch(monthRange, rows);\n  };\n\n  public createYearPickerData = (date: D, rows: number, columns: number): DateBatch<D> => {\n    const yearStart: D = this.dateService.getYearStart(date);\n    const yearRange: DateRange<D> = range(rows * columns, (index: number): CalendarDateInfo<D> => {\n      const yearDate: D = this.dateService.addYear(yearStart, index);\n      return { date: yearDate, ...DEFAULT_DATE_OPTIONS };\n    });\n\n    return batch(yearRange, rows);\n  };\n\n  public createDayPickerPagerData = (startDate: D, endDate: D): DateRange<D> => {\n    const numberOfDayPickers: number = this.getNumberOfMonths(startDate, endDate) + 1;\n\n    return range(numberOfDayPickers, (index: number): CalendarDateInfo<D> => {\n      const monthDate: D = this.dateService.addMonth(startDate, index);\n      return { date: monthDate, ...DEFAULT_DATE_OPTIONS };\n    });\n  };\n\n  public createYearPickerPagerData = (startDate: D, endDate: D, rows: number, columns: number): DateRange<D> => {\n    const numberOfYears: number = this.getNumberOfYears(startDate, endDate) + 1;\n    const numberOfYearPickers: number = Math.max(Math.ceil(numberOfYears / (rows * columns)), 1);\n\n    return range(numberOfYearPickers, (index: number): CalendarDateInfo<D> => {\n      const yearDate: D = this.dateService.addYear(startDate, index * rows * columns);\n      return { date: yearDate, ...DEFAULT_DATE_OPTIONS };\n    });\n  };\n\n  public getNumberOfMonths = (lhs: D, rhs: D): number => {\n    const numberOfYears: number = this.getNumberOfYears(lhs, rhs);\n    const numberOfMonths: number = this.dateService.getMonth(rhs) - this.dateService.getMonth(lhs);\n\n    return numberOfMonths + numberOfYears * DateService.MONTHS_IN_YEAR;\n  };\n\n  public getNumberOfYears = (lhs: D, rhs: D): number => {\n    return this.dateService.getYear(rhs) - this.dateService.getYear(lhs);\n  };\n\n  private createDates(activeMonth: D, options: CalendarDateOptions, dateRange?: CalendarRange<D>): DateBatch<D> {\n    let days: DateRange<D> = this.createDateRangeForMonth(activeMonth, options);\n\n    if (dateRange) {\n      days = this.withRangedDates(days, dateRange);\n    }\n\n    const startOfWeekDayDiff: number = this.getStartOfWeekDayDiff(activeMonth);\n\n    return batch(days, DateService.DAYS_IN_WEEK, startOfWeekDayDiff);\n  }\n\n  private withRangedDates(days: DateRange<D>, calendarRange: CalendarRange<D>): DateRange<D> {\n    if (calendarRange.startDate && !calendarRange.endDate) {\n      return this.withRangedStartDates(days, calendarRange.startDate);\n    }\n\n    if (calendarRange.startDate && calendarRange.endDate) {\n      return this.withRangedStartEndDates(days, calendarRange.startDate, calendarRange.endDate);\n    }\n\n    return days;\n  }\n\n  private withRangedStartDates(days: DateRange<D>, startDate): DateRange<D> {\n    return days.map((day: CalendarDateInfo<D>): CalendarDateInfo<D> => {\n      const isSameStartDate: boolean = this.dateService.compareDatesSafe(day.date, startDate) === 0;\n      return isSameStartDate ? { ...day, range: true } : day;\n    });\n  }\n\n  private withRangedStartEndDates(days: DateRange<D>, startDate: D, endDate: D): DateRange<D> {\n    return days.map((day: CalendarDateInfo<D>): CalendarDateInfo<D> => {\n      const isSameStartDate: boolean = this.dateService.compareDatesSafe(day.date, startDate) === 0;\n      const isSameEndDate: boolean = this.dateService.compareDatesSafe(day.date, endDate) === 0;\n\n      if (isSameStartDate || isSameEndDate) {\n        return { ...day, range: true };\n      } else {\n        const isInRange: boolean = this.dateService.isBetween(day.date, startDate, endDate);\n        return { ...day, range: isInRange };\n      }\n    });\n  }\n\n  private withBoundingMonths(weeks: DateBatch<D>, activeMonth: D): DateBatch<D> {\n    let withBoundingMonths: DateBatch<D> = weeks;\n\n    if (this.isShouldAddPrevBoundingMonth(withBoundingMonths)) {\n      withBoundingMonths = this.addPrevBoundingMonth(withBoundingMonths, activeMonth);\n    }\n\n    if (this.isShouldAddNextBoundingMonth(withBoundingMonths)) {\n      withBoundingMonths = this.addNextBoundingMonth(withBoundingMonths, activeMonth);\n    }\n\n    return withBoundingMonths;\n  }\n\n  private addPrevBoundingMonth(weeks: DateBatch<D>, activeMonth: D): DateBatch<D> {\n    const firstWeek: DateRange<D> = weeks.shift();\n    const numberOfBoundingDates: number = DateService.DAYS_IN_WEEK - firstWeek.length;\n    firstWeek.unshift(...this.createPrevBoundingDays(activeMonth, numberOfBoundingDates));\n\n    return [firstWeek, ...weeks];\n  }\n\n  private addNextBoundingMonth(weeks: DateBatch<D>, activeMonth: D): DateBatch<D> {\n    const lastWeek: DateRange<D> = weeks.pop();\n    const numberOfBoundingDates: number = DateService.DAYS_IN_WEEK - lastWeek.length;\n    lastWeek.push(...this.createNextBoundingDays(activeMonth, numberOfBoundingDates));\n\n    return [...weeks, lastWeek];\n  }\n\n  private createPrevBoundingDays(activeMonth: D, numberOfBoundingDates: number): DateRange<D> {\n    const month: D = this.dateService.addMonth(activeMonth, -1);\n    const daysInMonth: number = this.dateService.getNumberOfDaysInMonth(month);\n\n    return this.createDateRangeForMonth(month, DEFAULT_DATE_OPTIONS)\n      .slice(daysInMonth - numberOfBoundingDates)\n      .map((date: CalendarDateInfo<D>): CalendarDateInfo<D> => {\n        return { ...date, bounding: true };\n      });\n  }\n\n  private createNextBoundingDays(activeMonth: D, numberOfBoundingDates: number): DateRange<D> {\n    const month: D = this.dateService.addMonth(activeMonth, 1);\n\n    return this.createDateRangeForMonth(month, DEFAULT_DATE_OPTIONS)\n      .slice(0, numberOfBoundingDates)\n      .map((date: CalendarDateInfo<D>): CalendarDateInfo<D> => {\n        return { ...date, bounding: true };\n      });\n  }\n\n  private getStartOfWeekDayDiff(date: D): number {\n    const startOfMonth: D = this.dateService.getMonthStart(date);\n\n    return this.getWeekStartDiff(startOfMonth);\n  }\n\n  private getWeekStartDiff(date: D): number {\n    return (\n      DateService.DAYS_IN_WEEK\n      - this.dateService.getFirstDayOfWeek()\n      + this.dateService.getDayOfWeek(date)\n    ) % DateService.DAYS_IN_WEEK;\n  }\n\n  private isShouldAddPrevBoundingMonth(weeks: DateBatch<D>): boolean {\n    return weeks[0].length < DateService.DAYS_IN_WEEK;\n  }\n\n  private isShouldAddNextBoundingMonth(weeks: DateBatch<D>): boolean {\n    return weeks[weeks.length - 1].length < DateService.DAYS_IN_WEEK;\n  }\n\n  private createDateRangeForMonth(monthDate: D, options: CalendarDateOptions): DateRange<D> {\n    const daysInMonth: number = this.dateService.getNumberOfDaysInMonth(monthDate);\n\n    return range(daysInMonth, (i: number): CalendarDateInfo<D> => {\n      const year: number = this.dateService.getYear(monthDate);\n      const month: number = this.dateService.getMonth(monthDate);\n      const date: D = this.dateService.createDate(year, month, i + 1);\n\n      return { date, ...options };\n    });\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  View,\n  ViewProps,\n} from 'react-native';\nimport {\n  styled,\n  StyledComponentProps,\n} from '@kitten/theme';\n\nexport type DividerProps = StyledComponentProps & ViewProps;\nexport type DividerElement = React.ReactElement<DividerProps>;\n\n/**\n * Styled `Divider` component. Behaves like React Native `View`.\n * The key feature of using `Divider` instead of `View` is that\n * it automatically picks color fitting to current theme.\n *\n * @property {ViewProps} ...ViewProps - Any props applied to View component.\n */\nclass DividerComponent extends React.Component<DividerProps> {\n\n  static styledComponentName: string = 'Divider';\n\n  public render(): DividerElement {\n    const { style, themedStyle, ...restProps } = this.props;\n\n    return (\n      <View\n        {...restProps}\n        style={[themedStyle, style]}\n      />\n    );\n  }\n}\n\nexport const Divider = styled<DividerProps>(DividerComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport { StyleType } from '@kitten/theme';\nimport {\n  StyleSheet,\n  View,\n  ViewProps,\n} from 'react-native';\nimport {\n  CalendarHeader,\n  CalendarHeaderElement,\n} from './components/calendarHeader.component';\nimport { CalendarMonthHeader } from './components/calendarMonthHeader.component';\nimport {\n  CalendarPager,\n  CalendarPagerElement,\n} from './components/calendarPager.component';\nimport {\n  CalendarPicker,\n  CalendarPickerElement,\n} from './components/picker/calendarPicker.component';\nimport { CalendarPickerCellProps } from './components/picker/calendarPickerCell.component';\nimport {\n  CalendarDateContent,\n  CalendarDateContentElement,\n} from './components/calendarDateContent.component';\nimport {\n  CalendarDateInfo,\n  CalendarViewMode,\n  CalendarViewModes,\n} from './type';\nimport { DateService } from './service/date.service';\nimport { NativeDateService } from './service/nativeDate.service';\nimport {\n  CalendarDataService,\n  DateBatch,\n} from './service/calendarData.service';\nimport { Divider } from '../divider/divider.component';\n\nexport interface BaseCalendarProps<D = Date> extends ViewProps {\n  min?: D;\n  max?: D;\n  dateService?: DateService<D>;\n  boundingMonth?: boolean;\n  startView?: CalendarViewMode;\n  title?: (date: D, viewMode: CalendarViewMode) => string;\n  todayTitle?: (date: D) => string;\n  filter?: (date: D) => boolean;\n  renderFooter?: () => React.ReactElement<any>;\n  renderDay?: (info: CalendarDateInfo<D>, style: StyleType) => React.ReactElement<any>;\n  renderMonth?: (info: CalendarDateInfo<D>, style: StyleType) => React.ReactElement<any>;\n  renderYear?: (info: CalendarDateInfo<D>, style: StyleType) => React.ReactElement<any>;\n  themedStyle?: StyleType;\n}\n\ninterface State<D> {\n  viewMode: CalendarViewMode;\n  visibleDate: D;\n}\n\nexport type BaseCalendarElement<D> = React.ReactElement<BaseCalendarProps<D>>;\n\nconst PICKER_ROWS: number = 4;\nconst PICKER_COLUMNS: number = 3;\nconst VIEWS_IN_PICKER: number = PICKER_ROWS * PICKER_COLUMNS;\n\nconst FORMAT_DAY: string = 'D';\nconst FORMAT_MONTH: string = 'MMM';\nconst FORMAT_YEAR: string = 'YYYY';\nconst FORMAT_HEADER_DATE: string = 'MMM YYYY';\nconst FORMAT_HEADER_MONTH: string = 'YYYY';\nconst FORMAT_HEADER_YEAR: string = 'YYYY';\n\nexport abstract class BaseCalendarComponent<P, D = Date> extends React.Component<BaseCalendarProps<D> & P, State<D>> {\n\n  static defaultProps: Partial<BaseCalendarProps> = {\n    dateService: new NativeDateService(),\n    boundingMonth: true,\n    startView: CalendarViewModes.DATE,\n  };\n\n  public state: State<D> = {\n    viewMode: this.props.startView,\n    visibleDate: this.dateService.getMonthStart(this.getSelectedDate()),\n  };\n\n  protected abstract onDaySelect(item: any): void;\n\n  protected abstract isDaySelected(date: CalendarDateInfo<D>): boolean;\n\n  protected abstract getSelectedDate(): D;\n\n  protected abstract getDayPickerData(date: CalendarDateInfo<D>): DateBatch<D>;\n\n  protected abstract shouldUpdateDayElement(props: CalendarPickerCellProps<D>,\n                                            nextProps: CalendarPickerCellProps<D>): boolean;\n\n  protected dataService: CalendarDataService<D> = new CalendarDataService(this.dateService);\n\n  protected get dateService(): DateService<D> {\n    return this.props.dateService;\n  }\n\n  private get min(): D {\n    return this.props.min || this.dateService.getYearStart(this.dateService.today());\n  }\n\n  private get max(): D {\n    return this.props.max || this.dateService.getYearEnd(this.dateService.today());\n  }\n\n  private calendarDayPagerRef: React.RefObject<CalendarPager<D>> = React.createRef();\n  private calendarYearPagerRef: React.RefObject<CalendarPager<D>> = React.createRef();\n\n  public scrollToToday = (): void => {\n    this.setState({\n      viewMode: CalendarViewModes.DATE,\n      visibleDate: this.dateService.today(),\n    });\n  };\n\n  private onSelect = (item: CalendarDateInfo<D>): void => {\n    this.onDaySelect(item);\n  };\n\n  private onMonthSelect = (date: CalendarDateInfo<D>): void => {\n    const nextVisibleDate: D = this.dateService.createDate(\n      this.dateService.getYear(this.state.visibleDate),\n      this.dateService.getMonth(date.date),\n      this.dateService.getDate(this.state.visibleDate),\n    );\n\n    this.setState({\n      viewMode: this.state.viewMode.pickNext(),\n      visibleDate: nextVisibleDate,\n    });\n  };\n\n  private onYearSelect = (date: CalendarDateInfo<D>): void => {\n    const nextVisibleDate: D = this.dateService.createDate(\n      this.dateService.getYear(date.date),\n      this.dateService.getMonth(this.state.visibleDate),\n      this.dateService.getDate(this.state.visibleDate),\n    );\n\n    this.setState({\n      viewMode: this.state.viewMode.pickNext(),\n      visibleDate: nextVisibleDate,\n    });\n  };\n\n  private onDayPickerPagerSelect = (index: number): void => {\n    this.setState({\n      visibleDate: this.dateService.addMonth(this.min, index),\n    });\n  };\n\n  private onYearPickerPagerSelect = (index: number): void => {\n    const yearStart: D = this.dateService.getYearStart(this.min);\n    this.setState({\n      visibleDate: this.dateService.addYear(yearStart, index * VIEWS_IN_PICKER),\n    });\n  };\n\n  private onPickerNavigationPress = (): void => {\n    this.setState({\n      viewMode: this.state.viewMode.navigationNext(),\n    });\n  };\n\n  private onHeaderNavigationLeftPress = (): void => {\n    const pagerRef: React.RefObject<CalendarPager<D>> = this.getCurrentPagerRef();\n\n    pagerRef.current.scrollToIndex({\n      index: pagerRef.current.props.selectedIndex - 1,\n      animated: true,\n    });\n  };\n\n  private onHeaderNavigationRightPress = (): void => {\n    const pagerRef: React.RefObject<CalendarPager<D>> = this.getCurrentPagerRef();\n\n    pagerRef.current.scrollToIndex({\n      index: pagerRef.current.props.selectedIndex + 1,\n      animated: true,\n    });\n  };\n\n  private shouldUpdateDayItem = (props: CalendarPickerCellProps<D>,\n                                 nextProps: CalendarPickerCellProps<D>): boolean => {\n\n    return this.shouldUpdateDayElement(props, nextProps);\n  };\n\n  public getCalendarStyle = (source: StyleType): StyleType => {\n    return {\n      container: {\n        paddingVertical: source.paddingVertical,\n        borderColor: source.borderColor,\n        borderWidth: source.borderWidth,\n        borderRadius: source.borderRadius,\n        maxWidth: source.maxWidth,\n        maxHeight: source.maxHeight,\n      },\n      headerContainer: {\n        paddingHorizontal: source.headerPaddingHorizontal,\n        paddingVertical: source.headerPaddingVertical,\n      },\n      title: {\n        fontSize: source.titleFontSize,\n        fontWeight: source.titleFontWeight,\n        lineHeight: source.titleLineHeight,\n        color: source.titleColor,\n        fontFamily: source.titleFontFamily,\n      },\n      icon: {\n        width: source.iconWidth,\n        height: source.iconHeight,\n        tintColor: source.iconTintColor,\n      },\n      divider: {\n        marginVertical: source.dividerMarginVertical,\n      },\n      daysHeaderContainer: {\n        marginHorizontal: source.rowMarginHorizontal,\n      },\n      row: {\n        minHeight: source.rowMinHeight,\n        marginHorizontal: source.rowMarginHorizontal,\n      },\n    };\n  };\n\n  private getWeekdayStyle = (source: StyleType): StyleType => {\n    return {\n      fontSize: source.weekdayTextFontSize,\n      fontWeight: source.weekdayTextFontWeight,\n      lineHeight: source.weekdayTextLineHeight,\n      color: source.weekdayTextColor,\n      fontFamily: source.weekdayTextFontFamily,\n    };\n  };\n\n  private getIsDaySelected = (date: CalendarDateInfo<D>): boolean => {\n    return this.isDaySelected(date);\n  };\n\n  private isMonthSelected = (date: CalendarDateInfo<D>): boolean => {\n    return this.dateService.isSameMonthSafe(date.date, this.getSelectedDate());\n  };\n\n  private isYearSelected = (date: CalendarDateInfo<D>): boolean => {\n    return this.dateService.isSameYearSafe(date.date, this.getSelectedDate());\n  };\n\n  public isDayDisabled = (date: CalendarDateInfo<D>): boolean => {\n    const minDayStart: D = this.dateService.createDate(\n      this.dateService.getYear(this.min),\n      this.dateService.getMonth(this.min),\n      this.dateService.getDate(this.min),\n    );\n\n    const maxDayStart: D = this.dateService.createDate(\n      this.dateService.getYear(this.max),\n      this.dateService.getMonth(this.max),\n      this.dateService.getDate(this.max),\n    );\n\n    return !this.dateService.isBetweenIncludingSafe(date.date, minDayStart, maxDayStart) || this.isDateFitsFilter(date);\n  };\n\n  private isMonthDisabled = (date: CalendarDateInfo<D>): boolean => {\n    const minMonthStart: D = this.dateService.getMonthStart(this.min);\n    const maxMonthStart: D = this.dateService.getMonthStart(this.max);\n\n    return !this.dateService.isBetweenIncludingSafe(date.date, minMonthStart, maxMonthStart);\n  };\n\n  private isYearDisabled = (date: CalendarDateInfo<D>): boolean => {\n    const minYearStart: D = this.dateService.getYearStart(this.min);\n    const maxYearStart: D = this.dateService.getYearEnd(this.max);\n\n    return !this.dateService.isBetweenIncludingSafe(date.date, minYearStart, maxYearStart);\n  };\n\n  public isDayToday = (date: CalendarDateInfo<D>): boolean => {\n    return this.dateService.isSameDaySafe(date.date, this.dateService.today());\n  };\n\n  private isMonthToday = (date: CalendarDateInfo<D>): boolean => {\n    return this.dateService.isSameMonthSafe(date.date, this.dateService.today());\n  };\n\n  private isYearToday = (date: CalendarDateInfo<D>): boolean => {\n    return this.dateService.isSameYearSafe(date.date, this.dateService.today());\n  };\n\n  private isDateFitsFilter = (date: CalendarDateInfo<D>): boolean => {\n    return this.props.filter && !this.props.filter(date.date) || false;\n  };\n\n  private isDateFitsBounds = (date: CalendarDateInfo<D>): boolean => {\n    return this.dateService.isBetweenIncludingSafe(date.date, this.min, this.max);\n  };\n\n  private isDayPickerInViewPort = (index: number): boolean => {\n    const visibleDayPickerIndex: number = this.dataService.getNumberOfMonths(this.min, this.state.visibleDate);\n\n    return index === visibleDayPickerIndex || Math.abs(index - visibleDayPickerIndex) === 1;\n  };\n\n  private isYearPickerInViewPort = (index: number): boolean => {\n    const numberOfYears: number = this.dataService.getNumberOfYears(this.min, this.state.visibleDate);\n    const visibleYearPickerIndex: number = Math.floor(numberOfYears / VIEWS_IN_PICKER);\n\n    return index === visibleYearPickerIndex || Math.abs(index - visibleYearPickerIndex) === 1;\n  };\n\n  private createHeaderTitle = (date: D, viewMode: CalendarViewMode): string => {\n    switch (viewMode) {\n      case CalendarViewModes.DATE:\n        return this.dateService.format(date, FORMAT_HEADER_DATE);\n      case CalendarViewModes.MONTH: {\n        return this.dateService.format(date, FORMAT_HEADER_MONTH);\n      }\n      case CalendarViewModes.YEAR: {\n        const minDateFormat: string = this.dateService.format(this.min, FORMAT_HEADER_YEAR);\n        const maxDateFormat: string = this.dateService.format(this.max, FORMAT_HEADER_YEAR);\n\n        return `${minDateFormat} - ${maxDateFormat}`;\n      }\n    }\n  };\n\n  private getCalendarPagerIndex = (): number => {\n    switch (this.state.viewMode.id) {\n      case CalendarViewModes.DATE.id:\n        return this.dataService.getNumberOfMonths(this.min, this.state.visibleDate);\n      case CalendarViewModes.YEAR.id:\n        return Math.floor(this.dataService.getNumberOfYears(this.min, this.state.visibleDate) / VIEWS_IN_PICKER);\n    }\n  };\n\n  private getCurrentPagerRef = (): React.RefObject<CalendarPager<D>> => {\n    switch (this.state.viewMode.id) {\n      case CalendarViewModes.DATE.id:\n        return this.calendarDayPagerRef;\n      case CalendarViewModes.YEAR.id:\n        return this.calendarYearPagerRef;\n    }\n  };\n\n  private isLateralNavigationAllowed = (): boolean => {\n    return this.state.viewMode.id === CalendarViewModes.DATE.id || this.state.viewMode.id === CalendarViewModes.YEAR.id;\n  };\n\n  private renderWeekdayElement = (weekday: string, index: number): CalendarDateContentElement => {\n    return (\n      <CalendarDateContent\n        key={index}\n        textStyle={this.getWeekdayStyle(this.props.themedStyle)}>\n        {weekday}\n      </CalendarDateContent>\n    );\n  };\n\n  private renderDayElement = (date: CalendarDateInfo<D>, style: StyleType): CalendarDateContentElement => {\n    return (\n      <CalendarDateContent\n        style={style.container}\n        textStyle={style.text}>\n        {this.dateService.format(date.date, FORMAT_DAY)}\n      </CalendarDateContent>\n    );\n  };\n\n  private renderDayIfNeeded = (item: CalendarDateInfo<D>, style: StyleType): CalendarDateContentElement => {\n    const shouldRender: boolean = !item.bounding || this.props.boundingMonth;\n\n    if (shouldRender) {\n      const renderSelector = this.props.renderDay || this.renderDayElement;\n      return renderSelector(item, style);\n    }\n\n    return null;\n  };\n\n  private renderMonthElement = (date: CalendarDateInfo<D>, style: StyleType): CalendarDateContentElement => {\n    return (\n      <CalendarDateContent\n        style={[style.container, styles.monthCell]}\n        textStyle={style.text}>\n        {this.dateService.format(date.date, FORMAT_MONTH)}\n      </CalendarDateContent>\n    );\n  };\n\n  private renderYearElement = (date: CalendarDateInfo<D>, style: StyleType): CalendarDateContentElement => {\n    return (\n      <CalendarDateContent\n        style={[style.container, styles.yearCell]}\n        textStyle={style.text}>\n        {this.dateService.format(date.date, FORMAT_YEAR)}\n      </CalendarDateContent>\n    );\n  };\n\n  private renderDayPickerElement = (date: CalendarDateInfo<D>, index: number): CalendarPickerElement<D> => {\n    const { row } = this.getCalendarStyle(this.props.themedStyle);\n\n    return (\n      <CalendarPicker\n        key={index}\n        data={this.getDayPickerData(date)}\n        rowStyle={row}\n        onSelect={this.onSelect}\n        isItemSelected={this.getIsDaySelected}\n        isItemDisabled={this.isDayDisabled}\n        isItemToday={this.isDayToday}\n        shouldItemUpdate={this.shouldUpdateDayItem}\n        renderItem={this.renderDayIfNeeded}\n      />\n    );\n  };\n\n  private renderDayPickerPagerElement = (date: D): React.ReactFragment => {\n    const { divider, daysHeaderContainer } = this.getCalendarStyle(this.props.themedStyle);\n    const visibleDayPickerIndex: number = this.dataService.getNumberOfMonths(this.min, this.state.visibleDate);\n\n    return (\n      <React.Fragment>\n        <CalendarMonthHeader\n          style={daysHeaderContainer}\n          data={this.dateService.getDayOfWeekNames()}>\n          {this.renderWeekdayElement}\n        </CalendarMonthHeader>\n        <Divider style={divider}/>\n        <CalendarPager\n          ref={this.calendarDayPagerRef}\n          selectedIndex={visibleDayPickerIndex}\n          data={this.dataService.createDayPickerPagerData(this.min, this.max)}\n          onSelect={this.onDayPickerPagerSelect}\n          shouldLoadComponent={this.isDayPickerInViewPort}>\n          {this.renderDayPickerElement}\n        </CalendarPager>\n      </React.Fragment>\n    );\n  };\n\n  private renderMonthPickerElement = (date: D): CalendarPagerElement<D> => {\n    const { row } = this.getCalendarStyle(this.props.themedStyle);\n\n    return (\n      <CalendarPicker\n        data={this.dataService.createMonthPickerData(date, PICKER_ROWS, PICKER_COLUMNS)}\n        rowStyle={row}\n        onSelect={this.onMonthSelect}\n        isItemSelected={this.isMonthSelected}\n        isItemDisabled={this.isMonthDisabled}\n        isItemToday={this.isMonthToday}\n        renderItem={this.props.renderMonth || this.renderMonthElement}\n      />\n    );\n  };\n\n  private renderYearPickerElement = (date: CalendarDateInfo<D>, index: number): React.ReactElement<ViewProps> => {\n    const { row } = this.getCalendarStyle(this.props.themedStyle);\n\n    return (\n      <CalendarPicker\n        key={index}\n        data={this.dataService.createYearPickerData(date.date, PICKER_ROWS, PICKER_COLUMNS)}\n        rowStyle={row}\n        onSelect={this.onYearSelect}\n        isItemSelected={this.isYearSelected}\n        isItemDisabled={this.isYearDisabled}\n        isItemToday={this.isYearToday}\n        renderItem={this.props.renderYear || this.renderYearElement}\n      />\n    );\n  };\n\n  private renderYearPickerPagerElement = (date: D): CalendarPagerElement<D> => {\n    const numberOfYears: number = this.dataService.getNumberOfYears(this.min, this.state.visibleDate);\n    const visibleYearPickerIndex: number = Math.floor(numberOfYears / VIEWS_IN_PICKER);\n\n    return (\n      <CalendarPager\n        ref={this.calendarYearPagerRef}\n        selectedIndex={visibleYearPickerIndex}\n        data={this.dataService.createYearPickerPagerData(this.min, this.max, PICKER_ROWS, PICKER_COLUMNS)}\n        onSelect={this.onYearPickerPagerSelect}\n        shouldLoadComponent={this.isYearPickerInViewPort}>\n        {this.renderYearPickerElement}\n      </CalendarPager>\n    );\n  };\n\n  private renderPickerElement = (date: D): React.ReactNode => {\n    switch (this.state.viewMode.id) {\n      case CalendarViewModes.DATE.id:\n        return this.renderDayPickerPagerElement(date);\n      case CalendarViewModes.MONTH.id:\n        return this.renderMonthPickerElement(date);\n      case CalendarViewModes.YEAR.id:\n        return this.renderYearPickerPagerElement(date);\n    }\n  };\n\n  private renderCalendarFooter = (): React.ReactElement<any> => {\n    if (this.props.renderFooter) {\n      return this.props.renderFooter();\n    }\n    return null;\n  };\n\n  private renderCalendarHeader = (): CalendarHeaderElement => {\n    const { headerContainer, title: titleStyle, icon } = this.getCalendarStyle(this.props.themedStyle);\n    const titleSelector = this.props.title || this.createHeaderTitle;\n\n    return (\n      <CalendarHeader\n        style={headerContainer}\n        title={titleSelector(this.state.visibleDate, this.state.viewMode)}\n        titleStyle={titleStyle}\n        iconStyle={icon}\n        lateralNavigationAllowed={this.isLateralNavigationAllowed()}\n        onTitlePress={this.onPickerNavigationPress}\n        onNavigationLeftPress={this.onHeaderNavigationLeftPress}\n        onNavigationRightPress={this.onHeaderNavigationRightPress}\n      />\n    );\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { style, themedStyle, ...restProps } = this.props;\n    const { container } = this.getCalendarStyle(themedStyle);\n\n    return (\n      <View\n        {...restProps}\n        style={[styles.container, container, style]}>\n        {this.renderCalendarHeader()}\n        {this.renderPickerElement(this.state.visibleDate)}\n        {this.renderCalendarFooter()}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    overflow: 'hidden',\n  },\n  monthCell: {\n    aspectRatio: 0.25 * DateService.DAYS_IN_WEEK,\n  },\n  yearCell: {\n    aspectRatio: 0.25 * DateService.DAYS_IN_WEEK,\n  },\n});\n","import React from 'react';\nimport {\n  BaseCalendarComponent,\n  BaseCalendarProps,\n} from './baseCalendar.component';\nimport {\n  styled,\n  StyledComponentProps,\n} from '@kitten/theme';\nimport { CalendarDateInfo } from './type';\nimport { CalendarPickerCellProps } from './components/picker/calendarPickerCell.component';\nimport { DateBatch } from './service/calendarData.service';\n\ninterface ComponentProps<D = Date> {\n  date?: D;\n  onSelect: (date: D) => void;\n}\n\nexport type CalendarProps<D = Date> = ComponentProps<D> & BaseCalendarProps<D> & StyledComponentProps;\nexport type CalendarElement<D = Date> = React.ReactElement<CalendarProps<D>>;\n\n/**\n * Styled `Calendar` component.\n * Supports locales and different date objects like Moment.js or date-fns.\n * Composes date picker components in a horizontal pageable list.\n *\n * @extends React.Component\n *\n * @property {D} min - Minimal date that is able to be selected.\n *\n * @property {D} max - Maximum date that is able to be selected.\n *\n * @property {D} date - Date which is currently selected.\n *\n * @property {DateService<D>} dateService - Date service that is able to work with a date objects.\n * Defaults to Native Date service that works with JS Date.\n * Allows using different types of date like Moment.js or date-fns.\n *\n * @property {boolean} boundingMonth - Defines if we should render previous and next months in the current month view.\n *\n * @property {CalendarViewMode} startView - Defines starting view for calendar. Defaults to Date view.\n *\n * @property {(date: D) => string} title - Defines the title for visible date.\n *\n * @property {(date: D) => string} todayTitle - Defines the title for today's date.\n *\n * @property {(date: D) => boolean} filter - Predicate that decides which cells will be disabled.\n *\n * @property {(date: D) => void} onSelect - Selection emitter. Fires when another day cell is pressed.\n *\n * @property {(date: D, style: StyleType) => ReactElement<any>} renderDay - Should return the content of day cell.\n *\n * @property {(date: D, style: StyleType) => ReactElement<any>} renderMonth - Should return the content of month cell.\n *\n * @property {(date: D, style: StyleType) => ReactElement<any>} renderYear - Should return the content of year cell.\n *\n * @property {ViewProps} ...ViewProps - Any props applied to View component.\n *\n * @overview-example CalendarSimpleUsage\n *\n * @overview-example CalendarBoundingMonth\n *\n * @overview-example CalendarFilter\n *\n * @overview-example CalendarBounds\n *\n * @overview-example CalendarStartDayOfWeek\n *\n * @overview-example CalendarCustomLocale\n *\n * @example CalendarMoment\n *\n * @example CalendarCustomDay\n */\nexport class CalendarComponent<D = Date> extends BaseCalendarComponent<CalendarProps<D>, D> {\n\n  static styledComponentName: string = 'Calendar';\n\n  // BaseCalendarComponent\n\n  public onDaySelect(date: CalendarDateInfo<D>): void {\n    if (this.props.onSelect) {\n      this.props.onSelect(date.date);\n    }\n  }\n\n  public getDayPickerData(date: CalendarDateInfo<D>): DateBatch<D> {\n    return this.dataService.createDayPickerData(date.date);\n  }\n\n  public getSelectedDate(): D {\n    return this.props.date || this.dateService.today();\n  }\n\n  public isDaySelected(date: CalendarDateInfo<D>): boolean {\n    return this.dateService.isSameDaySafe(date.date, this.getSelectedDate());\n  }\n\n  public shouldUpdateDayElement(props: CalendarPickerCellProps<D>,\n                                nextProps: CalendarPickerCellProps<D>): boolean {\n\n    const dateChanged: boolean = this.dateService.compareDatesSafe(props.date.date, nextProps.date.date) !== 0;\n\n    if (dateChanged) {\n      return true;\n    }\n\n    const selectionChanged: boolean = props.selected !== nextProps.selected;\n    const disablingChanged: boolean = props.disabled !== nextProps.disabled;\n\n    const value: boolean = selectionChanged || disablingChanged;\n\n    if (value) {\n      return true;\n    }\n\n    return props.theme !== nextProps.theme;\n  }\n}\n\nexport const Calendar = styled<CalendarProps>(CalendarComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  StyleSheet,\n  View,\n  StyleProp,\n  TextStyle,\n  ViewStyle,\n  TouchableOpacity,\n  TouchableOpacityProps,\n  GestureResponderEvent,\n} from 'react-native';\nimport {\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport {\n  Divider,\n  DividerElement,\n} from '../divider/divider.component';\nimport { CardHeaderElement } from './cardHeader.component';\nimport { allWithPrefix } from '../support/services';\n\ninterface HeaderStyles {\n  style: StyleProp<ViewStyle>;\n  accent: StyleProp<ViewStyle>;\n  title: StyleProp<TextStyle>;\n  description: StyleProp<TextStyle>;\n}\n\ntype HeaderProp = React.ReactElement<any> | CardHeaderElement;\ntype FooterProp = React.ReactElement<any>;\nexport type CardFooterElement = FooterProp;\n\ninterface ComponentProps {\n  appearance?: string;\n  status?: string;\n  children: React.ReactNode;\n  header?: () => HeaderProp;\n  footer?: () => FooterProp;\n}\n\nexport type CardProps = StyledComponentProps & TouchableOpacityProps & ComponentProps;\nexport type CardElement = React.ReactElement<CardProps>;\n\n/**\n * Styled `Card` component is a basic content container component.\n *\n * @extends React.Component\n *\n * @property {string} appearance - Determines the appearance of the component.\n * Can be `filled` or `outline`.\n * Default is `outline`.\n *\n * @property {string} status - Determines the status of the component.\n * Can be `basic`, `primary`, `success`, `info`, `warning`, `danger`.\n * Default is `basic`.\n *\n * @property {React.ReactNode} children - Determines text of the component.\n *\n * @property {() => HeaderProp} header - Determines header of the component.\n *\n * @property {() => FooterProp} footer - Determines footer of the component.\n *\n * @property {TouchableOpacityProps} ...TouchableOpacityProps - Any props applied to TouchableOpacity component.\n *\n * @overview-example CardSimpleUsage\n *\n * @overview-example CardStatuses\n *\n * @overview-example CardEvaHeader\n *\n * @overview-example CardCustomHeader\n *\n * @overview-example CardFooter\n *\n * @overview-example CardHeaderFooter\n */\n\nclass CardComponent extends React.Component<CardProps> {\n\n  static styledComponentName: string = 'Card';\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const {\n      backgroundColor,\n      borderRadius,\n      borderWidth,\n      borderColor,\n    } = source;\n\n    const headerStyles: StyleType = allWithPrefix(source, 'header');\n    const bodyStyles: StyleType = allWithPrefix(source, 'body');\n    const footerStyles: StyleType = allWithPrefix(source, 'footer');\n    const accentStyles: StyleType = allWithPrefix(source, 'accent');\n    const titleStyles: StyleType = allWithPrefix(source, 'title');\n    const descriptionStyles: StyleType = allWithPrefix(source, 'description');\n\n    return {\n      container: {\n        backgroundColor: backgroundColor,\n        borderRadius: borderRadius,\n        borderWidth: borderWidth,\n        borderColor: borderColor,\n      },\n      header: {\n        paddingVertical: headerStyles.headerPaddingVertical,\n        paddingHorizontal: headerStyles.headerPaddingHorizontal,\n      },\n      body: {\n        paddingVertical: bodyStyles.bodyPaddingVertical,\n        paddingHorizontal: bodyStyles.bodyPaddingHorizontal,\n      },\n      footer: {\n        paddingVertical: footerStyles.footerPaddingVertical,\n        paddingHorizontal: footerStyles.footerPaddingHorizontal,\n      },\n      title: {\n        fontFamily: titleStyles.titleFontFamily,\n        fontSize: titleStyles.titleFontSize,\n        fontWeight: titleStyles.titleFontWeight,\n        lineHeight: titleStyles.titleLineHeight,\n        color: titleStyles.titleColor,\n        marginHorizontal: titleStyles.titleMarginHorizontal,\n      },\n      description: {\n        fontFamily: descriptionStyles.titleFontFamily,\n        fontSize: descriptionStyles.titleFontSize,\n        fontWeight: descriptionStyles.titleFontWeight,\n        lineHeight: descriptionStyles.titleLineHeight,\n        color: descriptionStyles.descriptionColor,\n        marginHorizontal: descriptionStyles.descriptionMarginHorizontal,\n      },\n      accent: {\n        backgroundColor: accentStyles.accentBackgroundColor,\n        height: accentStyles.accentHeight,\n      },\n    };\n  };\n\n  private renderDivider = (): DividerElement => {\n    return (\n      <Divider/>\n    );\n  };\n\n  private renderHeader = (headerStyles: HeaderStyles): HeaderProp => {\n    const header: HeaderProp = this.props.header();\n\n    return React.cloneElement(header, {\n      headerStyle: [styles.header, headerStyles.style, header.props.style],\n      accentStyle: headerStyles.accent,\n      titleStyle: headerStyles.title,\n      descriptionStyle: headerStyles.description,\n    });\n  };\n\n  private renderFooter = (style: StyleType): FooterProp => {\n    const footer: FooterProp = this.props.footer();\n\n    return React.cloneElement(footer, {\n      style: [style, styles.footer, footer.props.style],\n    });\n  };\n\n  private renderBody = (style: StyleType): React.ReactNode => {\n    return (\n      <View style={[styles.body, style]}>\n        {this.props.children}\n      </View>\n    );\n  };\n\n  private renderComponentChildren = (style: StyleType): React.ReactNodeArray => {\n    const { header, footer } = this.props;\n\n    const headerStyles: HeaderStyles = {\n      style: style.header,\n      accent: style.accent,\n      title: style.title,\n      description: style.description,\n    };\n\n    return [\n      header && this.renderHeader(headerStyles),\n      this.renderBody(style.body),\n      footer && this.renderFooter(style.footer),\n    ];\n  };\n\n  public render(): CardElement {\n    const { themedStyle, style, children, ...restProps } = this.props;\n    const { container, ...childrenStyles } = this.getComponentStyle(themedStyle);\n    const [header, body, footer] = this.renderComponentChildren(childrenStyles);\n\n    return (\n      <TouchableOpacity\n        activeOpacity={1.0}\n        {...restProps}\n        style={[container, styles.container, style]}>\n        {header}\n        {header && this.renderDivider()}\n        {body}\n        {footer && this.renderDivider()}\n        {footer}\n      </TouchableOpacity>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    overflow: 'hidden',\n    justifyContent: 'space-between',\n  },\n  header: {\n    backgroundColor: 'transparent',\n  },\n  body: {\n    backgroundColor: 'transparent',\n  },\n  footer: {\n    backgroundColor: 'transparent',\n  },\n});\n\nexport const Card = styled<CardProps>(CardComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nimport React from 'react';\nimport {\n  GestureResponderEvent,\n  ImageProps,\n  ImageStyle,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  TouchableOpacity,\n  TouchableOpacityProps,\n  View,\n  ViewProps,\n} from 'react-native';\nimport {\n  Interaction,\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport {\n  Text,\n  TextElement,\n} from '../text/text.component';\nimport { TouchableIndexedProps } from '../support/typings';\nimport { isValidString } from '../support/services';\n\ntype IconElement = React.ReactElement<ImageProps>;\ntype AccessoryElement = React.ReactElement<any>;\ntype IconProp = (style: StyleType, index: number) => IconElement;\ntype AccessoryProp = (style: StyleType, index: number) => AccessoryElement;\n\ninterface ListDerivedProps {\n  index?: number;\n}\n\ninterface TemplateBaseProps {\n  icon?: IconProp;\n  accessory?: AccessoryProp;\n}\n\ninterface TemplateTitleProps extends TemplateBaseProps {\n  title: string;\n  description?: string;\n  titleStyle?: StyleProp<TextStyle>;\n}\n\ninterface TemplateDescriptionProps extends TemplateBaseProps {\n  title?: string;\n  description: string;\n  descriptionStyle?: StyleProp<TextStyle>;\n}\n\ninterface CustomContentProps {\n  children?: React.ReactNode;\n}\n\ntype ComponentProps = (TemplateTitleProps | TemplateDescriptionProps | CustomContentProps) & ListDerivedProps;\n\nexport type ListItemProps = StyledComponentProps & TouchableIndexedProps & ComponentProps;\nexport type ListItemElement = React.ReactElement<ListItemProps>;\n\n/**\n * `ListItem` is a support component for `List`.\n * The key feature of wrapping custom list items into `ListItem` component is that it automatically\n * picks background color fitting to current theme and responds to touches with feedback.\n *\n * @extends React.Component\n *\n * @property {string} title - Determines the title of the ListItem.\n *\n * @property {string} description - Determines the description of the ListItem's title.\n *\n * @property {StyleProp<TextStyle>} titleStyle - Customizes title style.\n *\n * @property {StyleProp<TextStyle>} descriptionStyle - Customizes description style.\n *\n * @property {React.ReactNode} children - Determines React Children of the component.\n *\n * @property {(style: StyleType, index: number) => React.ReactElement<any>} accessory - Determines the accessory of the\n * component.\n *\n * @property {(style: StyleType, index: number) => React.ReactElement<ImageProps>} icon - Determines the icon of the\n * component.\n *\n * @property {(index: number, event: GestureResponderEvent) => React.ReactElement<ImageProps>} onPress - Emits when\n * component is pressed.\n *\n * @property {TouchableOpacityProps} ...TouchableOpacityProps - Any props applied to TouchableOpacity component.\n *\n * @overview-example ListItemSimpleUsage\n *\n * @overview-example ListItemWithIcon\n *\n * @overview-example ListItemWithAccessory\n *\n * @example ListItemWithExternalIcon\n *\n * @example ListItemInlineStyling\n */\nexport class ListItemComponent extends React.Component<ListItemProps> {\n\n  static styledComponentName: string = 'ListItem';\n\n  private onPress = (event: GestureResponderEvent): void => {\n    if (this.props.onPress) {\n      this.props.onPress(this.props.index, event);\n    }\n  };\n\n  private onPressIn = (event: GestureResponderEvent): void => {\n    this.props.dispatch([Interaction.ACTIVE]);\n\n    if (this.props.onPressIn) {\n      this.props.onPressIn(this.props.index, event);\n    }\n  };\n\n  private onPressOut = (event: GestureResponderEvent): void => {\n    this.props.dispatch([]);\n\n    if (this.props.onPressOut) {\n      this.props.onPressOut(this.props.index, event);\n    }\n  };\n\n  private onLongPress = (event: GestureResponderEvent): void => {\n    if (this.props.onLongPress) {\n      this.props.onLongPress(this.props.index, event);\n    }\n  };\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const {\n      iconWidth,\n      iconHeight,\n      iconMarginHorizontal,\n      iconTintColor,\n      titleMarginHorizontal,\n      titleFontFamily,\n      titleFontSize,\n      titleLineHeight,\n      titleFontWeight,\n      titleColor,\n      descriptionFontFamily,\n      descriptionFontSize,\n      descriptionFontWeight,\n      descriptionLineHeight,\n      descriptionColor,\n      descriptionMarginHorizontal,\n      accessoryMarginHorizontal,\n      ...containerParameters\n    } = source;\n\n    return {\n      container: containerParameters,\n      contentContainer: {},\n      icon: {\n        width: iconWidth,\n        height: iconHeight,\n        marginHorizontal: iconMarginHorizontal,\n        tintColor: iconTintColor,\n      },\n      title: {\n        marginHorizontal: titleMarginHorizontal,\n        fontFamily: titleFontFamily,\n        fontSize: titleFontSize,\n        lineHeight: titleLineHeight,\n        fontWeight: titleFontWeight,\n        color: titleColor,\n      },\n      description: {\n        color: descriptionColor,\n        fontFamily: descriptionFontFamily,\n        fontSize: descriptionFontSize,\n        fontWeight: descriptionFontWeight,\n        lineHeight: descriptionLineHeight,\n        marginHorizontal: descriptionMarginHorizontal,\n      },\n      accessory: {\n        marginHorizontal: accessoryMarginHorizontal,\n      },\n    };\n  };\n\n  private renderIconElement = (style: ImageStyle): IconElement => {\n    // @ts-ignore: will be not executed if `icon` prop is provided\n    const { index, icon } = this.props;\n\n    const iconElement: IconElement = icon(style, index);\n\n    return React.cloneElement(iconElement, {\n      key: 0,\n      style: [style, styles.icon, iconElement.props.style],\n    });\n  };\n\n  private renderContentElement = (style: StyleType): React.ReactElement<ViewProps> => {\n    const { contentContainer, ...contentStyles } = style;\n    const [titleElement, descriptionElement] = this.renderContentElementChildren(contentStyles);\n\n    return (\n      <View\n        key={1}\n        style={[contentContainer, styles.contentContainer]}>\n        {titleElement}\n        {descriptionElement}\n      </View>\n    );\n  };\n\n  private renderTitleElement = (style: StyleType): TextElement => {\n    // @ts-ignore: will be not executed if `title` property is provided\n    const { title, titleStyle } = this.props;\n\n    return (\n      <Text\n        key={2}\n        style={[style, styles.title, titleStyle]}>\n        {title}\n      </Text>\n    );\n  };\n\n  private renderDescriptionElement = (style: StyleType): TextElement => {\n    // @ts-ignore: will be not executed if `description` property is provided\n    const { description, descriptionStyle } = this.props;\n\n    return (\n      <Text\n        key={3}\n        style={[style, styles.description, descriptionStyle]}>\n        {description}\n      </Text>\n    );\n  };\n\n  private renderAccessoryElement = (style: StyleType): AccessoryElement => {\n    // @ts-ignore: will be not executed if `accessory` property is provided\n    const { index, accessory } = this.props;\n\n    const accessoryElement: AccessoryElement = accessory(style, index);\n\n    return React.cloneElement(accessoryElement, {\n      key: 4,\n      style: [style, styles.accessory, accessoryElement.props.style],\n    });\n  };\n\n  private renderContentElementChildren = (style: StyleType): React.ReactNodeArray => {\n    // @ts-ignore: will be not executed if any of properties below is provided\n    const { title, description } = this.props;\n\n    return [\n      isValidString(title) && this.renderTitleElement(style.title),\n      isValidString(description) && this.renderDescriptionElement(style.description),\n    ];\n  };\n\n  private renderTemplateChildren = (style: StyleType): React.ReactNodeArray => {\n    // @ts-ignore: following props could not be provided\n    const { icon, title, description, accessory } = this.props;\n\n    return [\n      icon && this.renderIconElement(style.icon),\n      (title || description) && this.renderContentElement(style),\n      accessory && this.renderAccessoryElement(style.accessory),\n    ];\n  };\n\n  private renderComponentChildren = (style: StyleType): React.ReactNode => {\n    const { children } = this.props;\n\n    return children ? children : this.renderTemplateChildren(style);\n  };\n\n  public render(): React.ReactElement<TouchableOpacityProps> {\n    const { themedStyle, style, ...derivedProps } = this.props;\n    const { container, ...componentStyles } = this.getComponentStyle(themedStyle);\n\n    const componentChildren: React.ReactNode = this.renderComponentChildren(componentStyles);\n\n    return (\n      <TouchableOpacity\n        activeOpacity={1.0}\n        {...derivedProps}\n        style={[container, styles.container, style]}\n        onPress={this.onPress}\n        onPressIn={this.onPressIn}\n        onPressOut={this.onPressOut}\n        onLongPress={this.onLongPress}>\n        {componentChildren}\n      </TouchableOpacity>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  contentContainer: {\n    flex: 1,\n  },\n  icon: {},\n  title: {\n    textAlign: 'left',\n  },\n  description: {\n    textAlign: 'left',\n  },\n  accessory: {},\n});\n\nexport const ListItem = styled<ListItemProps>(ListItemComponent);\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  ListItem as RNListItem,\n  ListItemElement as RNListItemElement,\n  ListItemProps as RNListItemProps,\n  // @ts-ignore\n} from './listItem.component.tsx';\nimport {\n  WebEventResponder,\n  WebEventResponderCallbacks,\n  WebEventResponderInstance,\n} from '../support/services';\n\nexport type ListItemProps = RNListItemProps & WebEventResponderCallbacks;\nexport type ListItemElement = React.ReactElement<ListItemProps>;\n\nexport class ListItem extends React.Component<ListItemProps> implements WebEventResponderCallbacks {\n\n  private listItemRef: React.RefObject<any> = React.createRef();\n  private webEventResponder: WebEventResponderInstance = WebEventResponder.create(this);\n\n  public onMouseEnter = (): void => {\n    if (this.props.onMouseEnter) {\n      this.props.onMouseEnter();\n    }\n  };\n\n  public onMouseLeave = (): void => {\n    if (this.props.onMouseLeave) {\n      this.props.onMouseLeave();\n    }\n  };\n\n  public onFocus = (): void => {\n    if (this.props.onFocus) {\n      this.props.onFocus();\n    }\n  };\n\n  public onBlur = (): void => {\n    if (this.props.onBlur) {\n      this.props.onBlur();\n    }\n  };\n\n  public render(): RNListItemElement {\n    const { style, ...restProps } = this.props;\n\n    return (\n      <RNListItem\n        {...restProps}\n        {...this.webEventResponder.eventHandlers}\n        ref={this.listItemRef}\n        style={[style, styles.element]}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  element: {\n    // @ts-ignore\n    outlineWidth: 0,\n  },\n});\n","import React from 'react';\nimport {\n  View,\n  ViewProps,\n  StyleProp,\n  ViewStyle,\n  TextStyle,\n} from 'react-native';\nimport { ListItem } from '../list/listItem.component';\n\ninterface ComponentProps {\n  title: string;\n  description?: string;\n  titleStyle?: StyleProp<TextStyle>;\n  descriptionStyle?: StyleProp<TextStyle>;\n  headerStyle?: StyleProp<ViewStyle>;\n  accentStyle?: StyleProp<ViewStyle>;\n}\n\nexport type CardHeaderProps = ViewProps & ComponentProps;\nexport type CardHeaderElement = React.ReactElement<CardHeaderProps>;\n\n/**\n * Styled `CardHeader` component can be used like `header` in the `Card` component.\n *\n * @extends React.Component\n *\n * @property {string} title - Determines the title of the ListItem.\n *\n * @property {string} description - Determines the description of the ListItem's title.\n *\n * @property {StyleProp<TextStyle>} titleStyle - Customizes title style.\n *\n * @property {StyleProp<TextStyle>} descriptionStyle - Customizes description style.\n *\n * @property {StyleProp<ViewStyle>} accentStyle - Determines style of the stripe element.\n *\n * @property {StyleProp<ViewStyle>} headerStyle - Determines style of the header container element.\n *\n * @property {ViewProps} ...ViewProps - Any props applied to View component.\n */\n\nexport class CardHeader extends React.Component<CardHeaderProps> {\n\n  public render(): React.ReactFragment {\n    const { accentStyle, style, headerStyle, ...restProps } = this.props;\n\n    return (\n      <React.Fragment>\n        <View style={accentStyle}/>\n        <ListItem\n          style={[style, headerStyle]}\n          {...restProps}\n        />\n      </React.Fragment>\n    );\n  }\n}\n","import { DateService } from './date.service';\nimport {\n  CalendarDateInfo,\n  CalendarRange,\n} from '../type';\n\nexport class RangeDateService<D> {\n\n  private dateService: DateService<D>;\n\n  constructor(dateService: DateService<D>) {\n    this.dateService = dateService;\n  }\n\n  public createRange(range: CalendarRange<D>, date: CalendarDateInfo<D>): CalendarRange<D> {\n    switch (true) {\n      case (!range.startDate && !range.endDate):\n        return { startDate: date.date, endDate: null };\n      case (range.startDate && !range.endDate):\n        return this.createRangeForStart(range, date);\n      case (range.startDate !== null && range.endDate !== null):\n        return this.createRangeForStartEnd(date);\n      default:\n        return range;\n    }\n  }\n\n  private createRangeForStart(range: CalendarRange<D>, date: CalendarDateInfo<D>): CalendarRange<D> {\n    if (this.dateService.compareDatesSafe(date.date, range.startDate) === 1) {\n      return { startDate: range.startDate, endDate: date.date };\n    } else if (this.dateService.compareDatesSafe(date.date, range.startDate) === -1) {\n      return { startDate: date.date, endDate: range.startDate };\n    } else {\n      return range;\n    }\n  }\n\n  private createRangeForStartEnd(date: CalendarDateInfo<D>): CalendarRange<D> {\n    return { startDate: date.date, endDate: null};\n  }\n}\n","import React from 'react';\nimport {\n  BaseCalendarComponent,\n  BaseCalendarProps,\n} from './baseCalendar.component';\nimport {\n  styled,\n  StyledComponentProps,\n} from '@kitten/theme';\nimport {\n  CalendarDateInfo,\n  CalendarRange,\n} from './type';\nimport { CalendarPickerCellProps } from './components/picker/calendarPickerCell.component';\nimport { DateBatch } from './service/calendarData.service';\nimport { RangeDateService } from './service/rangeDate.service';\n\ninterface ComponentProps<D = Date> {\n  range: CalendarRange<D>;\n  onSelect: (range: CalendarRange<D>) => void;\n}\n\nexport type RangeCalendarProps<D = Date> = ComponentProps<D> & BaseCalendarProps<D> & StyledComponentProps;\nexport type RangeCalendarElement<D = Date> = React.ReactElement<RangeCalendarProps<D>>;\n\n/**\n * Styled `RangeCalendar` component.\n * Supports locales and different date objects like Moment.js or date-fns.\n * Composes date picker components in a horizontal pageable list.\n *\n * @extends React.Component\n *\n * @property {D} min - Minimal date that is able to be selected.\n *\n * @property {D} max - Maximum date that is able to be selected.\n *\n * @property {CalendarRange<D>} range - Range which is currently selected.\n *\n * @property {DateService<D>} dateService - Date service that is able to work with a date objects.\n * Defaults to Native Date service that works with JS Date.\n * Allows using different types of date like Moment.js or date-fns.\n *\n * @property {boolean} boundingMonth - Defines if we should render previous and next months in the current month view.\n *\n * @property {CalendarViewMode} startView - Defines starting view for calendar. Defaults to Date view.\n *\n * @property {(date: D) => string} title - Defines the title for visible date.\n *\n * @property {(date: D) => string} todayTitle - Defines the title for today's date.\n *\n * @property {(date: D) => ReactElement<any>} filter - Predicate that decides which cells will be disabled.\n *\n * @property {(date: D) => void} onSelect - Selection emitter. Fires when another day cell is pressed.\n *\n * @property {(date: D, style: StyleType) => ReactElement<any>} renderDay - Should return the content of day cell.\n *\n * @property {(date: D, style: StyleType) => ReactElement<any>} renderMonth - Should return the content of month cell.\n *\n * @property {(date: D, style: StyleType) => ReactElement<any>} renderYear - Should return the content of year cell.\n *\n * @property {ViewProps} ...ViewProps - Any props applied to View component.\n *\n * @overview-example RangeCalendarSimpleUsage\n */\nexport class RangeCalendarComponent<D = Date> extends BaseCalendarComponent<RangeCalendarProps<D>, D> {\n\n  static styledComponentName: string = 'Calendar';\n\n  private rangeDateService: RangeDateService<D> = new RangeDateService(this.dateService);\n\n  // BaseCalendarComponent\n\n  protected onDaySelect(date: CalendarDateInfo<D>): void {\n    const { range, onSelect } = this.props;\n\n    const calendarRange: CalendarRange<D> = this.rangeDateService.createRange(range, date);\n    onSelect && onSelect(calendarRange);\n  }\n\n  protected getSelectedDate(): D {\n    return this.dateService.today();\n  }\n\n  protected isDaySelected(date: CalendarDateInfo<D>): boolean {\n    return false;\n  }\n\n  protected shouldUpdateDayElement(props: CalendarPickerCellProps<D>,\n                                nextProps: CalendarPickerCellProps<D>): boolean {\n\n    const dateChanged: boolean = this.dateService.compareDatesSafe(props.date.date, nextProps.date.date) !== 0;\n\n    if (dateChanged) {\n      return true;\n    }\n\n    const selectionChanged: boolean = props.selected !== nextProps.selected;\n    const disablingChanged: boolean = props.disabled !== nextProps.disabled;\n    const rangeChanged: boolean = props.range !== nextProps.range;\n    const rangeStartPlaceChanged: boolean = props.firstRangeItem !== nextProps.firstRangeItem;\n    const rangeEndPlaceChanged: boolean = props.lastRangeItem !== nextProps.lastRangeItem;\n\n    const shouldUpdate: boolean =\n      selectionChanged\n      || disablingChanged\n      || rangeChanged\n      || rangeStartPlaceChanged\n      || rangeEndPlaceChanged;\n\n    if (shouldUpdate) {\n      return true;\n    }\n\n    return props.theme !== nextProps.theme;\n  }\n\n  protected getDayPickerData(date: CalendarDateInfo<D>): DateBatch<D> {\n    return this.dataService.createDayPickerData(date.date, this.props.range);\n  }\n}\n\nexport const RangeCalendar = styled<RangeCalendarProps>(RangeCalendarComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  GestureResponderEvent,\n  Insets,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  TouchableOpacity,\n  TouchableOpacityProps,\n  View,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\nimport {\n  Interaction,\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport {\n  Text,\n  TextElement,\n} from '../text/text.component';\nimport { CheckMark } from '../support/components';\nimport { isValidString } from '../support/services';\n\ntype IconElement = React.ReactElement<ViewProps>;\n\ninterface ComponentProps {\n  textStyle?: StyleProp<TextStyle>;\n  text?: string;\n  checked?: boolean;\n  indeterminate?: boolean;\n  status?: string;\n  onChange?: (checked: boolean, indeterminate: boolean) => void;\n}\n\nexport type CheckBoxProps = StyledComponentProps & TouchableOpacityProps & ComponentProps;\nexport type CheckBoxElement = React.ReactElement<CheckBoxProps>;\n\n/**\n * Styled `CheckBox` component.\n *\n * @extends React.Component\n *\n * @property {boolean} checked - Determines whether component is checked.`\n * Default is `false`.\n *\n * @property {boolean} disabled - Determines whether component is disabled.\n * Default is `false.\n *\n * @property {string} status - Determines the status of the component.\n * Can be `basic`, `primary`, `success`, `info`, `warning`, `danger` or `control`.\n * Default is `basic`.\n *\n * @property {string} text - Determines text of the component.\n *\n * @property {StyleProp<TextStyle>} textStyle - Customizes text style.\n *\n * @property {(checked: boolean) => void} onChange - Fires on checkbox value change.\n *\n * @property {TouchableOpacityProps} ...TouchableOpacityProps - Any props applied to TouchableOpacity component.\n *\n * @overview-example CheckboxSimpleUsage\n *\n * @overview-example CheckboxStatus\n *\n * @overview-example CheckboxText\n *\n * @example CheckboxIndeterminate\n *\n * @example CheckboxInlineStyling\n */\nclass CheckBoxComponent extends React.Component<CheckBoxProps> {\n\n  static styledComponentName: string = 'CheckBox';\n\n  private onPress = (): void => {\n    this.props.dispatch([]);\n\n    if (this.props.onChange) {\n      this.props.onChange(!this.props.checked, false);\n    }\n  };\n\n  private onPressIn = (event: GestureResponderEvent): void => {\n    this.props.dispatch([Interaction.ACTIVE]);\n\n    if (this.props.onPressIn) {\n      this.props.onPressIn(event);\n    }\n  };\n\n  private onPressOut = (event: GestureResponderEvent): void => {\n    this.props.dispatch([]);\n\n    if (this.props.onPressOut) {\n      this.props.onPressOut(event);\n    }\n  };\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const {\n      textMarginHorizontal,\n      textFontFamily,\n      textFontSize,\n      textFontWeight,\n      textLineHeight,\n      textColor,\n      iconWidth,\n      iconHeight,\n      iconBorderRadius,\n      iconTintColor,\n      outlineWidth,\n      outlineHeight,\n      outlineBorderRadius,\n      outlineBackgroundColor,\n      ...containerParameters\n    } = source;\n\n    return {\n      container: {},\n      highlightContainer: {},\n      selectContainer: containerParameters,\n      text: {\n        marginHorizontal: textMarginHorizontal,\n        fontFamily: textFontFamily,\n        fontSize: textFontSize,\n        fontWeight: textFontWeight,\n        lineHeight: textLineHeight,\n        color: textColor,\n      },\n      icon: {\n        width: iconWidth,\n        height: iconHeight,\n        borderRadius: iconBorderRadius,\n        backgroundColor: iconTintColor,\n      },\n      highlight: {\n        width: outlineWidth,\n        height: outlineHeight,\n        borderRadius: outlineBorderRadius,\n        backgroundColor: outlineBackgroundColor,\n      },\n    };\n  };\n\n  private createHitSlopInsets = (style: StyleProp<ViewStyle>): Insets => {\n    const { width } = StyleSheet.flatten(style);\n\n    // @ts-ignore: `width` is restricted to be a number\n    const value: number = 40 - width;\n\n    return {\n      left: value,\n      top: value,\n      right: value,\n      bottom: value,\n    };\n  };\n\n  private renderTextElement = (style: TextStyle): TextElement => {\n    const { text, textStyle } = this.props;\n\n    return (\n      <Text style={[style, styles.text, textStyle]}>{text}</Text>\n    );\n  };\n\n  private renderSelectIconElement = (style: ViewStyle): IconElement => {\n    return (\n      <CheckMark style={[style, styles.icon]}/>\n    );\n  };\n\n  private renderIndeterminateIconElement = (style: ViewStyle): IconElement => {\n    return (\n      <View style={[style, styles.icon]}/>\n    );\n  };\n\n  private renderIconElement = (style: ViewStyle): IconElement => {\n    if (this.props.indeterminate) {\n      return this.renderIndeterminateIconElement(style);\n    } else {\n      return this.renderSelectIconElement(style);\n    }\n  };\n\n  private renderComponentChildren = (style: StyleType): React.ReactNodeArray => {\n    const { text } = this.props;\n\n    return [\n      this.renderIconElement(style.icon),\n      isValidString(text) && this.renderTextElement(style.text),\n    ];\n  };\n\n  public render(): React.ReactElement<TouchableOpacityProps> {\n    const { themedStyle, style, disabled, text, ...derivedProps } = this.props;\n\n    const {\n      container,\n      highlightContainer,\n      highlight,\n      selectContainer,\n      ...componentStyle\n    } = this.getComponentStyle(themedStyle);\n\n    const selectContainerStyle: StyleProp<ViewStyle> = [selectContainer, styles.selectContainer];\n    const hitSlopInsets: Insets = this.createHitSlopInsets(selectContainerStyle);\n\n    const [iconElement, textElement] = this.renderComponentChildren(componentStyle);\n\n    return (\n      <TouchableOpacity\n        activeOpacity={1.0}\n        {...derivedProps}\n        style={[container, styles.container, style]}\n        disabled={disabled}\n        hitSlop={hitSlopInsets}\n        onPress={this.onPress}\n        onPressIn={this.onPressIn}\n        onPressOut={this.onPressOut}>\n        <View style={[highlightContainer, styles.highlightContainer]}>\n          <View style={[highlight, styles.highlight]}/>\n          <View style={selectContainerStyle}>\n            {iconElement}\n          </View>\n        </View>\n        {textElement}\n      </TouchableOpacity>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  highlightContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  selectContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  highlight: {\n    position: 'absolute',\n  },\n  icon: {},\n  text: {},\n});\n\nexport const CheckBox = styled<CheckBoxProps>(CheckBoxComponent);\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Interaction } from '@kitten/theme';\nimport {\n  CheckBox as RNCheckBox,\n  CheckBoxElement as RNCheckBoxElement,\n  CheckBoxProps as RNCheckBoxProps,\n  // @ts-ignore\n} from './checkbox.component.tsx';\nimport {\n  WebEventResponder,\n  WebEventResponderCallbacks,\n  WebEventResponderInstance,\n} from '../support/services';\n\nexport type CheckBoxProps = RNCheckBoxProps & WebEventResponderCallbacks;\nexport type CheckBoxElement = React.ReactElement<CheckBoxProps>;\n\nexport class CheckBox extends React.Component<CheckBoxProps> implements WebEventResponderCallbacks {\n\n  private checkboxRef: React.RefObject<any> = React.createRef();\n  private webEventResponder: WebEventResponderInstance = WebEventResponder.create(this);\n\n  public onMouseEnter = (): void => {\n    this.checkboxRef.current.props.dispatch([Interaction.HOVER]);\n\n    if (this.props.onMouseEnter) {\n      this.props.onMouseEnter();\n    }\n  };\n\n  public onMouseLeave = (): void => {\n    this.checkboxRef.current.props.dispatch([]);\n\n    if (this.props.onMouseLeave) {\n      this.props.onMouseLeave();\n    }\n  };\n\n  public onFocus = (): void => {\n    this.checkboxRef.current.props.dispatch([Interaction.FOCUSED]);\n\n    if (this.props.onFocus) {\n      this.props.onFocus();\n    }\n  };\n\n  public onBlur = (): void => {\n    this.checkboxRef.current.props.dispatch([]);\n\n    if (this.props.onBlur) {\n      this.props.onBlur();\n    }\n  };\n\n  public render(): RNCheckBoxElement {\n    const { style, ...restProps } = this.props;\n\n    return (\n      <RNCheckBox\n        {...restProps}\n        {...this.webEventResponder.eventHandlers}\n        ref={this.checkboxRef}\n        style={[style, styles.element]}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  element: {\n    // @ts-ignore\n    outlineWidth: 0,\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport {\n  FlexStyle,\n  StyleProp,\n  StyleSheet,\n} from 'react-native';\nimport { I18nLayoutService } from '../support/services';\n\nexport class Point {\n\n  readonly x: number;\n  readonly y: number;\n\n  constructor(x: number, y: number) {\n    this.x = x;\n    this.y = y;\n  }\n\n  static zero(): Point {\n    return new Point(0, 0);\n  }\n}\n\nexport class Size {\n\n  readonly width: number;\n  readonly height: number;\n\n  constructor(width: number, height: number) {\n    this.width = width;\n    this.height = height;\n  }\n\n  static zero(): Size {\n    return new Size(0, 0);\n  }\n}\n\nexport class Frame {\n\n  readonly origin: Point;\n  readonly size: Size;\n\n  constructor(x: number, y: number, width: number, height: number) {\n    this.origin = new Point(x, y);\n    this.size = new Size(width, height);\n  }\n\n  /**\n   * Creates new frame aligned to left of other\n   */\n  public leftOf(other: Frame): Frame {\n    return new Frame(\n      other.origin.x - this.size.width,\n      this.origin.y,\n      this.size.width,\n      this.size.height,\n    );\n  }\n\n  /**\n   * Creates new frame aligned to top of other\n   */\n  public topOf(other: Frame): Frame {\n    return new Frame(\n      this.origin.x,\n      other.origin.y - this.size.height,\n      this.size.width,\n      this.size.height,\n    );\n  }\n\n  /**\n   * Creates new frame aligned to right of other\n   */\n  public rightOf(other: Frame): Frame {\n    return new Frame(\n      other.origin.x + other.size.width,\n      this.origin.y,\n      this.size.width,\n      this.size.height,\n    );\n  }\n\n  /**\n   * Creates new frame aligned to bottom of other\n   */\n  public bottomOf(other: Frame): Frame {\n    return new Frame(\n      this.origin.x,\n      other.origin.y + other.size.height,\n      this.size.width,\n      this.size.height,\n    );\n  }\n\n  /**\n   * Creates new frame centered horizontally to other\n   */\n  public centerHorizontalOf(other: Frame): Frame {\n    return new Frame(\n      other.origin.x + (other.size.width - this.size.width) / 2,\n      this.origin.y,\n      this.size.width,\n      this.size.height,\n    );\n  }\n\n  /**\n   * Creates new frame centered vertically to other\n   */\n  public centerVerticalOf(other: Frame): Frame {\n    return new Frame(\n      this.origin.x,\n      other.origin.y + (other.size.height - this.size.height) / 2,\n      this.size.width,\n      this.size.height,\n    );\n  }\n\n  static zero(): Frame {\n    return Frame.from(Point.zero(), Size.zero());\n  }\n\n  static from(point: Point, size: Size): Frame {\n    return new Frame(point.x, point.y, size.width, size.height);\n  }\n}\n\nexport interface OffsetValue {\n  rawValue: string;\n\n  applyToRect(rect: OffsetRect, value: number): OffsetRect;\n}\n\nexport class OffsetRect {\n  left: number;\n  top: number;\n  right: number;\n  bottom: number;\n\n  static zero(): OffsetRect {\n    return { left: 0, top: 0, right: 0, bottom: 0 };\n  }\n}\n\nexport class Offsets {\n\n  static MARGIN: OffsetValue = new class implements OffsetValue {\n    rawValue: string = 'margin';\n\n    applyToRect(rect: OffsetRect, value: number): OffsetRect {\n      return {\n        left: value,\n        top: value,\n        right: value,\n        bottom: value,\n      };\n    }\n  };\n\n  static MARGIN_HORIZONTAL: OffsetValue = new class implements OffsetValue {\n    rawValue: string = 'marginHorizontal';\n\n    applyToRect(rect: OffsetRect, value: number): OffsetRect {\n      return { ...rect, left: value, right: value };\n    }\n  };\n\n  static MARGIN_VERTICAL: OffsetValue = new class implements OffsetValue {\n    rawValue: string = 'marginVertical';\n\n    applyToRect(rect: OffsetRect, value: number): OffsetRect {\n      return { ...rect, top: value, bottom: value };\n    }\n  };\n\n  static MARGIN_LEFT: OffsetValue = new class implements OffsetValue {\n    rawValue: string = 'marginLeft';\n\n    applyToRect(rect: OffsetRect, value: number): OffsetRect {\n      return { ...rect, left: value };\n    }\n  };\n\n  static MARGIN_TOP: OffsetValue = new class implements OffsetValue {\n    rawValue: string = 'marginTop';\n\n    applyToRect(rect: OffsetRect, value: number): OffsetRect {\n      return { ...rect, top: value };\n    }\n  };\n\n  static MARGIN_RIGHT: OffsetValue = new class implements OffsetValue {\n    rawValue: string = 'marginRight';\n\n    applyToRect(rect: OffsetRect, value: number): OffsetRect {\n      return { ...rect, right: value };\n    }\n  };\n\n  static MARGIN_BOTTOM: OffsetValue = new class implements OffsetValue {\n    rawValue: string = 'marginBottom';\n\n    applyToRect(rect: OffsetRect, value: number): OffsetRect {\n      return { ...rect, bottom: value };\n    }\n  };\n\n  static find(source: StyleProp<FlexStyle>): OffsetRect {\n    const keys: string[] = [\n      Offsets.MARGIN.rawValue,\n      Offsets.MARGIN_HORIZONTAL.rawValue,\n      Offsets.MARGIN_VERTICAL.rawValue,\n      Offsets.MARGIN_LEFT.rawValue,\n      Offsets.MARGIN_TOP.rawValue,\n      Offsets.MARGIN_RIGHT.rawValue,\n      Offsets.MARGIN_BOTTOM.rawValue,\n    ];\n\n    const flatStyle: FlexStyle = StyleSheet.flatten(source) || {};\n\n    return Object.keys(flatStyle).filter((key: string) => {\n      return keys.includes(key);\n    }).reduce((acc: OffsetRect, key: string) => {\n      const value: number = flatStyle[key];\n      const offsetValue: OffsetValue | undefined = Offsets.parseString(key);\n      return offsetValue ? offsetValue.applyToRect(acc, value) : acc;\n    }, OffsetRect.zero());\n  }\n\n  private static parseString(rawValue: string, fallback?: OffsetValue): OffsetValue | undefined {\n    switch (rawValue) {\n      case Offsets.MARGIN.rawValue:\n        return Offsets.MARGIN;\n      case Offsets.MARGIN_HORIZONTAL.rawValue:\n        return Offsets.MARGIN_HORIZONTAL;\n      case Offsets.MARGIN_VERTICAL.rawValue:\n        return Offsets.MARGIN_VERTICAL;\n      case Offsets.MARGIN_LEFT.rawValue:\n        return Offsets.MARGIN_LEFT;\n      case Offsets.MARGIN_TOP.rawValue:\n        return Offsets.MARGIN_TOP;\n      case Offsets.MARGIN_RIGHT.rawValue:\n        return Offsets.MARGIN_RIGHT;\n      case Offsets.MARGIN_BOTTOM.rawValue:\n        return Offsets.MARGIN_BOTTOM;\n      default:\n        return fallback;\n    }\n  }\n}\n\nexport class PlacementOptions {\n  source: Frame = Frame.zero();\n  other: Frame = Frame.zero();\n  bounds: Frame = Frame.zero();\n  offsets: OffsetRect = OffsetRect.zero();\n}\n\nexport interface PopoverPlacement {\n  rawValue: string;\n\n  frame(options: PlacementOptions): Frame;\n\n  flex(): FlexPlacement;\n\n  parent(): PopoverPlacement;\n\n  reverse(): PopoverPlacement;\n\n  family(): PopoverPlacement[];\n\n  fits(frame: Frame, other: Frame): boolean;\n}\n\nexport interface FlexPlacement {\n  direction: 'column' | 'row' | 'column-reverse' | 'row-reverse';\n  alignment: 'flex-start' | 'flex-end' | 'center';\n}\n\nexport class PopoverPlacements {\n\n  static LEFT: PopoverPlacement = new class implements PopoverPlacement {\n    rawValue: string = 'left';\n\n    frame(options: PlacementOptions): Frame {\n      const { origin, size } = options.source.leftOf(options.other).centerVerticalOf(options.other);\n\n      const x: number = I18nLayoutService.select(\n        origin.x + options.offsets.left,\n        options.bounds.size.width - size.width - (origin.x + options.offsets.right),\n      );\n\n      return new Frame(\n        x,\n        origin.y,\n        size.width,\n        size.height,\n      );\n    }\n\n    flex(): FlexPlacement {\n      return {\n        direction: 'row',\n        alignment: 'center',\n      };\n    }\n\n    parent(): PopoverPlacement {\n      return this;\n    }\n\n    reverse(): PopoverPlacement {\n      return PopoverPlacements.RIGHT;\n    }\n\n    family(): PopoverPlacement[] {\n      return [\n        PopoverPlacements.LEFT,\n        PopoverPlacements.LEFT_START,\n        PopoverPlacements.LEFT_END,\n      ];\n    }\n\n    fits(frame: Frame, other: Frame): boolean {\n      return fitsStart(frame, other) && fitsTop(frame, other) && fitsBottom(frame, other);\n    }\n  };\n\n  static LEFT_START: PopoverPlacement = new class implements PopoverPlacement {\n    rawValue: string = 'left start';\n\n    frame(options: PlacementOptions): Frame {\n      const { origin, size } = this.parent().frame(options);\n\n      return new Frame(\n        origin.x,\n        origin.y - (options.other.size.height - size.height) / 2 + options.offsets.top,\n        size.width,\n        size.height,\n      );\n    }\n\n    flex(): FlexPlacement {\n      return {\n        direction: 'row',\n        alignment: 'flex-start',\n      };\n    }\n\n    parent(): PopoverPlacement {\n      return PopoverPlacements.LEFT;\n    }\n\n    reverse(): PopoverPlacement {\n      return PopoverPlacements.RIGHT_START;\n    }\n\n    family(): PopoverPlacement[] {\n      return this.parent().family();\n    }\n\n    fits(frame: Frame, other: Frame): boolean {\n      return this.parent().fits(frame, other);\n    }\n  };\n\n  static LEFT_END: PopoverPlacement = new class implements PopoverPlacement {\n    rawValue = 'left end';\n\n    frame(options: PlacementOptions): Frame {\n      const { origin, size } = this.parent().frame(options);\n\n      return new Frame(\n        origin.x,\n        origin.y + (options.other.size.height - size.height) / 2 - options.offsets.bottom,\n        size.width,\n        size.height,\n      );\n    }\n\n    flex(): FlexPlacement {\n      return {\n        direction: 'row',\n        alignment: 'flex-end',\n      };\n    }\n\n    parent(): PopoverPlacement {\n      return PopoverPlacements.LEFT;\n    }\n\n    reverse(): PopoverPlacement {\n      return PopoverPlacements.RIGHT_END;\n    }\n\n    family(): PopoverPlacement[] {\n      return this.parent().family();\n    }\n\n    fits(frame: Frame, other: Frame): boolean {\n      return this.parent().fits(frame, other);\n    }\n  };\n\n  static TOP: PopoverPlacement = new class implements PopoverPlacement {\n    rawValue = 'top';\n\n    frame(options: PlacementOptions): Frame {\n      const { origin, size } = options.source.topOf(options.other).centerHorizontalOf(options.other);\n\n\n      const x: number = I18nLayoutService.select(\n        origin.x,\n        options.bounds.size.width - (origin.x + size.width),\n      );\n\n      return new Frame(\n        x,\n        origin.y + options.offsets.top,\n        size.width,\n        size.height,\n      );\n    }\n\n    flex(): FlexPlacement {\n      return {\n        direction: 'column',\n        alignment: 'center',\n      };\n    }\n\n    parent(): PopoverPlacement {\n      return this;\n    }\n\n    reverse(): PopoverPlacement {\n      return PopoverPlacements.BOTTOM;\n    }\n\n    family(): PopoverPlacement[] {\n      return [\n        PopoverPlacements.TOP,\n        PopoverPlacements.TOP_START,\n        PopoverPlacements.TOP_END,\n      ];\n    }\n\n    fits(frame: Frame, other: Frame): boolean {\n      return fitsTop(frame, other) && fitsLeft(frame, other) && fitsRight(frame, other);\n    }\n  };\n\n  static TOP_START: PopoverPlacement = new class implements PopoverPlacement {\n    rawValue = 'top start';\n\n    frame(options: PlacementOptions): Frame {\n      const { origin, size } = this.parent().frame(options);\n\n      return new Frame(\n        origin.x - (options.other.size.width - size.width) / 2 + options.offsets.left,\n        origin.y,\n        size.width,\n        size.height,\n      );\n    }\n\n    flex(): FlexPlacement {\n      return {\n        direction: 'column',\n        alignment: 'flex-start',\n      };\n    }\n\n    parent(): PopoverPlacement {\n      return PopoverPlacements.TOP;\n    }\n\n    reverse(): PopoverPlacement {\n      return PopoverPlacements.BOTTOM_START;\n    }\n\n    family(): PopoverPlacement[] {\n      return this.parent().family();\n    }\n\n    fits(frame: Frame, other: Frame): boolean {\n      return this.parent().fits(frame, other);\n    }\n  };\n\n  static TOP_END: PopoverPlacement = new class implements PopoverPlacement {\n    rawValue = 'top end';\n\n    frame(options: PlacementOptions): Frame {\n      const { origin, size } = this.parent().frame(options);\n\n      return new Frame(\n        origin.x + (options.other.size.width - size.width) / 2 - options.offsets.right,\n        origin.y,\n        size.width,\n        size.height,\n      );\n    }\n\n    flex(): FlexPlacement {\n      return {\n        direction: 'column',\n        alignment: 'flex-end',\n      };\n    }\n\n    parent(): PopoverPlacement {\n      return PopoverPlacements.TOP;\n    }\n\n    reverse(): PopoverPlacement {\n      return PopoverPlacements.BOTTOM_END;\n    }\n\n    family(): PopoverPlacement[] {\n      return this.parent().family();\n    }\n\n    fits(frame: Frame, other: Frame): boolean {\n      return this.parent().fits(frame, other);\n    }\n  };\n\n  static RIGHT: PopoverPlacement = new class implements PopoverPlacement {\n    rawValue = 'right';\n\n    frame(options: PlacementOptions): Frame {\n      const { origin, size } = options.source.rightOf(options.other).centerVerticalOf(options.other);\n\n      const x: number = I18nLayoutService.select(\n        origin.x - options.offsets.right,\n        options.bounds.size.width - size.width - (origin.x - options.offsets.right),\n      );\n\n      return new Frame(\n        x,\n        origin.y,\n        size.width,\n        size.height,\n      );\n    }\n\n    flex(): FlexPlacement {\n      return {\n        direction: 'row-reverse',\n        alignment: 'center',\n      };\n    }\n\n    parent(): PopoverPlacement {\n      return this;\n    }\n\n    reverse(): PopoverPlacement {\n      return PopoverPlacements.LEFT;\n    }\n\n    family(): PopoverPlacement[] {\n      return [\n        PopoverPlacements.RIGHT,\n        PopoverPlacements.RIGHT_START,\n        PopoverPlacements.RIGHT_END,\n      ];\n    }\n\n    fits(frame: Frame, other: Frame): boolean {\n      return fitsEnd(frame, other) && fitsTop(frame, other) && fitsBottom(frame, other);\n    }\n  };\n\n  static RIGHT_START: PopoverPlacement = new class implements PopoverPlacement {\n    rawValue = 'right start';\n\n    frame(options: PlacementOptions): Frame {\n      const { origin, size } = this.parent().frame(options);\n\n      return new Frame(\n        origin.x,\n        origin.y - (options.other.size.height - size.height) / 2 + options.offsets.top,\n        size.width,\n        size.height,\n      );\n    }\n\n    flex(): FlexPlacement {\n      return {\n        direction: 'row-reverse',\n        alignment: 'flex-start',\n      };\n    }\n\n    parent(): PopoverPlacement {\n      return PopoverPlacements.RIGHT;\n    }\n\n    reverse(): PopoverPlacement {\n      return PopoverPlacements.LEFT_START;\n    }\n\n    family(): PopoverPlacement[] {\n      return this.parent().family();\n    }\n\n    fits(frame: Frame, other: Frame): boolean {\n      return this.parent().fits(frame, other);\n    }\n  };\n\n  static RIGHT_END: PopoverPlacement = new class implements PopoverPlacement {\n    rawValue = 'right end';\n\n    frame(options: PlacementOptions): Frame {\n      const { origin, size } = this.parent().frame(options);\n\n      return new Frame(\n        origin.x,\n        origin.y + (options.other.size.height - size.height) / 2 - options.offsets.bottom,\n        size.width,\n        size.height,\n      );\n    }\n\n    flex(): FlexPlacement {\n      return {\n        direction: 'row-reverse',\n        alignment: 'flex-end',\n      };\n    }\n\n    parent(): PopoverPlacement {\n      return PopoverPlacements.RIGHT;\n    }\n\n    reverse(): PopoverPlacement {\n      return PopoverPlacements.LEFT_END;\n    }\n\n    family(): PopoverPlacement[] {\n      return this.parent().family();\n    }\n\n    fits(frame: Frame, other: Frame): boolean {\n      return this.parent().fits(frame, other);\n    }\n  };\n\n  static BOTTOM: PopoverPlacement = new class implements PopoverPlacement {\n    rawValue = 'bottom';\n\n    frame(options: PlacementOptions): Frame {\n      const { origin, size } = options.source.bottomOf(options.other).centerHorizontalOf(options.other);\n\n      const x: number = I18nLayoutService.select(\n        origin.x,\n        options.bounds.size.width - (origin.x + size.width),\n      );\n\n      return new Frame(\n        x,\n        origin.y - options.offsets.bottom,\n        size.width,\n        size.height,\n      );\n    }\n\n    flex(): FlexPlacement {\n      return {\n        direction: 'column-reverse',\n        alignment: 'center',\n      };\n    }\n\n    parent(): PopoverPlacement {\n      return this;\n    }\n\n    reverse(): PopoverPlacement {\n      return PopoverPlacements.TOP;\n    }\n\n    family(): PopoverPlacement[] {\n      return [\n        PopoverPlacements.BOTTOM,\n        PopoverPlacements.BOTTOM_START,\n        PopoverPlacements.BOTTOM_END,\n      ];\n    }\n\n    fits(frame: Frame, other: Frame): boolean {\n      return fitsBottom(frame, other) && fitsLeft(frame, other) && fitsRight(frame, other);\n    }\n  };\n\n  static BOTTOM_START: PopoverPlacement = new class implements PopoverPlacement {\n    rawValue = 'bottom start';\n\n    frame(options: PlacementOptions): Frame {\n      const { origin, size } = this.parent().frame(options);\n\n      return new Frame(\n        origin.x - (options.other.size.width - size.width) / 2 + options.offsets.left,\n        origin.y,\n        size.width,\n        size.height,\n      );\n    }\n\n    flex(): FlexPlacement {\n      return {\n        direction: 'column-reverse',\n        alignment: 'flex-start',\n      };\n    }\n\n    parent(): PopoverPlacement {\n      return PopoverPlacements.BOTTOM;\n    }\n\n    reverse(): PopoverPlacement {\n      return PopoverPlacements.TOP_START;\n    }\n\n    family(): PopoverPlacement[] {\n      return this.parent().family();\n    }\n\n    fits(frame: Frame, other: Frame): boolean {\n      return this.parent().fits(frame, other);\n    }\n  };\n\n  static BOTTOM_END: PopoverPlacement = new class implements PopoverPlacement {\n    rawValue = 'bottom end';\n\n    frame(options: PlacementOptions): Frame {\n      const { origin, size } = this.parent().frame(options);\n\n      return new Frame(\n        origin.x + (options.other.size.width - size.width) / 2 - options.offsets.right,\n        origin.y,\n        size.width,\n        size.height,\n      );\n    }\n\n    flex(): FlexPlacement {\n      return {\n        direction: 'column-reverse',\n        alignment: 'flex-end',\n      };\n    }\n\n    parent(): PopoverPlacement {\n      return PopoverPlacements.BOTTOM;\n    }\n\n    reverse(): PopoverPlacement {\n      return PopoverPlacements.TOP_END;\n    }\n\n    family(): PopoverPlacement[] {\n      return this.parent().family();\n    }\n\n    fits(frame: Frame, other: Frame): boolean {\n      return this.parent().fits(frame, other);\n    }\n  };\n\n  static parse(value: string | PopoverPlacement, fallback?: PopoverPlacement): PopoverPlacement | undefined {\n    return PopoverPlacements.typeOf(value) ? value : PopoverPlacements.parseString(value, fallback);\n  }\n\n  private static parseString(rawValue: string, fallback?: PopoverPlacement): PopoverPlacement | undefined {\n    switch (rawValue) {\n      case PopoverPlacements.LEFT.rawValue:\n        return PopoverPlacements.LEFT;\n      case PopoverPlacements.TOP.rawValue:\n        return PopoverPlacements.TOP;\n      case PopoverPlacements.RIGHT.rawValue:\n        return PopoverPlacements.RIGHT;\n      case PopoverPlacements.BOTTOM.rawValue:\n        return PopoverPlacements.BOTTOM;\n      case PopoverPlacements.LEFT_START.rawValue:\n        return PopoverPlacements.LEFT_START;\n      case PopoverPlacements.LEFT_END.rawValue:\n        return PopoverPlacements.LEFT_END;\n      case PopoverPlacements.TOP_START.rawValue:\n        return PopoverPlacements.TOP_START;\n      case PopoverPlacements.TOP_END.rawValue:\n        return PopoverPlacements.TOP_END;\n      case PopoverPlacements.RIGHT_START.rawValue:\n        return PopoverPlacements.RIGHT_START;\n      case PopoverPlacements.RIGHT_END.rawValue:\n        return PopoverPlacements.RIGHT_END;\n      case PopoverPlacements.BOTTOM_START.rawValue:\n        return PopoverPlacements.BOTTOM_START;\n      case PopoverPlacements.BOTTOM_END.rawValue:\n        return PopoverPlacements.BOTTOM_END;\n      default:\n        return fallback;\n    }\n  }\n\n  private static typeOf(value: any): value is PopoverPlacement {\n    const { rawValue } = (<PopoverPlacement>value);\n\n    return rawValue !== undefined;\n  }\n}\n\nconst fitsStart = (frame: Frame, other: Frame): boolean => {\n  return I18nLayoutService.select(fitsLeft, fitsRight)(frame, other);\n};\n\nconst fitsEnd = (frame: Frame, other: Frame): boolean => {\n  return I18nLayoutService.select(fitsRight, fitsLeft)(frame, other);\n};\n\nconst fitsLeft = (frame: Frame, other: Frame): boolean => {\n  return frame.origin.x >= other.origin.x;\n};\n\nconst fitsRight = (frame: Frame, other: Frame): boolean => {\n  return frame.origin.x + frame.size.width <= other.size.width;\n};\n\nconst fitsTop = (frame: Frame, other: Frame): boolean => {\n  return frame.origin.y >= other.origin.y;\n};\n\nconst fitsBottom = (frame: Frame, other: Frame): boolean => {\n  return frame.origin.y + frame.size.height <= other.size.height;\n};\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  View,\n  ViewProps,\n  ViewStyle,\n  StyleSheet,\n  StyleProp,\n} from 'react-native';\nimport { StyleType } from '@kitten/theme';\nimport {\n  PopoverPlacement,\n  PopoverPlacements,\n} from './type';\nimport { Arrow } from '../support/components';\nimport { I18nLayoutService } from '../support/services';\n\ninterface ComponentProps {\n  placement?: string | PopoverPlacement;\n  indicatorOffset?: number;\n  indicatorStyle?: StyleProp<ViewStyle>;\n}\n\nconst PLACEMENT_DEFAULT: PopoverPlacement = PopoverPlacements.TOP;\n\nexport type PopoverViewProps = ViewProps & ComponentProps;\nexport type PopoverViewElement = React.ReactElement<PopoverViewProps>;\n\nexport class PopoverView extends React.Component<PopoverViewProps> {\n\n  static defaultProps: Partial<PopoverViewProps> = {\n    placement: PLACEMENT_DEFAULT.rawValue,\n    indicatorOffset: 8,\n  };\n\n  private getComponentStyle = (source: StyleProp<ViewStyle>, placement: PopoverPlacement): StyleType => {\n    const derivedIndicatorStyle = StyleSheet.flatten(this.props.indicatorStyle);\n\n    const { direction, alignment } = placement.flex();\n\n    const isVertical: boolean = direction.startsWith('column');\n    const isStart: boolean = alignment.endsWith('start');\n    const isEnd: boolean = alignment.endsWith('end');\n    const isReverse: boolean = direction.endsWith('reverse');\n\n    // Rotate indicator by 90 deg if we have `row` direction (left/right placement)\n    // Rotate it again by 180 if we have `row-reverse` (bottom/right placement)\n    const indicatorPrimaryRotate: number = isVertical ? 180 : 90;\n    const indicatorSecondaryRotate: number = isReverse ? 0 : 180;\n\n    // Translate container by half of `indicatorWidth`. Exactly half (because it has a square shape)\n    // Reverse if needed\n\n    // @ts-ignore: indicatorWidth type is always number\n    let containerTranslate: number = isVertical ? 0 : derivedIndicatorStyle.width / 2;\n    containerTranslate = isReverse ? containerTranslate : -containerTranslate;\n\n    // Translate indicator by passed `indicatorOffset`\n    // Reverse if needed\n\n    let indicatorTranslate: number = isVertical ? -this.props.indicatorOffset : this.props.indicatorOffset;\n    indicatorTranslate = isReverse ? -indicatorTranslate : indicatorTranslate;\n    const i18nVerticalIndicatorTranslate = I18nLayoutService.select(indicatorTranslate, -indicatorTranslate);\n    indicatorTranslate = isVertical ? i18nVerticalIndicatorTranslate : indicatorTranslate;\n\n    const containerStyle: ViewStyle = I18nLayoutService.toI18nStyle({\n      flexDirection: direction,\n      transform: [\n        { translateX: containerTranslate },\n      ],\n    });\n\n    const contentStyle: ViewStyle = {\n      backgroundColor: 'black',\n      transform: [\n        { translateX: containerTranslate },\n      ],\n    };\n\n    const indicatorStyle: ViewStyle = {\n      transform: [\n        { rotate: `${indicatorPrimaryRotate}deg` },\n        { rotate: `${indicatorSecondaryRotate}deg` },\n\n        // Translate indicator \"to start\" if we have `-start` alignment\n        // Or translate it \"to end\" if we have `-end` alignment\n        { translateX: isStart ? -indicatorTranslate : 0 },\n        { translateX: isEnd ? indicatorTranslate : 0 },\n      ],\n      ...derivedIndicatorStyle,\n      ...styles.indicator,\n    };\n\n    return {\n      container: {\n        ...containerStyle,\n        alignItems: alignment,\n      },\n      content: contentStyle,\n      indicator: indicatorStyle,\n    };\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { style, indicatorStyle, placement: rawPlacement, children, ...derivedProps } = this.props;\n    const placement: PopoverPlacement = PopoverPlacements.parse(rawPlacement, PLACEMENT_DEFAULT);\n\n    const { container, indicator, content } = this.getComponentStyle(style, placement);\n\n    return (\n      <View\n        {...derivedProps}\n        style={[container, styles.container]}>\n        <Arrow style={[indicator, styles.indicator, indicatorStyle]}/>\n        <View\n          style={[content, styles.content, style]}>\n          {children}\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    alignSelf: 'flex-start',\n  },\n  content: {\n    justifyContent: 'center',\n  },\n  indicator: {},\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  findNodeHandle,\n  UIManager,\n  View,\n  ViewProps,\n  Dimensions,\n  ScaledSize,\n} from 'react-native';\nimport { Frame } from './type';\n\nexport type MeasuringElement = React.ReactElement<MeasuringElementProps>;\nexport type MeasuringElementProps = { tag: React.ReactText } & any;\nexport type MeasuringNode = React.ReactElement<MeasureNodeProps>;\nexport type MeasuringNodeProps = MeasureNodeProps;\n\nexport type MeasuredElementProps = MeasuringElementProps & { frame: Frame };\nexport type MeasuredElement = React.ReactElement<MeasuredElementProps>;\n\nexport interface MeasureResult {\n  [tag: string]: Frame;\n}\n\nexport interface MeasureElementProps {\n  onResult: (result: MeasuredElement) => void;\n  children: MeasuringElement;\n}\n\nexport interface MeasureNodeProps {\n  onResult: (result: MeasureResult) => void;\n  children: MeasuringElement | MeasuringElement[];\n}\n\n/**\n * Measures child element size and it's screen position asynchronously.\n * Returns measure result in `onResult` callback.\n *\n * Usage:\n *\n * const onMeasure = (element: ElementToMeasure): void => {\n *   const { x, y, width, height } = element.props.frame;\n *   ...\n * };\n *\n * <MeasureElement onResult={this.onMeasure}>\n *   <ElementToMeasure tag='@measure/measure-me!'/>\n * </MeasureElement>\n */\nexport const MeasureElement = (props: MeasureElementProps): MeasuringElement => {\n\n  const ref: React.RefObject<any> = React.createRef();\n\n  const { children, onResult } = props;\n\n  const bindToWindow = (frame: Frame, window: ScaledSize): Frame => {\n    if (frame.origin.x < window.width) {\n      return frame;\n    }\n\n    const boundFrame: Frame = new Frame(\n      frame.origin.x - window.width,\n      frame.origin.y,\n      frame.size.width,\n      frame.size.height,\n    );\n\n    return bindToWindow(boundFrame, window);\n  };\n\n  const measureSelf = () => {\n    const node: number = findNodeHandle(ref.current);\n\n    UIManager.measureInWindow(node, (x: number, y: number, w: number, h: number) => {\n      const window: ScaledSize = Dimensions.get('window');\n      const frame: Frame = bindToWindow(new Frame(x, y, w, h), window);\n\n      const measuredElement: MeasuredElement = React.cloneElement(children, { frame });\n\n      onResult(measuredElement);\n    });\n  };\n\n  return React.cloneElement(children, {\n    ref,\n    onLayout: measureSelf,\n  });\n};\n\n/**\n * Measures passed child elements size and it's screen position asynchronously.\n * Returns measure result in `onResult` callback.\n *\n * Does the same as `MeasureElement` but calls `onResult` after all children are measured.\n *\n * Usage:\n *\n * const onMeasure = (result: MeasureResult): void => {\n *   const { [0]: firstElementFrame, [1]: secondElementFrame } = result;\n *   const { x, y, width, height } = firstElementFrame;\n *   ...\n * };\n *\n * <MeasureNode onResult={this.onMeasure}>\n *   <ElementToMeasure tag={0}/>\n *   <ElementToMeasure tag={1}/>\n * </MeasureNode>\n */\nexport const MeasureNode = (props: MeasuringNodeProps): MeasuringNode => {\n\n  const result: MeasureResult = {};\n\n  const { children, onResult } = props;\n\n  const onChildMeasure = (element: MeasuredElement) => {\n    const { tag, frame } = element.props;\n\n    result[tag] = frame;\n\n    if (Object.keys(result).length === React.Children.count(children)) {\n      onResult(result);\n    }\n  };\n\n  const renderMeasuringElement = (element: MeasuringElement, index: number): MeasuringElement => {\n    return (\n      <MeasureElement\n        key={index}\n        onResult={onChildMeasure}>\n        {element}\n      </MeasureElement>\n    );\n  };\n\n  const renderChildren = (): MeasuringElement[] => {\n    return React.Children.map(children, renderMeasuringElement);\n  };\n\n  return (\n    <React.Fragment>\n      {renderChildren()}\n    </React.Fragment>\n  );\n};\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport {\n  Frame,\n  PlacementOptions,\n  PopoverPlacement,\n  PopoverPlacements,\n} from './type';\n\nconst PLACEMENT_FAMILIES: string[] = [\n  PopoverPlacements.BOTTOM.rawValue,\n  PopoverPlacements.TOP.rawValue,\n  PopoverPlacements.LEFT.rawValue,\n  PopoverPlacements.RIGHT.rawValue,\n];\n\nexport class PopoverPlacementService {\n\n  public find(preferredValue: PopoverPlacement, options: PlacementOptions): PopoverPlacement {\n    const placement: PopoverPlacement = this.findRecursive(preferredValue, PLACEMENT_FAMILIES, options);\n\n    return placement || preferredValue;\n  }\n\n  private findRecursive(placement: PopoverPlacement, families: string[], options: PlacementOptions): PopoverPlacement {\n    const oneOfCurrentFamily: PopoverPlacement = this.findFromFamily(placement, options);\n\n    if (oneOfCurrentFamily) {\n      return oneOfCurrentFamily;\n    }\n\n    const oneOfReversedFamily: PopoverPlacement = this.findFromFamily(placement.reverse(), options);\n\n    if (oneOfReversedFamily) {\n      return oneOfReversedFamily;\n    }\n\n    delete families[families.indexOf(placement.parent().rawValue)];\n    delete families[families.indexOf(placement.reverse().parent().rawValue)];\n\n    const firstTruthy: string = families.filter(Boolean)[0];\n\n    if (firstTruthy) {\n      const nextPlacement: PopoverPlacement = PopoverPlacements.parse(firstTruthy);\n\n      return this.findRecursive(nextPlacement, families, options);\n    }\n\n    return null;\n  }\n\n  private findFromFamily(placement: PopoverPlacement, options: PlacementOptions): PopoverPlacement {\n    const preferredFrame: Frame = placement.frame(options);\n\n    if (placement.fits(preferredFrame, options.bounds)) {\n      return placement;\n    }\n\n    return placement.family().find((familyValue: PopoverPlacement): boolean => {\n      const familyFrame = familyValue.frame(options);\n\n      return familyValue.fits(familyFrame, options.bounds);\n    });\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  Dimensions,\n  ScaledSize,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\nimport {\n  ModalService,\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport {\n  PopoverView,\n  PopoverViewProps,\n} from './popoverView.component';\nimport {\n  MeasuredElement,\n  MeasureNode,\n  MeasureResult,\n  MeasuringElement,\n  MeasuringElementProps,\n  MeasuringNode,\n} from './measure.component';\nimport {\n  Frame,\n  Offsets,\n  PlacementOptions,\n  PopoverPlacement,\n  PopoverPlacements,\n} from './type';\nimport { PopoverPlacementService } from './placement.service';\nimport { ModalPresentingBased } from '../support/typings';\n\ntype ContentElement = React.ReactElement<any>;\ntype ChildElement = React.ReactElement<any>;\n\ninterface ComponentProps extends PopoverViewProps, ModalPresentingBased {\n  content: ContentElement;\n  children: ChildElement;\n  visible?: boolean;\n}\n\nexport type PopoverProps = StyledComponentProps & ViewProps & ComponentProps;\nexport type PopoverElement = React.ReactElement<PopoverProps>;\n\nconst WINDOW: ScaledSize = Dimensions.get('window');\nconst WINDOW_BOUNDS: Frame = new Frame(0, 0, WINDOW.width, WINDOW.height);\n\nconst TAG_CHILD: number = 0;\nconst TAG_CONTENT: number = 1;\nconst PLACEMENT_DEFAULT: PopoverPlacement = PopoverPlacements.BOTTOM;\n\n/**\n * Displays content in a `Modal` when users focus on or tap an element. Also supports automatic placement.\n *\n * @extends React.Component\n *\n * @property {React.ReactElement<any>} content - Determines the content of the popover.\n *\n * @property {React.ReactElement<any>} children - Determines the element \"above\" which popover will be shown.\n *\n * @property {boolean} visible - Determines whether popover is visible or not.\n *\n * @property {string | PopoverPlacement} placement - Determines the placement of the popover.\n * Can be `left`, `top`, `right`, `bottom`, `left start`, `left end`, `top start`, `top end`, `right start`,\n * `right end`, `bottom start` or `bottom end`.\n * Default is `bottom`.\n *\n * @property {number} indicatorOffset - Determines the offset of indicator (arrow).\n * @property {StyleProp<ViewStyle>} indicatorStyle - Determines style of indicator (arrow).\n *\n * @property {ViewProps} ...ViewProps - Any props applied to View component.\n *\n * @property {ModalPresentingBased} ...ModalProps - Any props applied to Modal component.\n *\n * @overview-example PopoverSimpleUsage\n *\n * @overview-example PopoverPlacement\n */\nexport class PopoverComponent extends React.Component<PopoverProps> {\n\n  static styledComponentName: string = 'Popover';\n\n  static defaultProps: Partial<PopoverProps> = {\n    placement: PLACEMENT_DEFAULT.rawValue,\n    visible: false,\n    allowBackdrop: true,\n    onBackdropPress: () => null,\n  };\n\n  private popoverId: string;\n  private placementService: PopoverPlacementService = new PopoverPlacementService();\n  private popoverPlacement: PopoverPlacement;\n\n  public componentDidUpdate(prevProps: PopoverProps): void {\n    this.handleVisibility(prevProps);\n  }\n\n  private handleVisibility = (prevProps: PopoverProps): void => {\n    if (prevProps.visible !== this.props.visible) {\n      if (this.props.visible) {\n        // Toggles re-measuring. This is needed for dynamic containers like ScrollView\n        this.setState({ layout: undefined });\n      } else {\n        this.popoverId = ModalService.hide(this.popoverId);\n      }\n    } else if (prevProps.visible && this.props.visible) {\n      this.updatePopoverElement();\n    }\n  };\n\n  private updatePopoverElement = (): void => {\n    const element: ContentElement = this.renderPopoverElement(this.props.content, this.popoverPlacement);\n\n    const popoverElement: ContentElement = React.cloneElement(element, {\n      style: [element.props.style, styles.popoverVisible],\n    });\n    this.popoverId && ModalService.update(this.popoverId, popoverElement);\n  };\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const {\n      indicatorWidth,\n      indicatorHeight,\n      indicatorBackgroundColor,\n      ...containerParameters\n    } = source;\n\n    return {\n      container: containerParameters,\n      indicator: {\n        width: indicatorWidth,\n        height: indicatorHeight,\n        backgroundColor: indicatorBackgroundColor,\n      },\n    };\n  };\n\n  private onMeasure = (layout: MeasureResult): void => {\n    if (this.props.visible) {\n      const placementOptions: PlacementOptions = this.createPlacementOptions(layout);\n      const popoverPlacement = this.placementService.find(this.popoverPlacement, placementOptions);\n\n      this.popoverId = this.showPopoverModal(popoverPlacement, placementOptions);\n    }\n  };\n\n  private createPlacement = (value: string | PopoverPlacement): PopoverPlacement => {\n    return PopoverPlacements.parse(value, PLACEMENT_DEFAULT);\n  };\n\n  private createPlacementOptions = (layout: MeasureResult): PlacementOptions => {\n    const { children } = this.props;\n\n    return {\n      source: layout[TAG_CONTENT],\n      other: layout[TAG_CHILD],\n      bounds: WINDOW_BOUNDS,\n      offsets: Offsets.find(children.props.style),\n    };\n  };\n\n  private showPopoverModal = (placement: PopoverPlacement, options: PlacementOptions): string => {\n    const popoverFrame: Frame = placement.frame(options);\n    const popoverElement: MeasuredElement = this.renderPopoverElement(this.props.content, placement);\n\n    const positionStyle: ViewStyle = {\n      left: popoverFrame.origin.x,\n      top: popoverFrame.origin.y,\n    };\n\n    const positionedPopoverElement: React.ReactElement<ModalPresentingBased> = React.cloneElement(popoverElement, {\n      style: [styles.popoverVisible, positionStyle],\n    });\n\n    return ModalService.show(positionedPopoverElement, {\n      allowBackdrop: this.props.allowBackdrop,\n      onBackdropPress: this.props.onBackdropPress,\n    });\n  };\n\n  private renderPopoverElement = (children: ContentElement, placement: PopoverPlacement): ContentElement => {\n    const { style: derivedStyle, themedStyle, indicatorStyle, ...derivedProps } = this.props;\n    const { container, indicator } = this.getComponentStyle(themedStyle);\n\n    const measuringProps: MeasuringElementProps = { tag: TAG_CONTENT };\n\n    return (\n      <View\n        {...measuringProps}\n        key={TAG_CONTENT}\n        style={[styles.popover, styles.popoverInvisible]}>\n        <PopoverView\n          {...derivedProps}\n          style={[container, derivedStyle]}\n          indicatorStyle={[indicator, styles.indicator, indicatorStyle]}\n          placement={placement.reverse().rawValue}>\n          {children}\n        </PopoverView>\n      </View>\n    );\n  };\n\n  private renderChildElement = (source: ChildElement): MeasuringElement => {\n    const measuringProps: MeasuringElementProps = { tag: TAG_CHILD };\n\n    return (\n      <View\n        {...measuringProps}\n        key={TAG_CHILD}\n        style={styles.child}>\n        {source}\n      </View>\n    );\n  };\n\n  private renderMeasuringElement = (...children: MeasuringElement[]): MeasuringNode => {\n    return (\n      <MeasureNode\n        onResult={this.onMeasure}>\n        {children}\n      </MeasureNode>\n    );\n  };\n\n  public render(): React.ReactNode {\n    if (this.props.visible) {\n      this.popoverPlacement = this.createPlacement(this.props.placement);\n      const popoverElement: ContentElement = this.renderPopoverElement(this.props.content, this.popoverPlacement);\n      const childElement: ChildElement = this.renderChildElement(this.props.children);\n\n      return this.renderMeasuringElement(childElement, popoverElement);\n    }\n\n    return this.props.children;\n  }\n}\n\nconst styles = StyleSheet.create({\n  popover: {\n    position: 'absolute',\n  },\n  popoverInvisible: {\n    opacity: 0,\n  },\n  popoverVisible: {\n    opacity: 1,\n  },\n  indicator: {},\n  child: {},\n});\n\nexport const Popover = styled<PopoverProps>(PopoverComponent);\n","import React from 'react';\nimport {\n  Dimensions,\n  GestureResponderEvent,\n  ImageProps,\n  ImageStyle,\n  StyleSheet,\n  TouchableOpacity,\n  TouchableOpacityProps,\n} from 'react-native';\nimport {\n  Interaction,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport {\n  Text,\n  TextElement,\n} from '../text/text.component';\nimport {\n  Popover,\n  PopoverElement,\n} from '../popover/popover.component';\nimport { BaseCalendarProps } from '../calendar/baseCalendar.component';\nimport { NativeDateService } from '../calendar/service/nativeDate.service';\nimport { CalendarElement } from '../calendar/calendar.component';\nimport { RangeCalendarElement } from '../calendar/rangeCalendar.component';\n\nconst FULL_DATE_FORMAT_STRING: string = 'DD/MM/YYYY';\n\ninterface State {\n  visible: boolean;\n}\n\nexport interface ComponentProps {\n  icon?: (style: ImageStyle) => React.ReactElement<ImageProps>;\n  placeholder?: string;\n  status?: string;\n  size?: string;\n}\n\nexport type BaseDatepickerProps<D = Date> =\n  & StyledComponentProps\n  & TouchableOpacityProps\n  & BaseCalendarProps<D>\n  & ComponentProps;\n\nexport abstract class BaseDatepickerComponent<P, D = Date> extends React.Component<BaseDatepickerProps<D> & P, State> {\n\n  static defaultProps: Partial<BaseDatepickerProps> = {\n    dateService: new NativeDateService(),\n    placeholder: 'dd/mm/yyyy',\n  };\n\n  public state: State = {\n    visible: false,\n  };\n\n  protected abstract getComponentTitle(): string;\n\n  protected abstract renderCalendar(): CalendarElement<D> | RangeCalendarElement<D>;\n\n  protected formatDateToString(date: D): string {\n    return this.props.dateService.format(date, FULL_DATE_FORMAT_STRING);\n  }\n\n  private getComponentStyles = (style: StyleType): StyleType => {\n    const {\n      popoverMarginHorizontal,\n      textFontSize,\n      textLineHeight,\n      textFontWeight,\n      textFontFamily,\n      textColor,\n      iconWidth,\n      iconHeight,\n      iconTintColor,\n      ...containerStyles\n    } = style;\n\n    return {\n      container: containerStyles,\n      icon: {\n        width: iconWidth,\n        height: iconHeight,\n        tintColor: iconTintColor,\n      },\n      text: {\n        fontSize: textFontSize,\n        lineHeight: textLineHeight,\n        fontWeight: textFontWeight,\n        color: textColor,\n        fontFamily: textFontFamily,\n      },\n      popover: {\n        indent: popoverMarginHorizontal,\n      },\n    };\n  };\n\n  private onPressIn = (event: GestureResponderEvent): void => {\n    this.props.dispatch([Interaction.ACTIVE]);\n\n    if (this.props.onPressIn) {\n      this.props.onPressIn(event);\n    }\n  };\n\n  private onPressOut = (event: GestureResponderEvent): void => {\n    this.props.dispatch([]);\n\n    if (this.props.onPressOut) {\n      this.props.onPressOut(event);\n    }\n  };\n\n  private toggleVisible = (): void => {\n    const visible: boolean = !this.state.visible;\n\n    this.setState({ visible }, this.dispatchActive);\n  };\n\n  private dispatchActive = (): void => {\n    if (this.state.visible) {\n      this.props.dispatch([Interaction.ACTIVE]);\n    } else {\n      this.props.dispatch([]);\n    }\n  };\n\n  private renderIconElement = (style: StyleType): React.ReactElement<ImageProps> => {\n    const iconElement: React.ReactElement<ImageProps> = this.props.icon(style);\n\n    return React.cloneElement(iconElement, {\n      style: [style, iconElement.props.style],\n    });\n  };\n\n  private renderTextElement = (style: StyleType): TextElement => {\n    return (\n      <Text style={style}>\n        {this.getComponentTitle()}\n      </Text>\n    );\n  };\n\n  private renderControlChildren = (style: StyleType): React.ReactNodeArray => {\n    const { icon } = this.props;\n\n    return [\n      this.renderTextElement(style.text),\n      icon && this.renderIconElement(style.icon),\n    ];\n  };\n\n  private renderControl = (): React.ReactElement<TouchableOpacityProps> => {\n    const { themedStyle, disabled, style } = this.props;\n    const componentStyle: StyleType = this.getComponentStyles(themedStyle);\n\n    const [textElement, iconElement] = this.renderControlChildren(componentStyle);\n\n    return (\n      <TouchableOpacity\n        activeOpacity={1.0}\n        disabled={disabled}\n        style={[componentStyle.container, styles.container, style]}\n        onPress={this.toggleVisible}\n        onPressIn={this.onPressIn}\n        onPressOut={this.onPressOut}>\n        {textElement}\n        {iconElement}\n      </TouchableOpacity>\n    );\n  };\n\n  public render(): PopoverElement {\n    const { popover } = this.getComponentStyles(this.props.themedStyle);\n\n    const popoverStyle: StyleType = {\n      width: Dimensions.get('window').width - popover.indent,\n      maxWidth: Dimensions.get('window').width - popover.indent,\n    };\n\n    return (\n      <Popover\n        style={popoverStyle}\n        visible={this.state.visible}\n        content={this.renderCalendar()}\n        onBackdropPress={this.toggleVisible}>\n        {this.renderControl()}\n      </Popover>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n});\n\n","import React from 'react';\nimport { styled } from '@kitten/theme';\nimport {\n  BaseDatepickerComponent,\n  BaseDatepickerProps,\n} from './baseDatepicker.component';\nimport {\n  CalendarElement,\n  Calendar,\n  CalendarProps,\n} from '../calendar/calendar.component';\n\nexport type DatepickerProps<D = Date> = BaseDatepickerProps<D> & CalendarProps<D>;\nexport type DatepickerElement<D = Date> = React.ReactElement<DatepickerProps<D>>;\n\n/**\n * Styled `Datepicker` component.\n * Renders `Calendar` component in the `Popover`.\n * Supports locales and different date objects like Moment.js or date-fns.\n * Composes date picker components in a horizontal pageable list.\n *\n * @extends React.Component\n *\n * @property {(style: ImageStyle) => React.ReactElement<ImageProps>} icon - Determines the icon of the component.\n *\n * @property {string} status - Determines the status of the component.\n * Can be `basic`, `primary`, `success`, `info`, `warning`, `danger` or `control`.\n * Default is `basic`.\n *\n * @property {string} size - Determines the size of the component.\n * Can be `small`, `medium` or `large`.\n * Default is `medium`.\n *\n * @property {string} placeholder - Determines placeholder of the component.\n *\n * @property {D} min - Minimal date that is able to be selected.\n *\n * @property {D} max - Maximum date that is able to be selected.\n *\n * @property {D} date - Date which is currently selected.\n *\n * @property {DateService<D>} dateService - Date service that is able to work with a date objects.\n * Defaults to Native Date service that works with JS Date.\n * Allows using different types of date like Moment.js or date-fns.\n *\n * @property {boolean} boundingMonth - Defines if we should render previous and next months in the current month view.\n *\n * @property {CalendarViewMode} startView - Defines starting view for calendar. Defaults to Date view.\n *\n * @property {(date: D) => string} title - Defines the title for visible date.\n *\n * @property {(date: D) => string} todayTitle - Defines the title for today's date.\n *\n * @property {(date: D) => ReactElement<any>} filter - Predicate that decides which cells will be disabled.\n *\n * @property {(date: D) => void} onSelect - Selection emitter. Fires when another day cell is pressed.\n *\n * @property {(date: D, style: StyleType) => ReactElement<any>} renderDay - Should return the content of day cell.\n *\n * @property {(date: D, style: StyleType) => ReactElement<any>} renderMonth - Should return the content of month cell.\n *\n * @property {(date: D, style: StyleType) => ReactElement<any>} renderYear - Should return the content of year cell.\n *\n * @property {TouchableOpacityProps} ...TouchableOpacityProps - Any props applied to TouchableOpacity component.\n *\n * @overview-example DatepickerSimpleUsage\n *\n * @overview-example DatepickerWithIcon\n *\n * @overview-example DatepickerBoundingMonth\n *\n * @overview-example DatepickerFilter\n *\n * @example DatepickerCustomDay\n *\n * @example DatepickerCustomLocale\n *\n * @example DatepickerMoment\n */\n\nexport class DatepickerComponent<D = Date> extends BaseDatepickerComponent<DatepickerProps<D>, D> {\n\n  static styledComponentName: string = 'Datepicker';\n\n  // BaseDatepickerComponent\n\n  protected getComponentTitle(): string {\n    if (this.props.date) {\n      return this.formatDateToString(this.props.date);\n    } else {\n      return this.props.placeholder;\n    }\n  }\n\n  protected renderCalendar(): CalendarElement<D> {\n    return (\n      // @ts-ignore\n      <Calendar {...this.props}/>\n    );\n  }\n}\n\nexport const Datepicker = styled<DatepickerProps>(DatepickerComponent);\n","import React from 'react';\nimport { styled } from '@kitten/theme';\nimport {\n  BaseDatepickerComponent,\n  BaseDatepickerProps,\n} from './baseDatepicker.component';\nimport {\n  RangeCalendar,\n  RangeCalendarElement,\n  RangeCalendarProps,\n} from '../calendar/rangeCalendar.component';\n\nexport type RangeDatepickerProps<D = Date> = BaseDatepickerProps<D> & RangeCalendarProps<D>;\nexport type RangeDatepickerElement<D = Date> = React.ReactElement<RangeDatepickerProps<D>>;\n\n/**\n * Styled `RangeDatepicker` component.\n * Renders `RangeCalendar` component in the `Popover`.\n * Supports locales and different date objects like Moment.js or date-fns.\n * Composes date picker components in a horizontal pageable list.\n *\n * @extends React.Component\n *\n * @property {(style: ImageStyle) => React.ReactElement<ImageProps>} icon - Determines the icon of the component.\n *\n * @property {string} status - Determines the status of the component.\n * Can be `basic`, `primary`, `success`, `info`, `warning`, `danger` or `control`.\n * Default is `basic`.\n *\n * @property {string} size - Determines the size of the component.\n * Can be `small`, `medium` or `large`.\n * Default is `medium`.\n *\n * @property {string} placeholder - Determines placeholder of the component.\n *\n * @property {D} min - Minimal date that is able to be selected.\n *\n * @property {D} max - Maximum date that is able to be selected.\n *\n * @property {D} date - Date which is currently selected.\n *\n * @property {DateService<D>} dateService - Date service that is able to work with a date objects.\n * Defaults to Native Date service that works with JS Date.\n * Allows using different types of date like Moment.js or date-fns.\n *\n * @property {boolean} boundingMonth - Defines if we should render previous and next months in the current month view.\n *\n * @property {CalendarViewMode} startView - Defines starting view for calendar. Defaults to Date view.\n *\n * @property {(date: D) => string} title - Defines the title for visible date.\n *\n * @property {(date: D) => string} todayTitle - Defines the title for today's date.\n *\n * @property {(date: D) => ReactElement<any>} filter - Predicate that decides which cells will be disabled.\n *\n * @property {(date: D) => void} onSelect - Selection emitter. Fires when another day cell is pressed.\n *\n * @property {(date: D, style: StyleType) => ReactElement<any>} renderDay - Should return the content of day cell.\n *\n * @property {(date: D, style: StyleType) => ReactElement<any>} renderMonth - Should return the content of month cell.\n *\n * @property {(date: D, style: StyleType) => ReactElement<any>} renderYear - Should return the content of year cell.\n *\n * @property {TouchableOpacityProps} ...TouchableOpacityProps - Any props applied to TouchableOpacity component.\n *\n * @overview-example RangeDatepickerSimpleUsage\n */\n\nexport class RangeDatepickerComponent<D = Date> extends BaseDatepickerComponent<RangeDatepickerProps<D>, D> {\n\n  static styledComponentName: string = 'Datepicker';\n\n  // BaseDatepickerComponent\n\n  protected getComponentTitle(): string {\n    const { startDate, endDate } = this.props.range;\n\n    if (startDate || endDate) {\n      const start: string = startDate ? this.formatDateToString(startDate) : '';\n      const end: string = endDate ? this.formatDateToString(endDate) : '';\n\n      return `${start} - ${end}`;\n    } else {\n      return this.props.placeholder;\n    }\n  }\n\n  protected renderCalendar(): RangeCalendarElement<D> {\n    return (\n      // @ts-ignore\n      <RangeCalendar {...this.props}/>\n    );\n  }\n}\n\nexport const RangeDatepicker = styled<RangeDatepickerProps>(RangeDatepickerComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  FlatList,\n  FlatListProps,\n  ListRenderItemInfo,\n  StyleSheet,\n  ViewStyle,\n} from 'react-native';\nimport {\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport { ListItemProps } from './listItem.component';\n\n// this is basically needed to avoid generics in required props\ntype ItemType = any;\ntype ListItemElement = React.ReactElement<any>;\ntype RenderItemProp = (info: ListRenderItemInfo<ItemType>, style: StyleType) => ListItemElement;\n\ninterface ComponentProps {\n  renderItem: RenderItemProp;\n}\n\nexport type ListProps = StyledComponentProps & FlatListProps<ItemType> & ComponentProps;\nexport type ListElement = React.ReactElement<ListProps>;\n\nexport interface BaseScrollParams {\n  animated?: boolean;\n}\n\nexport interface ViewScrollParams {\n  viewOffset?: number;\n  viewPosition?: number;\n}\n\nexport interface ScrollToIndexParams extends BaseScrollParams, ViewScrollParams {\n  index: number;\n}\n\nexport interface ScrollToOffsetParams extends BaseScrollParams {\n  offset: number;\n}\n\n/**\n * `List` component is a performant interface for rendering simple, flat lists. Extends `FlatList`. Renders list of\n * `ListItem` components or custom content.\n *\n * @extends React.Component\n *\n * @property {(info: ListRenderItemInfo<ItemT>, style: StyleType) => React.ReactElement<any>} renderItem - Takes an\n * item from data and renders it into the list.\n *\n * @property {FlatListProps} ...FlatListProps - Any props applied to FlatList component.\n *\n * @overview-example ListSimpleUsage\n *\n * @overview-example ListCompositeItem\n *\n * @example ListInlineStyling\n * ```\n */\nexport class ListComponent extends React.Component<ListProps> {\n\n  static styledComponentName: string = 'List';\n\n  private listRef: React.RefObject<FlatList<ItemType>> = React.createRef();\n\n  public scrollToEnd = (params?: BaseScrollParams): void => {\n    this.listRef.current.scrollToEnd(params);\n  };\n\n  public scrollToIndex = (params: ScrollToIndexParams): void => {\n    this.listRef.current.scrollToIndex(params);\n  };\n\n  public scrollToOffset(params: ScrollToOffsetParams): void {\n    this.listRef.current.scrollToOffset(params);\n  }\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    return {\n      container: source,\n      item: {},\n    };\n  };\n\n  private getItemStyle = (source: StyleType, index: number): ViewStyle => {\n    const { item } = source;\n\n    return item;\n  };\n\n  private keyExtractor = (item: ItemType, index: number): string => {\n    return index.toString();\n  };\n\n  private renderItem = (info: ListRenderItemInfo<ItemType>): ListItemElement => {\n    const itemStyle: StyleType = this.getItemStyle(this.props.themedStyle, info.index);\n    const itemElement: React.ReactElement<ListItemProps> = this.props.renderItem(info, itemStyle);\n\n    return React.cloneElement(itemElement, {\n      style: [itemStyle, styles.item, itemElement.props.style],\n      index: info.index,\n    });\n  };\n\n  public render(): React.ReactElement<FlatListProps<ItemType>> {\n    const { style, themedStyle, ...derivedProps } = this.props;\n    const componentStyle: StyleType = this.getComponentStyle(themedStyle);\n\n    return (\n      <FlatList\n        keyExtractor={this.keyExtractor}\n        {...derivedProps}\n        ref={this.listRef}\n        style={[componentStyle.container, styles.container, style]}\n        renderItem={this.renderItem}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {},\n  item: {},\n});\n\nexport const List = styled<ListProps>(ListComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  GestureResponderEvent,\n  ImageProps,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  TouchableOpacity,\n  View,\n} from 'react-native';\nimport {\n  Interaction,\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport {\n  Text,\n  TextElement,\n} from '../text/text.component';\nimport { TouchableIndexedProps } from '../support/typings/type';\nimport { allWithPrefix } from '../support/services';\n\ntype IconElement = React.ReactElement<ImageProps>;\n\nexport interface MenuItemType {\n  title: string;\n  disabled?: boolean;\n  subItems?: MenuItemType[];\n  titleStyle?: StyleProp<TextStyle>;\n  menuIndex?: number;\n  icon?: (style: StyleType) => IconElement;\n  accessory?: (style: StyleType) => IconElement;\n}\n\ninterface ComponentProps extends MenuItemType {\n  selected?: boolean;\n}\n\nexport type MenuItemProps = StyledComponentProps & ComponentProps & TouchableIndexedProps;\nexport type MenuItemElement = React.ReactElement<MenuItemProps>;\n\n/**\n * `MenuItem` is a support component for `Menu`.\n *\n * @extends React.Component\n *\n * @property {string} title - Determines the title of the ListItem.\n *\n * @property {StyleProp<TextStyle>} titleStyle - Customizes title style.\n *\n * @property {(style: StyleType) => React.ReactElement<ImageProps>} accessory - Determines the accessory of the\n * component.\n *\n * @property {(style: StyleType) => React.ReactElement<ImageProps>} icon - Determines the icon of the component.\n *\n * @property {MenuItemType[]} subItems - Determines the sub-items of the MenuItem.\n *\n * @property {(index: number, event: GestureResponderEvent) => void} onPress - Emits when component is pressed.\n *\n * @property {TouchableOpacityProps} ...TouchableOpacityProps - Any props applied to TouchableOpacity component.\n */\nclass MenuItemComponent extends React.Component<MenuItemProps> {\n\n  static styledComponentName: string = 'MenuItem';\n\n  private onPress = (event: GestureResponderEvent): void => {\n    if (this.props.onPress) {\n      this.props.onPress(this.props.menuIndex, event);\n    }\n  };\n\n  private onPressIn = (event: GestureResponderEvent): void => {\n    this.props.dispatch([Interaction.ACTIVE]);\n\n    if (this.props.onPressIn) {\n      this.props.onPressIn(this.props.menuIndex, event);\n    }\n  };\n\n  private onPressOut = (event: GestureResponderEvent): void => {\n    this.props.dispatch([]);\n\n    if (this.props.onPressOut) {\n      this.props.onPressOut(this.props.menuIndex, event);\n    }\n  };\n\n  private onLongPress = (event: GestureResponderEvent): void => {\n    if (this.props.onLongPress) {\n      this.props.onLongPress(this.props.menuIndex, event);\n    }\n  };\n\n  private getComponentStyles = (style: StyleType): StyleType => {\n    const { paddingHorizontal, paddingVertical, backgroundColor } = style;\n\n    const titleStyles: StyleType = allWithPrefix(style, 'title');\n    const indicatorStyles: StyleType = allWithPrefix(style, 'indicator');\n    const iconStyles: StyleType = allWithPrefix(style, 'icon');\n\n    return {\n      container: {\n        paddingHorizontal: paddingHorizontal,\n        paddingVertical: paddingVertical,\n        backgroundColor: backgroundColor,\n      },\n      title: {\n        marginHorizontal: titleStyles.titleMarginHorizontal,\n        fontFamily: titleStyles.titleFontFamily,\n        fontSize: titleStyles.titleFontSize,\n        fontWeight: titleStyles.titleFontWeight,\n        lineHeight: titleStyles.titleLineHeight,\n        color: titleStyles.titleColor,\n      },\n      indicator: {\n        width: indicatorStyles.indicatorWidth,\n        backgroundColor: indicatorStyles.indicatorBackgroundColor,\n      },\n      icon: {\n        width: iconStyles.iconWidth,\n        height: iconStyles.iconHeight,\n        marginHorizontal: iconStyles.iconMarginHorizontal,\n        tintColor: iconStyles.iconTintColor,\n      },\n    };\n  };\n\n  private renderIcon = (style: StyleType): IconElement => {\n    const iconElement: IconElement = this.props.icon(style);\n\n    return React.cloneElement(iconElement, {\n      style: [style, iconElement.props.style],\n    });\n  };\n\n  private renderTitle = (style: StyleType): TextElement => {\n    const { title, titleStyle } = this.props;\n\n    return (\n      <Text style={[style, titleStyle]}>{title}</Text>\n    );\n  };\n\n  private renderAccessory = (style: StyleType): IconElement => {\n    return this.props.accessory(style);\n  };\n\n  private renderComponentChildren = (style: StyleType): React.ReactNodeArray => {\n    const { title, icon, accessory } = this.props;\n\n    return [\n      icon && this.renderIcon(style.icon),\n      title && this.renderTitle(style.title),\n      accessory && this.renderAccessory(style.icon),\n    ];\n  };\n\n  public render(): React.ReactNode {\n    const { themedStyle, style, ...restProps } = this.props;\n    const { container, indicator, ...restStyles } = this.getComponentStyles(themedStyle);\n    const [iconElement, textElement, accessoryElement] = this.renderComponentChildren(restStyles);\n\n    return (\n      <TouchableOpacity\n        activeOpacity={1.0}\n        {...restProps}\n        style={[styles.container, container, style]}\n        onPress={this.onPress}\n        onPressIn={this.onPressIn}\n        onPressOut={this.onPressOut}\n        onLongPress={this.onLongPress}>\n        <View style={[styles.indicator, indicator]}/>\n        <View style={styles.subContainer}>\n          {iconElement}\n          {textElement}\n        </View>\n        {accessoryElement}\n      </TouchableOpacity>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n  subContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  indicator: {\n    ...StyleSheet.absoluteFillObject,\n    zIndex: 2,\n  },\n});\n\nexport const MenuItem = styled<MenuItemProps>(MenuItemComponent);\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Interaction } from '@kitten/theme';\nimport {\n  MenuItem as RNMenuItem,\n  MenuItemElement as RNMenuItemElement,\n  MenuItemProps as RNMenuItemProps,\n  // @ts-ignore\n} from './menuItem.component.tsx';\nimport {\n  WebEventResponder,\n  WebEventResponderCallbacks,\n  WebEventResponderInstance,\n} from '../support/services';\n\nexport type MenuItemProps = RNMenuItemProps & WebEventResponderCallbacks;\nexport type MenuItemElement = React.ReactElement<MenuItemProps>;\n\nexport class MenuItem extends React.Component<MenuItemProps> implements WebEventResponderCallbacks {\n\n  private menuItemRef: React.RefObject<any> = React.createRef();\n  private webEventResponder: WebEventResponderInstance = WebEventResponder.create(this);\n\n  public onMouseEnter = (): void => {\n    this.menuItemRef.current.props.dispatch([Interaction.HOVER]);\n\n    if (this.props.onMouseEnter) {\n      this.props.onMouseEnter();\n    }\n  };\n\n  public onMouseLeave = (): void => {\n    this.menuItemRef.current.props.dispatch([]);\n\n    if (this.props.onMouseLeave) {\n      this.props.onMouseLeave();\n    }\n  };\n\n  public onFocus = (): void => {\n    this.menuItemRef.current.props.dispatch([Interaction.FOCUSED]);\n\n    if (this.props.onFocus) {\n      this.props.onFocus();\n    }\n  };\n\n  public onBlur = (): void => {\n    this.menuItemRef.current.props.dispatch([]);\n\n    if (this.props.onBlur) {\n      this.props.onBlur();\n    }\n  };\n\n  public render(): RNMenuItemElement {\n    const { textStyle, ...restProps } = this.props;\n\n    return (\n      <RNMenuItem\n        {...restProps}\n        {...this.webEventResponder.eventHandlers}\n        ref={this.menuItemRef}\n        style={[textStyle, styles.element]}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  element: {\n    // @ts-ignore\n    outlineWidth: 0,\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  Animated,\n  GestureResponderEvent,\n  ImageProps,\n  StyleSheet,\n  TouchableOpacityProps,\n  View,\n} from 'react-native';\nimport {\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport {\n  MenuItem,\n  MenuItemElement,\n  MenuItemType,\n} from './menuItem.component';\nimport {\n  MeasureNode,\n  MeasureNodeProps,\n  MeasureResult,\n  MeasuringElementProps,\n} from '../popover/measure.component';\nimport { Chevron } from '../support/components';\nimport { DividerElement } from '../divider/divider.component';\n\ninterface ComponentProps {\n  item: MenuItemType;\n  selectedIndex: number;\n  divider?: DividerElement;\n  onSelect?: (index: number, event?: GestureResponderEvent) => void;\n}\n\ninterface ComponentState {\n  subItemsVisible: boolean;\n  subItemsHeight: number;\n}\n\nexport type SubMenuProps = ComponentProps & StyledComponentProps & TouchableOpacityProps;\nexport type SubMenuElement = React.ReactElement<SubMenuProps>;\ntype OnPressHandler = (index: number, event?: GestureResponderEvent) => void;\ntype IconElement = React.ReactElement<ImageProps>;\n\nconst MAIN_ITEM_KEY: string = 'Main Item';\nconst DIVIDER_ELEMENT_KEY: string = 'Divider';\nconst SUB_ITEMS_MEASURE_TAG: string = 'Sub Items';\n\nclass SubMenuComponent extends React.Component<SubMenuProps, ComponentState> {\n\n  static styledComponentName: string = 'SubMenu';\n\n  public state: ComponentState = {\n    subItemsVisible: false,\n    subItemsHeight: 0,\n  };\n\n  private subItemsAnimation: Animated.Value = new Animated.Value(0);\n  private iconAnimation: Animated.Value = new Animated.Value(-180);\n\n  public componentDidUpdate(prevProps: SubMenuProps, prevState: ComponentState): void {\n    if (prevState.subItemsVisible !== this.state.subItemsVisible) {\n      if (this.state.subItemsVisible) {\n        this.subItemsExpandAnimate(this.state.subItemsHeight);\n        this.animateIcon(0);\n      } else {\n        this.subItemsExpandAnimate(0);\n        this.animateIcon(-180);\n      }\n    }\n  }\n\n  private subItemsExpandAnimate = (toValue: number): void => {\n    Animated.spring(this.subItemsAnimation, {\n      toValue: toValue,\n    }).start();\n  };\n\n  private animateIcon = (toValue: number): void => {\n    Animated.timing(this.iconAnimation, {\n      toValue: toValue,\n      duration: 200,\n    }).start();\n  };\n\n  private onMainItemPress = (): void => {\n    const subItemsVisible: boolean = !this.state.subItemsVisible;\n\n    this.setState({ subItemsVisible });\n  };\n\n  private onSubItemPress = (index: number, event: GestureResponderEvent): void => {\n    if (this.props.onSelect) {\n      this.props.onSelect(index, event);\n    }\n  };\n\n  private getComponentStyles = (style: StyleType): StyleType => {\n    return {\n      subContainer: {\n        paddingHorizontal: style.subItemsPaddingHorizontal,\n      },\n    };\n  };\n\n  private onSubMenuMeasure = (result: MeasureResult): void => {\n    const subItemsHeight: number = result[SUB_ITEMS_MEASURE_TAG].size.height;\n\n    this.setState({ subItemsHeight });\n  };\n\n  private getIsSelected = (item: MenuItemType): boolean => {\n    const { selectedIndex } = this.props;\n\n    return selectedIndex === item.menuIndex;\n  };\n\n  private isMainItemDividerExist = (): boolean => {\n    const { divider } = this.props;\n    const { subItemsVisible } = this.state;\n\n    return subItemsVisible && divider !== null;\n  };\n\n  private isSubItemDividerExist = (item: MenuItemType, index: number): boolean => {\n    const { divider } = this.props;\n\n    return (index !== item.subItems.length - 1) && (divider !== null);\n  };\n\n  private renderDivider = (): DividerElement => {\n    const { divider } = this.props;\n\n    return divider && React.cloneElement(divider, {\n      key: DIVIDER_ELEMENT_KEY,\n    });\n  };\n\n  private renderMainItemAccessory = (style: StyleType): IconElement => {\n    const rotateInterpolate = this.iconAnimation.interpolate({\n      inputRange: [-180, 0],\n      outputRange: ['-180deg', '0deg'],\n    });\n    const animatedStyle: StyleType = { transform: [{ rotate: rotateInterpolate }] };\n\n    return (\n      <Chevron\n        style={[style, animatedStyle]}\n        isAnimated={true}\n      />\n    );\n  };\n\n  private renderMenuItem = (item: MenuItemType,\n                            isMainItem: boolean,\n                            index: number | string): MenuItemElement => {\n\n    const onPressHandler: OnPressHandler = isMainItem ? this.onMainItemPress : this.onSubItemPress;\n    const mainMenuItemAccessory = isMainItem ? this.renderMainItemAccessory : null;\n\n    return (\n      <MenuItem\n        {...item}\n        key={index}\n        accessory={mainMenuItemAccessory}\n        onPress={onPressHandler}\n      />\n    );\n  };\n\n  private renderSubItemsInvisible = (subItems: React.ReactNode): React.ReactElement<MeasureNodeProps> => {\n    const measuringProps: MeasuringElementProps = { tag: SUB_ITEMS_MEASURE_TAG };\n\n    return (\n      <MeasureNode onResult={this.onSubMenuMeasure}>\n        <View\n          {...measuringProps}\n          pointerEvents='none'\n          key={SUB_ITEMS_MEASURE_TAG}\n          style={styles.invisibleMenu}>\n          {subItems}\n        </View>\n      </MeasureNode>\n    );\n  };\n\n  private renderSubItems = (): React.ReactFragment => {\n    const { item, themedStyle, divider } = this.props;\n\n    return item.subItems.map((sub: MenuItemType, index: number) => {\n      const { subContainer } = this.getComponentStyles(themedStyle);\n      const isSelected: boolean = this.getIsSelected(sub);\n\n      const element: MenuItemElement = React.cloneElement(this.renderMenuItem(sub, false, index), {\n        style: subContainer,\n        selected: isSelected,\n      });\n      const dividerElement: DividerElement = this.isSubItemDividerExist(item, index) ?\n        this.renderDivider() : null;\n\n      return (\n        <React.Fragment key={index}>\n          {element}\n          {dividerElement}\n        </React.Fragment>\n      );\n    });\n  };\n\n  private renderComponentChildren = (): React.ReactNodeArray => {\n    const { item } = this.props;\n\n    return [\n      this.renderMenuItem(item, true, MAIN_ITEM_KEY),\n      this.renderSubItems(),\n      this.isMainItemDividerExist() ? this.renderDivider() : null,\n    ];\n  };\n\n  public render(): React.ReactFragment {\n    const { subItemsVisible } = this.state;\n    const [mainItem, subItems, divider] = this.renderComponentChildren();\n    const invisibleSubs: React.ReactElement<MeasureNodeProps> = this.renderSubItemsInvisible(subItems);\n\n    const animatedStyle: StyleType = { height: this.subItemsAnimation };\n\n    return (\n      <React.Fragment>\n        {mainItem}\n        {divider}\n        <Animated.View style={animatedStyle}>\n          {subItemsVisible && subItems}\n        </Animated.View>\n        {invisibleSubs}\n      </React.Fragment>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  invisibleMenu: {\n    opacity: 0,\n    position: 'absolute',\n  },\n});\n\nexport const SubMenu = styled<SubMenuProps>(SubMenuComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { MenuItemType } from './menuItem.component';\n\n/**\n * Support service for the menu component. Can be expanded.\n */\n\nexport class MenuService {\n\n  /**\n   * Makes custom indexes for the MenuItems array for proper handling group items.\n   *\n   * @param {ReadonlyArray<MenuItemType>} data\n   * @returns {MenuItemType[]} pack by name\n   */\n  public setIndexes(data: ReadonlyArray<MenuItemType>): MenuItemType[] {\n    let tempIndex: number = 0;\n    return data.map((item: MenuItemType) => {\n      if (!item.subItems || item.subItems.length === 0) {\n        item.menuIndex = tempIndex;\n        tempIndex = tempIndex + 1;\n      } else {\n        item.subItems = item.subItems.map((sub: MenuItemType) => {\n          sub.menuIndex = tempIndex;\n          tempIndex = tempIndex + 1;\n          return sub;\n        });\n      }\n      return item;\n    });\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  ListRenderItemInfo,\n  GestureResponderEvent,\n} from 'react-native';\nimport {\n  styled,\n  StyledComponentProps,\n} from '@kitten/theme';\nimport {\n  List,\n  ListProps,\n} from '../list/list.component';\nimport {\n  Divider,\n  DividerElement,\n} from '../divider/divider.component';\nimport {\n  MenuItem,\n  MenuItemType,\n  MenuItemElement,\n  MenuItemProps,\n} from './menuItem.component';\nimport { SubMenu } from './subMenu.component';\nimport { MenuService } from './menu.service';\n\ninterface ComponentProps {\n  selectedIndex?: number;\n  onSelect: (index: number, event?: GestureResponderEvent) => void;\n}\n\nexport type MenuProps = StyledComponentProps & ComponentProps & Omit<ListProps, 'renderItem'>;\nexport type MenuElement = React.ReactElement<MenuProps>;\n\n/**\n * `Menu` renders vertical list of `MenuItems`.\n *\n * @extends React.Component\n *\n * @property {string} appearance - Determines the appearance of the component.\n * Can be `default` or `noDivider`.\n * Default is `default`.\n *\n * @property {MenuItemType[]} data - Determines menu items.\n *\n * @property {number} selectedIndex - The index of selected item.\n *\n * @property {(index: number, event?: GestureResponderEvent) => void} onSelect - Fires when\n * selected item is changed.\n *\n * @property {Omit<ListProps, 'renderItem'>} ...ListProps - Any props applied to List component, excluding `renderItem`.\n *\n * @overview-example MenuSimpleUsage\n *\n * @overview-example MenuAppearance\n *\n * @overview-example MenuWithSubMenu\n *\n * @example MenuWithIcons\n *\n * @example MenuInlineStyling\n */\nclass MenuComponent extends React.Component<MenuProps> {\n\n  static styledComponentName: string = 'Menu';\n\n  private service: MenuService = new MenuService();\n\n  private onSelect = (selectedIndex: number, event: GestureResponderEvent): void => {\n    if (this.props.onSelect) {\n      this.props.onSelect(selectedIndex, event);\n    }\n  };\n\n  private isDividerAbsent = (): boolean => {\n    const { appearance } = this.props;\n\n    return appearance !== 'noDivider';\n  };\n\n  private areThereSubItems = (item: MenuItemProps): boolean => {\n    return item.subItems && item.subItems.length !== 0;\n  };\n\n  private getIsSelected = (item: MenuItemType): boolean => {\n    const { selectedIndex } = this.props;\n\n    return selectedIndex === item.menuIndex;\n  };\n\n  private renderMenuItem = (info: ListRenderItemInfo<MenuItemProps>): MenuItemElement => {\n    const { selectedIndex } = this.props;\n    const isSelected: boolean = this.getIsSelected(info.item);\n\n    return this.areThereSubItems(info.item) ? (\n      <SubMenu\n        item={info.item}\n        selectedIndex={selectedIndex}\n        divider={this.renderDivider()}\n        onSelect={this.onSelect}\n      />\n    ) : (\n      <MenuItem\n        {...info.item}\n        selected={isSelected}\n        onPress={this.onSelect}\n      />\n    );\n  };\n\n  private renderDivider = (): DividerElement => {\n    return this.isDividerAbsent() && (\n      <Divider/>\n    );\n  };\n\n  public render(): React.ReactNode {\n    const { appearance, data, ...restProps } = this.props;\n    const items: MenuItemType[] = this.service.setIndexes(data);\n\n    return (\n      <List\n        ItemSeparatorComponent={this.renderDivider}\n        renderItem={this.renderMenuItem}\n        data={items}\n        {...restProps}\n      />\n    );\n  }\n}\n\nexport const Menu = styled<MenuProps>(MenuComponent);\n","import React from 'react';\nimport {\n  styled,\n  StyledComponentProps,\n} from '@kitten/theme';\nimport {\n  Menu,\n  MenuElement,\n  MenuProps,\n} from '../menu/menu.component';\nimport { MenuItemType } from '../menu/menuItem.component';\n\nexport type DrawerHeaderElement = React.ReactElement<any>;\nexport type DrawerFooterElement = React.ReactElement<any>;\n\ninterface ComponentProps {\n  header?: () => DrawerHeaderElement;\n  footer?: () => DrawerFooterElement;\n}\n\nexport type DrawerProps = StyledComponentProps & ComponentProps & MenuProps;\nexport type DrawerElement = React.ReactElement<DrawerProps>;\n\n/**\n * Styled `Navigation Drawer` component. The principle of rendering a `Drawer` is the same as a rendering a List.\n *\n * @extends React.Component\n *\n * @property {MenuItemType[]} data - Determines the items displayed in drawer menu.\n *\n * @property {string} appearance - Determines the appearance of the component.\n * Can be `default` or `noDivider`.\n * Default is `default`.\n *\n * @property {() => DrawerHeaderElement} header - Determines the function to render a header. Optional.\n *\n * @property {() => DrawerFooterElement} footer - Determines the function to render a footer. Optional.\n *\n * @property {(index: number, event: GestureResponderEvent) => void} onSelect - Determines the function to handle\n * menu item press.\n *\n * @property {MenuProps} ...MenuProps - Any props applied to Menu component.\n *\n * @overview-example DrawerSimpleUsage\n *\n * @overview-example Using with React Navigation\n *\n * ```\n * import React from 'react';\n * import { createAppContainer, SafeAreaView } from 'react-navigation';\n * import { createDrawerNavigator } from 'react-navigation-drawer';\n * import { Drawer, Layout, Text } from 'react-native-ui-kitten';\n *\n * // React Navigation also requires installing additional dependencies:\n * //\n * // npm i react-navigation react-navigation-drawer react-native-reanimated react-native-gesture-handler\n * //\n * // Then, install it for ios:\n * //\n * // cd ./ios && pod install\n *\n * const HomeScreen = () => (\n *   <Layout style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n *     <Text category='h1'>HOME</Text>\n *   </Layout>\n * );\n *\n * const SettingsScreen = () => (\n *   <Layout style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n *     <Text category='h1'>SETTINGS</Text>\n *   </Layout>\n * );\n *\n * const DrawerComponent = ({ navigation }) => {\n *\n *   const onSelect = (index) => {\n *     const { [index]: selectedTabRoute } = navigation.state.routes;\n *     navigation.navigate(selectedTabRoute.routeName);\n *   };\n *\n *   return (\n *     <SafeAreaView>\n *       <Drawer data={[{ title: 'Home' }, { title: 'Settings' }]} onSelect={onSelect} />\n *     </SafeAreaView>\n *   );\n * };\n *\n * const DrawerNavigator = createDrawerNavigator({\n *   Home: HomeScreen,\n *   Settings: SettingsScreen,\n * }, {\n *   contentComponent: DrawerComponent,\n * });\n *\n * export const AppNavigator = createAppContainer(DrawerNavigator);\n * ```\n *\n * @overview-example DrawerWithIcons\n *\n * @overview-example DrawerHeader\n *\n * @overview-example DrawerFooter\n *\n * @example DrawerCustomHeader\n *\n * @example DrawerNotificationBadgeItem\n */\nclass DrawerComponent extends React.Component<DrawerProps> {\n\n  static styledComponentName: string = 'Drawer';\n\n  private renderHeader = (): DrawerHeaderElement => {\n    return this.props.header();\n  };\n\n  private renderFooter = (): DrawerFooterElement => {\n    return this.props.footer();\n  };\n\n  private renderMenu = (): MenuElement => {\n    const { style, header, footer, themedStyle, ...restProps } = this.props;\n\n    return (\n      <Menu\n        style={themedStyle}\n        showsVerticalScrollIndicator={false}\n        bounces={false}\n        {...restProps}\n      />\n    );\n  };\n\n  private renderComponentChildren = (): React.ReactNodeArray => {\n    const { header, footer } = this.props;\n\n    return [\n      header && this.renderHeader(),\n      this.renderMenu(),\n      footer && this.renderFooter(),\n    ];\n  };\n\n  public render(): React.ReactFragment {\n    const [header, menu, footer] = this.renderComponentChildren();\n\n    return (\n      <React.Fragment>\n        {header}\n        {menu}\n        {footer}\n      </React.Fragment>\n    );\n  }\n}\n\nexport const Drawer = styled<DrawerProps>(DrawerComponent);\n","import React from 'react';\nimport {\n  ListItem,\n  ListItemProps,\n  ListItemElement,\n} from '../list/listItem.component';\n\nexport type DrawerHeaderFooterProps = Partial<ListItemProps>;\nexport type DrawerHeaderFooterElement = ListItemElement;\n\n/**\n * `DrawerHeaderFooter` is a support component for `Drawer`.\n * Designed to be used as Header or Footer of `Drawer`.\n *\n * @extends React.Component\n *\n * @property {string} title - Determines the title of the DrawerHeaderFooter.\n *\n * @property {string} description - Determines the description of the DrawerHeaderFooter's title.\n *\n * @property {StyleProp<TextStyle>} titleStyle - Customizes title style.\n *\n * @property {StyleProp<TextStyle>} descriptionStyle - Customizes description style.\n *\n * @property {React.ReactNode} children - Determines React Children of the component.\n *\n * @property {(style: StyleType, index: number) => React.ReactElement<any>} accessory - Determines the accessory of the\n * component.\n *\n * @property {(style: StyleType, index: number) => React.ReactElement<ImageProps>} icon - Determines the icon of the\n * component.\n *\n * @property {(index: number, event: GestureResponderEvent) => React.ReactElement<ImageProps>} onPress - Emits when\n * component is pressed.\n *\n * @property {ListItemProps} ...ListItemProps - Any props applied to ListItem component.\n *\n * @overview-example DrawerHeaderFooterSimpleUsage\n *\n * @overview-example DrawerHeaderFooterWithAccessory\n *\n * @example DrawerHeaderFooterWithExternalSourceIcon\n *\n * @example DrawerHeaderFooterInlineStyling\n */\nexport class DrawerHeaderFooter extends React.Component<DrawerHeaderFooterProps> {\n\n  public render(): DrawerHeaderFooterElement {\n    return (\n      <ListItem {...this.props} />\n    );\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  GestureResponderEvent,\n  StyleSheet,\n  TextStyle,\n  TouchableOpacity,\n  TouchableOpacityProps,\n  View,\n} from 'react-native';\nimport {\n  Interaction,\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport {\n  Text,\n  TextProps,\n} from '../text/text.component';\nimport { CheckBox } from '../checkbox/checkbox.component';\nimport { TouchableTypeReturningProps } from '../support/typings';\n\ntype TextElement = React.ReactElement<TextProps>;\ntype ItemElement = React.ReactElement<TouchableOpacityProps>;\n\nexport interface SelectOptionType {\n  text: string;\n  textStyle?: TextStyle;\n  disabled?: boolean;\n  items?: SelectOptionType[];\n}\n\nexport interface ComponentProps {\n  item: SelectOptionType;\n  selected?: boolean;\n  indeterminate?: boolean;\n  multiSelect?: boolean;\n}\n\nexport type SelectOptionProps = ComponentProps & StyledComponentProps & TouchableTypeReturningProps<SelectOptionType>;\nexport type SelectOptionElement = React.ReactElement<SelectOptionProps>;\n\nclass SelectOptionComponent extends React.Component<SelectOptionProps> {\n\n  static styledComponentName: string = 'SelectOption';\n\n  private onPress = (event: GestureResponderEvent): void => {\n    this.props.dispatch([]);\n    this.props.onPress(this.props.item, event);\n  };\n\n  private onMultiSelectItemPress = (value: boolean): void => {\n    this.onPress(null);\n  };\n\n  private onPressIn = (event: GestureResponderEvent): void => {\n    this.props.dispatch([Interaction.ACTIVE]);\n\n    if (this.props.onPressIn) {\n      this.props.onPressIn(this.props.item, event);\n    }\n  };\n\n  private onPressOut = (event: GestureResponderEvent): void => {\n    this.props.dispatch([]);\n\n    if (this.props.onPressOut) {\n      this.props.onPressOut(this.props.item, event);\n    }\n  };\n\n  private onLongPress = (event: GestureResponderEvent): void => {\n    if (this.props.onLongPress) {\n      this.props.onLongPress(this.props.item, event);\n    }\n  };\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const {\n      textColor,\n      textFontFamily,\n      textFontSize,\n      textFontWeight,\n      textLineHeight,\n      textMarginHorizontal,\n      ...containerStyles\n    } = source;\n\n    return {\n      container: containerStyles,\n      text: {\n        color: textColor,\n        fontFamily: textFontFamily,\n        fontSize: textFontSize,\n        fontWeight: textFontWeight,\n        lineHeight: textLineHeight,\n        marginHorizontal: textMarginHorizontal,\n      },\n    };\n  };\n\n  private renderTextElement = (style: TextStyle): TextElement => {\n    return (\n      <Text style={[style, styles.text, this.props.item.textStyle]}>\n        {this.props.item.text}\n      </Text>\n    );\n  };\n\n  private renderDefaultItem = (): ItemElement => {\n    const { themedStyle, style, item, ...restProps } = this.props;\n    const { container, text } = this.getComponentStyle(themedStyle);\n    const textElement: TextElement = this.renderTextElement(text);\n\n    return (\n      <TouchableOpacity\n        activeOpacity={1.0}\n        {...restProps}\n        style={[styles.container, container, style]}\n        onPress={this.onPress}\n        onPressIn={this.onPressIn}\n        onPressOut={this.onPressOut}\n        onLongPress={this.onLongPress}>\n        {textElement}\n      </TouchableOpacity>\n    );\n  };\n\n  private renderMultiSelectItem = (): ItemElement => {\n    const { style, themedStyle, selected, disabled, indeterminate, item, ...restProps } = this.props;\n    const { container, text } = this.getComponentStyle(themedStyle);\n\n    return (\n      <View\n        {...restProps}\n        style={[styles.container, container, style]}>\n        <CheckBox\n          text={item.text}\n          textStyle={[text, item.textStyle, styles.multiSelectText]}\n          disabled={disabled}\n          checked={selected}\n          indeterminate={indeterminate}\n          onChange={this.onMultiSelectItemPress}\n        />\n      </View>\n    );\n  };\n\n  public render(): React.ReactNode {\n    return this.props.multiSelect ? this.renderMultiSelectItem() : this.renderDefaultItem();\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  icon: {},\n  text: {},\n  multiSelectText: {\n    width: '100%',\n  },\n});\n\nexport const SelectOption = styled<SelectOptionProps>(SelectOptionComponent);\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Interaction } from '@kitten/theme';\nimport {\n  SelectOption as RNSelectOption,\n  SelectOptionElement as RNSelectOptionElement,\n  SelectOptionProps as RNSelectOptionProps,\n  // @ts-ignore\n} from './selectOption.component.tsx';\nimport {\n  WebEventResponder,\n  WebEventResponderCallbacks,\n  WebEventResponderInstance,\n} from '../support/services';\n\nexport type SelectOptionProps = RNSelectOptionProps & WebEventResponderCallbacks;\nexport type SelectOptionElement = React.ReactElement<SelectOptionProps>;\n\nexport class SelectOption extends React.Component<SelectOptionProps> implements WebEventResponderCallbacks {\n\n  private selectOptionRef: React.RefObject<any> = React.createRef();\n  private webEventResponder: WebEventResponderInstance = WebEventResponder.create(this);\n\n  public onMouseEnter = (): void => {\n    this.selectOptionRef.current.props.dispatch([Interaction.HOVER]);\n\n    if (this.props.onMouseEnter) {\n      this.props.onMouseEnter();\n    }\n  };\n\n  public onMouseLeave = (): void => {\n    this.selectOptionRef.current.props.dispatch([]);\n\n    if (this.props.onMouseLeave) {\n      this.props.onMouseLeave();\n    }\n  };\n\n  public onFocus = (): void => {\n    if (this.props.onFocus) {\n      this.props.onFocus();\n    }\n  };\n\n  public onBlur = (): void => {\n    if (this.props.onBlur) {\n      this.props.onBlur();\n    }\n  };\n\n  public render(): RNSelectOptionElement {\n    const { textStyle, ...restProps } = this.props;\n\n    return (\n      <RNSelectOption\n        {...restProps}\n        {...this.webEventResponder.eventHandlers}\n        ref={this.selectOptionRef}\n        style={[textStyle, styles.element]}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  element: {\n    // @ts-ignore\n    outlineWidth: 0,\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  ListRenderItemInfo,\n  View,\n} from 'react-native';\nimport {\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport {\n  SelectOption,\n  SelectOptionElement,\n  SelectOptionProps,\n  SelectOptionType,\n} from './selectOption.component';\nimport { SelectOption as SelectOptionProp} from './select.component';\nimport { SelectionStrategy } from './selection.strategy';\n\ninterface ComponentProps {\n  multiSelect?: boolean;\n  strategy: SelectionStrategy<SelectOptionProp>;\n  renderItem?: (item: ListRenderItemInfo<SelectOptionType>) => React.ReactElement<any>;\n}\n\ninterface MainItemStatus {\n  selected: boolean;\n  indeterminate: boolean;\n}\n\nexport type SelectGroupOptionProps = ComponentProps & Partial<SelectOptionProps> & StyledComponentProps;\nexport type SelectGroupOptionElement = React.ReactElement<SelectGroupOptionProps>;\n\nclass SelectGroupOptionComponent extends React.Component<SelectGroupOptionProps> {\n\n  static styledComponentName: string = 'SelectGroupOption';\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const {\n      itemPaddingHorizontal,\n      ...containerStyles\n    } = source;\n\n    return {\n      container: containerStyles,\n      item: {\n        paddingHorizontal: itemPaddingHorizontal,\n      },\n    };\n  };\n\n  private getMainItemStatus = (subItemsSelectedStatusArray: boolean[]): MainItemStatus => {\n    const someSelected: boolean = subItemsSelectedStatusArray\n      .some((item: boolean) => item === true);\n    const everySelected: boolean = subItemsSelectedStatusArray\n      .every((item: boolean) => item === true);\n\n    switch (true) {\n      case (someSelected && !everySelected):\n        return { selected: true, indeterminate: true };\n      case  !someSelected:\n        return { selected: false, indeterminate: false };\n      case everySelected:\n        return { selected: true, indeterminate: false };\n    }\n  };\n\n  private renderSubItem = (option: SelectOptionType, index: number): SelectOptionElement => {\n    const { item, renderItem, strategy, ...restProps } = this.props;\n    const returningOption: ListRenderItemInfo<SelectOptionType> = {\n      item: option,\n      index: index,\n      separators: null,\n    };\n    const selected: boolean = strategy.isSelected(option);\n\n    return renderItem ? renderItem(returningOption) : (\n      <SelectOption\n        {...restProps}\n        selected={selected}\n        item={option}\n      />\n    );\n  };\n\n  private renderSubItemsElements = (): SelectOptionElement[] => {\n    const { item, themedStyle } = this.props;\n    const { item: itemStyle } = this.getComponentStyle(themedStyle);\n\n    return item.items\n      .map((option: SelectOptionType, index: number) => {\n        const element: SelectOptionElement = this.renderSubItem(option, index);\n\n        return React.cloneElement(element, {\n          ...option,\n          style: [element.props.style, itemStyle],\n          key: index,\n        });\n      });\n  };\n\n  private renderMultiSelectMainElement = (subItemsElements: SelectOptionElement[]): SelectOptionElement => {\n    const { item, ...restProps } = this.props;\n    const subItemsSelectedStatusArray: boolean[] = subItemsElements\n      .map((subItem: SelectOptionElement) => subItem.props.selected);\n    const itemStatus: MainItemStatus = this.getMainItemStatus(subItemsSelectedStatusArray);\n\n    return (\n      <SelectOption\n        {...restProps}\n        {...itemStatus}\n        item={item}\n      />\n    );\n  };\n\n  private renderDefaultMainElement = (): SelectOptionElement => {\n    const { item } = this.props;\n\n    return (\n      <SelectOption\n        disabled={true}\n        item={item}\n      />\n    );\n  };\n\n  private renderMainElement = (subItemsElements: SelectOptionElement[]): SelectOptionElement => {\n    const { multiSelect } = this.props;\n\n    return multiSelect ? this.renderMultiSelectMainElement(subItemsElements) : this.renderDefaultMainElement();\n  };\n\n  public render(): SelectGroupOptionElement {\n    const { themedStyle } = this.props;\n    const { container } = this.getComponentStyle(themedStyle);\n    const subItemsElements: SelectOptionElement[] = this.renderSubItemsElements();\n    const mainElement: SelectOptionElement = this.renderMainElement(subItemsElements);\n\n    return (\n      <View style={container}>\n        {mainElement}\n        {subItemsElements}\n      </View>\n    );\n  }\n}\n\nexport const SelectGroupOption = styled<SelectGroupOptionProps>(SelectGroupOptionComponent);\n\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  StyleSheet,\n  ListRenderItemInfo,\n  GestureResponderEvent,\n} from 'react-native';\nimport {\n  List,\n  ListProps,\n} from '../list/list.component';\nimport {\n  SelectOption,\n  SelectOptionType,\n  SelectOptionElement,\n} from './selectOption.component';\nimport {\n  SelectGroupOption,\n  SelectGroupOptionElement,\n} from './selectGroupOption.component';\nimport { SelectOption as SelectOptionProp} from './select.component';\nimport { SelectionStrategy } from './selection.strategy';\n\ntype DefaultMenuItemElement = SelectOptionElement | SelectGroupOptionElement;\ntype MenuItemElement = DefaultMenuItemElement | React.ReactElement<any>;\n\nexport interface ComponentProps {\n  data: SelectOptionType[];\n  multiSelect?: boolean;\n  strategy: SelectionStrategy<SelectOptionProp>;\n  renderItem?: (item: ListRenderItemInfo<SelectOptionType>) => React.ReactElement<any>;\n  onSelect: (option: SelectOptionType, event?: GestureResponderEvent) => void;\n}\n\nexport type SelectOptionsListProps = Partial<ListProps> & ComponentProps;\nexport type SelectOptionsListElement = React.ReactElement<SelectOptionsListProps>;\n\nexport class SelectOptionsList extends React.Component<SelectOptionsListProps> {\n\n  private areThereSubItems = (dropdownItem: SelectOptionType): boolean => {\n    const { items } = dropdownItem;\n\n    return items && items.length !== 0;\n  };\n\n  private onSelect = (option: SelectOptionType, event?: GestureResponderEvent): void => {\n    this.props.onSelect(option, event);\n  };\n\n  private renderDefaultItem = (info: ListRenderItemInfo<SelectOptionType>): DefaultMenuItemElement => {\n    const { renderItem, multiSelect, strategy } = this.props;\n    const selected: boolean = strategy.isSelected(info.item);\n\n    return this.areThereSubItems(info.item) ? (\n      <SelectGroupOption\n        {...info}\n        strategy={strategy}\n        multiSelect={multiSelect}\n        renderItem={renderItem}\n        onPress={this.onSelect}\n      />\n    ) : (\n      <SelectOption\n        {...info}\n        disabled={info.item.disabled}\n        selected={selected}\n        multiSelect={multiSelect}\n        onPress={this.onSelect}\n      />\n    );\n  };\n\n  private renderItem = (info: ListRenderItemInfo<SelectOptionType>): MenuItemElement => {\n    const { renderItem } = this.props;\n\n    return renderItem ? renderItem(info) : this.renderDefaultItem(info);\n  };\n\n  public render(): SelectOptionsListElement {\n    const { style, ...restProps } = this.props;\n\n    return (\n      <List\n        {...restProps}\n        style={[styles.container, style]}\n        renderItem={this.renderItem}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {},\n});\n","import { SelectOptionType } from './selectOption.component';\nimport { KeyExtractorType } from './select.component';\n\nexport abstract class SelectionStrategy<S> {\n\n  public selectedOption: S;\n  protected keyExtractor: KeyExtractorType;\n\n  protected constructor(options: S, data: SelectOptionType[], keyExtractor?: KeyExtractorType) {\n\n    this.selectedOption = options;\n    this.keyExtractor = keyExtractor;\n    this.verifyData(data);\n  }\n\n  public abstract isSelected(item: SelectOptionType): boolean;\n\n  public abstract select(option: SelectOptionType, callback?: () => void): S;\n\n  public abstract getPlaceholder(placeholder: string): string;\n\n  protected abstract verifyData(data: SelectOptionType[]): void;\n\n  protected compareOptions(option1: SelectOptionType, option2: SelectOptionType): boolean {\n    if (!this.keyExtractor) {\n      return option1 === option2;\n    } else {\n      return (option1 && option2) && this.keyExtractor(option1) === this.keyExtractor(option2);\n    }\n  }\n\n  protected hasOptionSubItems(option: SelectOptionType): boolean {\n    return option.items && option.items.length !== 0;\n  }\n\n  protected processData(data: SelectOptionType[]): string[] {\n    return data\n      .reduce((acc: string[], current: SelectOptionType) => {\n        if (this.hasOptionSubItems(current)) {\n          const subTexts: string[] = current.items.map((item: SelectOptionType) => {\n            return item.text;\n          });\n          return acc.concat(subTexts);\n        } else {\n          acc.push(current.text);\n          return acc;\n        }\n      }, []);\n  }\n}\n\nexport class MultiSelectStrategy extends SelectionStrategy<SelectOptionType[]> {\n\n  constructor(options: SelectOptionType | SelectOptionType[],\n              data: SelectOptionType[],\n              keyExtractor?: KeyExtractorType) {\n\n    if (Array.isArray(options)) {\n      super(options, data, keyExtractor);\n    }\n  }\n\n  public select(option: SelectOptionType, callback?: () => void): SelectOptionType[] {\n    const subOptionsExist: boolean = this.hasOptionSubItems(option);\n\n    if (subOptionsExist) {\n      this.selectOptionWithSubOptions(option);\n    } else {\n      this.selectDefaultOption(option);\n    }\n\n    return this.selectedOption;\n  }\n\n  private selectDefaultOption(option: SelectOptionType): void {\n    const optionAlreadyExist: boolean = this.selectedOption\n      .some((item: SelectOptionType) => {\n        return this.compareOptions(item, option);\n      });\n    if (optionAlreadyExist) {\n      this.removeOption(option);\n    } else {\n      this.selectedOption.push(option);\n    }\n  }\n\n  private selectOptionWithSubOptions(option: SelectOptionType): void {\n    const subOptionsAlreadyExist: boolean = this.selectedOption\n      .some((item: SelectOptionType) => {\n        return option.items\n          .some((subItem: SelectOptionType) => {\n            return subItem === item;\n          });\n      });\n\n    if (subOptionsAlreadyExist) {\n      option.items.forEach((subItem: SelectOptionType) => this.removeOption(subItem));\n    } else {\n      const enabledItems: SelectOptionType[] = option.items\n        .filter((item: SelectOptionType) => {\n          return !item.disabled;\n        });\n      this.selectedOption = this.selectedOption.concat(enabledItems);\n    }\n  }\n\n  public getPlaceholder(placeholder: string): string {\n    if (this.isSelectedOptionExist()) {\n      return this.selectedOption\n        .map((item: SelectOptionType) => {\n          return item && item.text;\n        })\n        .join(', ');\n    } else {\n      return placeholder;\n    }\n  }\n\n  public isSelected(item: SelectOptionType): boolean {\n    return this.selectedOption\n      .some((option: SelectOptionType) => {\n        return this.compareOptions(item, option);\n      });\n  }\n\n  private isSelectedOptionExist(): boolean {\n    return this.selectedOption && this.selectedOption.length !== 0;\n  }\n\n  private removeOption(option: SelectOptionType): void {\n    const index: number = this.selectedOption\n      .findIndex((item: SelectOptionType) => {\n        return this.compareOptions(item, option);\n      });\n    if (index !== -1) {\n      this.selectedOption.splice(index, 1);\n    }\n  }\n\n  protected verifyData(data: SelectOptionType[]): void {\n    const selectedItemsAreCorrect: boolean = this.processData(data).some((item: string) => {\n      return this.selectedOption.some((selected: SelectOptionType) => {\n        return selected.text === item;\n      });\n    });\n\n    if (!selectedItemsAreCorrect && this.selectedOption.length !== 0) {\n      const message: string = `Some Option doesn't exist in the data array or you ` +\n        'set Main group option selected.';\n      throw Error(message);\n    }\n  }\n}\n\nexport class SingleSelectStrategy extends SelectionStrategy<SelectOptionType> {\n\n  constructor(options: SelectOptionType | SelectOptionType[],\n              data: SelectOptionType[],\n              keyExtractor?: KeyExtractorType) {\n\n    if (!Array.isArray(options)) {\n      super(options, data, keyExtractor);\n    }\n  }\n\n  public select(option: SelectOptionType, callback?: () => void): SelectOptionType {\n    this.selectedOption = option;\n\n    if (callback) {\n      callback();\n    }\n\n    return this.selectedOption;\n  }\n\n  public getPlaceholder(placeholder: string): string {\n    if (this.selectedOption) {\n      return this.selectedOption.text;\n    } else {\n      return placeholder;\n    }\n  }\n\n  public isSelected(item: SelectOptionType): boolean {\n    if (this.hasOptionSubItems(item)) {\n      return item.items.some((option: SelectOptionType) => {\n        return this.isSelected(option);\n      });\n    } else {\n      return this.compareOptions(item, this.selectedOption);\n    }\n  }\n\n  protected verifyData(data: SelectOptionType[]): void {\n    const selectedItemsAreCorrect: boolean = this.processData(data).some((item: string) => {\n      if (this.selectedOption) {\n        return item === this.selectedOption.text;\n      }\n    });\n\n    if (!selectedItemsAreCorrect && this.selectedOption) {\n      const message: string = `Option \\\"${this.selectedOption.text}\\\" doesn't exist in the data array!`;\n      throw Error(message);\n    }\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  Animated,\n  GestureResponderEvent,\n  ImageProps,\n  ImageStyle,\n  ListRenderItemInfo,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  TouchableOpacity,\n  TouchableOpacityProps,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport {\n  Interaction,\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport {\n  Text,\n  TextElement,\n} from '../text/text.component';\nimport { Popover } from '../popover/popover.component';\nimport {\n  SelectOptionsList,\n  SelectOptionsListElement,\n} from './selectOptionsList.component';\nimport { SelectOptionType } from './selectOption.component';\nimport {\n  MeasureNode,\n  MeasureResult,\n  MeasuringElementProps,\n} from '../popover/measure.component';\nimport {\n  MultiSelectStrategy,\n  SelectionStrategy,\n  SingleSelectStrategy,\n} from './selection.strategy';\nimport {\n  allWithPrefix,\n  isValidString,\n} from '../support/services';\nimport { Chevron } from '../support/components';\n\ntype IconElement = React.ReactElement<ImageProps>;\ntype ControlElement = React.ReactElement<TouchableOpacityProps>;\ntype IconProp = (style: ImageStyle, visible: boolean) => IconElement;\ntype SelectChildren = [SelectOptionsListElement, TextElement, ControlElement];\n\nexport type SelectOption = Array<SelectOptionType> | SelectOptionType;\nexport type KeyExtractorType = (item: SelectOptionType) => string;\n\nconst MEASURED_CONTROL_TAG: string = 'Control';\n\ninterface ComponentProps {\n  data: SelectOptionType[];\n  multiSelect?: boolean;\n  selectedOption?: SelectOption;\n  textStyle?: StyleProp<TextStyle>;\n  placeholder?: string;\n  placeholderStyle?: StyleProp<TextStyle>;\n  label?: string;\n  labelStyle?: StyleProp<TextStyle>;\n  controlStyle?: StyleProp<ViewStyle>;\n  icon?: IconProp;\n  onSelect: (option: SelectOption, event?: GestureResponderEvent) => void;\n  status?: string;\n  renderItem?: (item: ListRenderItemInfo<SelectOptionType>) => React.ReactElement<any>;\n  keyExtractor?: KeyExtractorType;\n}\n\nexport type SelectProps = StyledComponentProps & TouchableOpacityProps & ComponentProps;\nexport type SelectElement = React.ReactElement<SelectProps>;\n\ninterface State {\n  visible: boolean;\n  optionsListWidth: number;\n}\n\n/**\n * Styled `Select` component. By default, the MultiSelect compares the items by reference.\n * To specify a field from the data object which will be used for the comparison,\n * implement the `keyExtractor` property.\n *\n * @extends React.Component\n *\n * @property {boolean} disabled - Determines whether component is disabled.\n * Default is `false`.\n *\n * @property {string} status - Determines the status of the component.\n * Can be `basic`, `primary`, `success`, `info`, `warning`, `danger` or `control`.\n * Default is `basic`.\n *\n * @property {string} size - Determines the size of the component.\n * Can be `small`, `medium` or `large`.\n * Default is `medium`.\n *\n * @property {boolean} multiSelect - Determines `multi-select` behavior of the Select component.\n *\n * @property {SelectOption} selectedOption - Determines selected option of the Select.\n * Can be `SelectOptionType` or `SelectOptionType[]` It depends on `multiSelect` property.\n *\n * @property {SelectOptionType[]} data - Determines items of the Select component.\n *\n * @property {(option: SelectOption, event?: GestureResponderEvent) => void} onSelect - Fires on option selection.\n * Returns selected option/options.\n *\n * @property {(item: ListRenderItemInfo<SelectOptionType>) => React.ReactElement<any>} renderItem - Property for\n * rendering custom select items.\n *\n * @property {StyleProp<TextStyle>} label - Determines the `label` of the component.\n *\n * @property {StyleProp<TextStyle>} placeholder - Determines the `placeholder` of the component.\n * By default is `Select Option`.\n *\n * @property {StyleProp<TextStyle>} labelStyle - Determines the style of the `label`.\n *\n * @property {StyleProp<TextStyle>} placeholderStyle - Determines the style of the `placeholder`.\n *\n * @property {StyleProp<TextStyle>} textStyle - Determines the style of the selected option/options text.\n *\n * @property {StyleProp<ViewStyle>} controlStyle - Determines the style of `control`.\n *\n * @property {(style: StyleType) => React.ReactElement<ImageProps>} icon - Determines icon of the component.\n *\n * @property {StyleProp<TextStyle>} textStyle - Customizes text style.\n *\n * @property {KeyExtractorType} keyExtractor - Used to extract a unique key for a given item;\n *\n * @property {TouchableOpacityProps} ...TouchableOpacityProps - Any props applied to TouchableOpacity component.\n *\n * @overview-example SelectSimpleUsage\n *\n * @overview-example SelectStatus\n *\n * @overview-example SelectMultiSelect\n *\n * @overview-example SelectWithGroups\n *\n * @overview-example SelectMultiPreselectedInline\n *\n * @overview-example SelectMultiPreselectedReference\n *\n * @example SelectCustomIcon\n *\n * @example SelectInlineStyling\n */\nclass SelectComponent extends React.Component<SelectProps, State> {\n\n  static styledComponentName: string = 'Select';\n  static defaultProps: Partial<SelectProps> = {\n    placeholder: 'Select Option',\n    multiSelect: false,\n  };\n\n  public state: State = {\n    visible: false,\n    optionsListWidth: 0,\n  };\n\n  private strategy: SelectionStrategy<SelectOption>;\n  private iconAnimation: Animated.Value;\n\n  constructor(props: SelectProps) {\n    super(props);\n    this.strategy = this.createSelectionStrategy();\n    this.iconAnimation = new Animated.Value(0);\n  }\n\n  public componentDidUpdate(): void {\n    this.strategy = this.createSelectionStrategy();\n  }\n\n  private onPress = (event: GestureResponderEvent): void => {\n    this.setVisibility();\n\n    if (this.props.onPress) {\n      this.props.onPress(event);\n    }\n  };\n\n  private onPressIn = (event: GestureResponderEvent): void => {\n    this.props.dispatch([Interaction.ACTIVE]);\n\n    if (this.props.onPressIn) {\n      this.props.onPressIn(event);\n    }\n  };\n\n  private onPressOut = (event: GestureResponderEvent): void => {\n    this.props.dispatch([]);\n\n    if (this.props.onPressOut) {\n      this.props.onPressOut(event);\n    }\n  };\n\n  private onItemSelect = (option: SelectOptionType, event: GestureResponderEvent): void => {\n    const selectedOption: SelectOption = this.strategy.select(option, this.setVisibility);\n    this.props.onSelect(selectedOption);\n  };\n\n  private onControlMeasure = (result: MeasureResult): void => {\n    const width: number = result[MEASURED_CONTROL_TAG].size.width;\n\n    this.setState({ optionsListWidth: width });\n  };\n\n  private createSelectionStrategy = (): SelectionStrategy<SelectOption> => {\n    const { multiSelect, selectedOption, keyExtractor, data } = this.props;\n\n    return multiSelect ?\n      new MultiSelectStrategy(selectedOption, data, keyExtractor) :\n      new SingleSelectStrategy(selectedOption, data, keyExtractor);\n  };\n\n  private setVisibility = (): void => {\n    const visible: boolean = !this.state.visible;\n\n    this.setState({ visible }, this.handleVisibleChange);\n  };\n\n  private handleVisibleChange = (): void => {\n    this.dispatchActive();\n    this.startIconAnimation();\n  };\n\n  private dispatchActive = (): void => {\n    const { visible } = this.state;\n    if (visible) {\n      this.props.dispatch([Interaction.ACTIVE]);\n    } else {\n      this.props.dispatch([]);\n    }\n  };\n\n  private startIconAnimation = (): void => {\n    const { visible } = this.state;\n    if (visible) {\n      this.animateIcon(-180);\n    } else {\n      this.animateIcon(0);\n    }\n  };\n\n  private animateIcon = (toValue: number): void => {\n    Animated.timing(this.iconAnimation, {\n      toValue: toValue,\n      duration: 200,\n    }).start();\n  };\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const {\n      backgroundColor,\n      borderColor,\n      borderWidth,\n      minHeight,\n      minWidth,\n      paddingHorizontal,\n      paddingVertical,\n      borderRadius,\n    } = source;\n\n    const iconStyles: StyleType = allWithPrefix(source, 'icon');\n    const textStyles: StyleType = allWithPrefix(source, 'text');\n    const placeholderStyles: StyleType = allWithPrefix(source, 'placeholder');\n    const optionsListStyles: StyleType = allWithPrefix(source, 'optionsList');\n    const labelStyle: StyleType = allWithPrefix(source, 'label');\n\n    return {\n      control: {\n        backgroundColor: backgroundColor,\n        borderColor: borderColor,\n        borderWidth: borderWidth,\n        minHeight: minHeight,\n        minWidth: minWidth,\n        paddingHorizontal: paddingHorizontal,\n        paddingVertical: paddingVertical,\n        borderRadius: borderRadius,\n      },\n      icon: {\n        height: iconStyles.iconHeight,\n        width: iconStyles.iconWidth,\n        marginHorizontal: iconStyles.iconMarginHorizontal,\n        tintColor: iconStyles.iconTintColor,\n      },\n      text: {\n        marginHorizontal: textStyles.textMarginHorizontal,\n        color: textStyles.textColor,\n        fontSize: textStyles.textFontSize,\n        fontWeight: textStyles.textFontWeight,\n        lineHeight: textStyles.textLineHeight,\n        fontFamily: textStyles.textFontFamily,\n      },\n      placeholder: {\n        marginHorizontal: placeholderStyles.placeholderMarginHorizontal,\n        color: placeholderStyles.placeholderColor,\n        fontSize: placeholderStyles.placeholderFontSize,\n        fontWeight: placeholderStyles.placeholderFontWeight,\n        lineHeight: placeholderStyles.placeholderLineHeight,\n        fontFamily: placeholderStyles.placeholderFontFamily,\n      },\n      optionsList: {\n        maxHeight: optionsListStyles.optionsListMaxHeight,\n        borderRadius: optionsListStyles.optionsListBorderRadius,\n        borderColor: optionsListStyles.optionsListBorderColor,\n        borderWidth: optionsListStyles.optionsListBorderWidth,\n      },\n      label: {\n        marginBottom: labelStyle.labelMarginBottom,\n        color: labelStyle.labelColor,\n        fontSize: labelStyle.labelFontSize,\n        fontWeight: labelStyle.labelFontWeight,\n        lineHeight: labelStyle.labelLineHeight,\n        fontFamily: labelStyle.labelFontFamily,\n      },\n    };\n  };\n\n  private renderLabelElement = (style: TextStyle): TextElement => {\n    const { label, labelStyle } = this.props;\n\n    return (\n      <Text style={[style, styles.label, labelStyle]}>\n        {label}\n      </Text>\n    );\n  };\n\n  private renderDefaultIconElement = (style: ImageStyle): IconElement => {\n    const rotateInterpolate = this.iconAnimation.interpolate({\n      inputRange: [-180, 0],\n      outputRange: ['-180deg', '0deg'],\n    });\n\n    const animatedStyle: StyleType = { transform: [{ rotate: rotateInterpolate }] };\n\n    return (\n      <Chevron\n        style={[style, animatedStyle]}\n        isAnimated={true}\n      />\n    );\n  };\n\n  private renderIconElement = (style: ImageStyle): IconElement => {\n    const iconElement = this.props.icon(style, this.state.visible);\n\n    return React.cloneElement(iconElement, {\n      style: [style, styles.icon, iconElement.props.style],\n    });\n  };\n\n  private renderTextElement = (valueStyle: TextStyle, placeholderStyle: TextStyle): TextElement => {\n    const { placeholder, textStyle } = this.props;\n    const value: string = this.strategy.getPlaceholder(placeholder);\n    const style: TextStyle = placeholder === value ? placeholderStyle : valueStyle;\n\n    return (\n      <Text\n        style={[style, styles.text, textStyle]}\n        numberOfLines={1}\n        ellipsizeMode='tail'>\n        {value}\n      </Text>\n    );\n  };\n\n  private renderOptionsListElement = (style: StyleType): SelectOptionsListElement => {\n    const { appearance, selectedOption, ...restProps } = this.props;\n    const additionalOptionsListStyle: StyleType = { width: this.state.optionsListWidth };\n\n    return (\n      <SelectOptionsList\n        {...restProps}\n        strategy={this.strategy}\n        key={0}\n        style={[styles.optionsList, style, additionalOptionsListStyle]}\n        bounces={false}\n        onSelect={this.onItemSelect}\n      />\n    );\n  };\n\n  private renderControlChildren = (style: StyleType): React.ReactNodeArray => {\n    const iconElement: IconElement = this.props.icon && this.renderIconElement(style.icon);\n\n    return [\n      iconElement || this.renderDefaultIconElement(style.icon),\n      this.renderTextElement(style.text, style.placeholder),\n    ];\n  };\n\n  private renderControlElement = (): ControlElement => {\n    const { themedStyle, controlStyle, ...restProps } = this.props;\n    const { control, ...childrenStyles } = this.getComponentStyle(themedStyle);\n    const [iconElement, textElement] = this.renderControlChildren(childrenStyles);\n\n    const measuringProps: MeasuringElementProps = { tag: MEASURED_CONTROL_TAG };\n\n    return (\n      <MeasureNode onResult={this.onControlMeasure}>\n        <TouchableOpacity\n          {...restProps}\n          {...measuringProps}\n          key={MEASURED_CONTROL_TAG}\n          activeOpacity={1.0}\n          style={[styles.control, control, controlStyle]}\n          onPress={this.onPress}\n          onPressIn={this.onPressIn}\n          onPressOut={this.onPressOut}>\n          {textElement}\n          {iconElement}\n        </TouchableOpacity>\n      </MeasureNode>\n    );\n  };\n\n  private renderComponentChildren = (style: StyleType): SelectChildren => {\n    return [\n      this.renderOptionsListElement(style.optionsList),\n      isValidString(this.props.label) && this.renderLabelElement(style.label),\n      this.renderControlElement(),\n    ];\n  };\n\n  public render(): SelectElement {\n    const { themedStyle, style } = this.props;\n    const componentStyle: StyleType = this.getComponentStyle(themedStyle);\n    const additionalOptionsListStyle: StyleType = { maxWidth: this.state.optionsListWidth };\n\n    const [optionsListElement, labelElement, controlElement] = this.renderComponentChildren(componentStyle);\n\n    return (\n      <View style={style}>\n        {labelElement}\n        <Popover\n          visible={this.state.visible}\n          content={optionsListElement}\n          style={additionalOptionsListStyle}\n          indicatorStyle={styles.indicator}\n          onBackdropPress={this.setVisibility}>\n          {controlElement}\n        </Popover>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  control: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n  text: {\n    flex: 1,\n  },\n  icon: {},\n  label: {},\n  indicator: {\n    width: 0,\n    height: 6,\n  },\n  optionsList: {\n    flexGrow: 0,\n  },\n});\n\nexport const Select = styled<SelectProps>(SelectComponent);\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Interaction } from '@kitten/theme';\nimport {\n  Select as RNSelect,\n  SelectElement as RNSelectElement,\n  SelectProps as RNSelectProps,\n  // @ts-ignore\n} from './select.component.tsx';\nimport {\n  WebEventResponder,\n  WebEventResponderCallbacks,\n  WebEventResponderInstance,\n} from '../support/services';\n\nexport type SelectProps = RNSelectProps & WebEventResponderCallbacks;\nexport type SelectElement = React.ReactElement<SelectProps>;\n\nexport class Select extends React.Component<SelectProps> implements WebEventResponderCallbacks {\n\n  private selectRef: React.RefObject<any> = React.createRef();\n  private webEventResponder: WebEventResponderInstance = WebEventResponder.create(this);\n\n  private get isVisible(): boolean {\n    return this.selectRef.current.state.visible;\n  }\n\n  public onMouseEnter = (): void => {\n    if (!this.isVisible) {\n      this.selectRef.current.props.dispatch([Interaction.HOVER]);\n    }\n\n    if (this.props.onMouseEnter) {\n      this.props.onMouseEnter();\n    }\n  };\n\n  public onMouseLeave = (): void => {\n    if (!this.isVisible) {\n      this.selectRef.current.props.dispatch([]);\n    }\n\n    if (this.props.onMouseLeave) {\n      this.props.onMouseLeave();\n    }\n  };\n\n  public onFocus = (): void => {\n    this.selectRef.current.props.dispatch([Interaction.FOCUSED]);\n\n    if (this.props.onFocus) {\n      this.props.onFocus();\n    }\n  };\n\n  public onBlur = (): void => {\n    this.selectRef.current.props.dispatch([]);\n\n    if (this.props.onBlur) {\n      this.props.onBlur();\n    }\n  };\n\n  public render(): RNSelectElement {\n    const { controlStyle, ...restProps } = this.props;\n\n    return (\n      <RNSelect\n        {...restProps}\n        {...this.webEventResponder.eventHandlers}\n        ref={this.selectRef}\n        controlStyle={[controlStyle, styles.element]}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  element: {\n    // @ts-ignore\n    outlineWidth: 0,\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nimport {\n  IconPack,\n  IconProvider,\n} from './type';\n\nfunction throwPackNotFoundError(name: string) {\n  const docRoot: string = 'https://akveo.github.io/react-native-ui-kitten/docs';\n\n  const message: string = [\n    `\\nIcon: Icon Pack '${name}' is not registered`,\n    'Using UI Kitten components is only possible with configuring ApplicationProvider.',\n    `📖 Documentation: ${docRoot}/guides/setting-up-icons`,\n  ].join('\\n');\n\n  throw Error(message);\n}\n\nfunction throwIconNotFoundError(name: string, pack: string) {\n  const docRoot: string = 'https://akveo.github.io/react-native-ui-kitten/docs';\n\n  const message: string = [\n    `\\nIcon: '${name}' icon is not registered in pack '${pack}'.`,\n    'Check icon name or consider switching icon pack.',\n    `📖 Documentation: ${docRoot}/guides/setting-up-icons`,\n  ].join('\\n');\n\n  throw Error(message);\n}\n\nexport interface RegisteredIcon<T> {\n  name: string;\n  pack: string;\n  icon: IconProvider<T>;\n}\n\ntype IconProps = any;\n\n/**\n * This service allows to register multiple icon packs to use them later within\n * `<Icon/>` component.\n */\nclass RegistryService {\n\n  protected packs: Map<string, IconPack<IconProps>> = new Map();\n  protected defaultPack: string;\n\n  /**\n   * Registers multiple icon packs and sets the first one as default if there is no default packs\n   *\n   * @param {IconPack[]} packs - array of icon packs\n   */\n  public register<T>(...packs: IconPack<T>[]) {\n    packs.forEach((pack: IconPack<IconProps>) => {\n      this.registerIconPack(pack);\n    });\n  }\n\n  /**\n   * Sets pack as default\n   *\n   * @param {string} name\n   * @throws {Error} if pack is nor registered\n   */\n  public setDefaultIconPack(name: string) {\n    if (!this.packs.has(name)) {\n      throwPackNotFoundError(name);\n    }\n\n    this.defaultPack = name;\n  }\n\n  /**\n   * @param {string} name\n   * @returns {IconPack} pack by name\n   */\n  public getIconPack<T>(name: string): IconPack<T> {\n    return this.packs.get(name);\n  }\n\n  /**\n   * @param {string} name - icon name\n   * @param {string} pack - pack name\n   * @throws {Error} if requested icon pack is not registered\n   * @returns {RegisteredIcon} - registered icon of a requested/default pack\n   */\n  public getIcon<T>(name: string, pack?: string): RegisteredIcon<T> {\n    const iconsPack: IconPack<T> = pack ? this.getPackOrThrow(pack) : this.getDefaultPack();\n\n    return {\n      name,\n      pack: iconsPack.name,\n      icon: this.getIconFromPack(name, iconsPack),\n    };\n  }\n\n  /**\n   * Registers single icon pack\n   *\n   * @param {IconPack} pack - icon pack to register\n   */\n  protected registerIconPack<T>(pack: IconPack<T>) {\n    this.packs.set(pack.name, pack);\n  }\n\n  protected getPackOrThrow<T>(name: string): IconPack<T> {\n    const pack: IconPack<IconProps> = this.packs.get(name);\n\n    if (!pack) {\n      throwPackNotFoundError(name);\n    }\n\n    return pack;\n  }\n\n  protected getDefaultPack<T>(): IconPack<T> {\n    return this.getIconPack(this.defaultPack);\n  }\n\n  protected getIconFromPack<T>(name: string, pack: IconPack<T>, shouldThrow = true): IconProvider<T> {\n    if (shouldThrow && !pack.icons[name]) {\n      throwIconNotFoundError(name, pack.name);\n    }\n\n    return pack.icons[name];\n  }\n}\n\nexport const IconRegistryService = new RegistryService();\n","import React from 'react';\nimport {\n  Animated,\n  StyleProp,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\nimport {\n  getIconAnimation,\n  IconAnimation,\n  IconAnimationRegistry,\n} from './iconAnimation';\nimport {\n  IconRegistryService,\n  RegisteredIcon,\n} from './service/iconRegistry.service';\nimport { AnimationConfig } from '../animation';\n\ninterface ComponentProps {\n  name: string;\n  pack?: string;\n  animation?: keyof IconAnimationRegistry;\n  animationConfig?: AnimationConfig;\n}\n\n// This is basically needed to avoid generics in required props\n// In general, could be SVGProps if using @ui-kitten/eva-icons or ImageProps if using Image.\ntype WrappedElementProps = any;\nexport type IconProps<T = WrappedElementProps> = ComponentProps & T;\nexport type IconElement<T = WrappedElementProps> = React.ReactElement<IconProps<T>>;\n\n/**\n * `Icon` component with animation support. Allows to render any ReactElement registered for a specific name.\n * Starting from UI Kitten 4.2, there is `@ui-kitten/eva-icons` module\n * that renders any icon from eva-icons package in `svg` format.\n * It allows easily use icons in any component that has `icon` prop\n *\n * @extends React.Component\n *\n * @method {(callback?: Animated.EndCallback) => void} startAnimation - Toggle animation to start.\n *\n * @method {() => void} stopAnimation - Toggle animation to stop.\n *\n * @property {string} name - Name of registered icon.\n *\n * @property {string} pack - Name of icon pack that is able to provide an icon for specified name.\n *\n * @property {string} animation - Animation name. Available `zoom`, `pulse` and `shake`. Default is `zoom`.\n *\n * @property {AnimationConfig} animationConfig - Determines animation config. Extends `Animated.AnimationConfig`.\n *\n * @overview-example IconSimpleUsage\n *\n * @overview-example IconWithinButton\n *\n * @overview-example IconWithinInput\n *\n * @overview-example IconExternalSource\n *\n * @overview-example IconAnimation\n *\n * @example IconAnimationInfinite\n *\n * @example IconInlineStyling\n */\nexport class Icon<T> extends React.Component<IconProps<T>> {\n\n  static defaultProps: Partial<IconProps> = {\n    animation: 'zoom',\n  };\n\n  private readonly animation: IconAnimation;\n\n  constructor(props: IconProps<T>) {\n    super(props);\n    this.animation = getIconAnimation(props.animation, props.animationConfig);\n  }\n\n  public componentWillUnmount(): void {\n    this.animation.release();\n  }\n\n  public startAnimation = (callback?: Animated.EndCallback): void => {\n    this.animation.start(callback);\n  };\n\n  public stopAnimation = (): void => {\n    this.animation.stop();\n  };\n\n  private getComponentStyle = (): StyleProp<ViewStyle> => {\n    return this.animation.toProps();\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { name, pack, ...restProps } = this.props;\n    const registeredIcon: RegisteredIcon<T> = IconRegistryService.getIcon(name, pack);\n\n    return (\n      <Animated.View {...this.getComponentStyle()}>\n        {registeredIcon.icon.toReactElement(restProps as T)}\n      </Animated.View>\n    );\n  }\n}\n","import { ViewStyle } from 'react-native';\nimport {\n  Animation,\n  PulseAnimation,\n  ShakeAnimation,\n  ZoomAnimation,\n  AnimationConfig,\n} from '../animation';\n\nexport type IconAnimation = Animation<any, ViewStyle>;\n\nexport interface IconAnimationRegistry {\n  zoom: IconAnimation;\n  pulse: IconAnimation;\n  shake: IconAnimation;\n}\n\nexport function getIconAnimation(animation?: keyof IconAnimationRegistry, config?: AnimationConfig): IconAnimation {\n  switch (animation) {\n    case 'zoom':\n      return new ZoomAnimation(config);\n    case 'pulse':\n      return new PulseAnimation(config);\n    case 'shake':\n      return new ShakeAnimation(config);\n  }\n}\n","import React from 'react';\nimport { IconRegistryService } from './service/iconRegistry.service';\nimport { IconPack } from './service/type';\n\ntype IconsProp = IconPack<any> | IconPack<any>[];\n\nexport interface IconRegistryProps {\n  icons: IconsProp;\n  defaultIcons?: string;\n}\n\nexport type IconRegistryElement = React.ReactElement<IconRegistryProps>;\n\n/**\n * Icon Registry component. Registers one or more icon packs for later usage in `<Icon/>` component.\n * Renders nothing, but should be added as a child of an Application Root.\n *\n * @extends React.Component\n *\n * @property {IconPack<any> | IconPack<any>[]} icons - Icon packs to register.\n * @property {string} defaultIcons - Name of an icon pack that is used by default.\n *\n * @overview-example Simple Usage\n *\n * ```\n * import React from 'react';\n * import { mapping, light as lightTheme } from '@eva-design/eva';\n * import { ApplicationProvider, IconRegistry, Layout, Text } from 'react-native-ui-kitten';\n * import { EvaIconsPack } from '@ui-kitten/eva-icons'; // <-- Make sure it is installed. npm i @ui-kitten/eva-icons\n *\n * export default class App extends React.Component {\n *   render() {\n *     return (\n *       <React.Fragment>\n *         <IconRegistry icons={EvaIconsPack}/>\n *         <ApplicationProvider mapping={mapping} theme={lightTheme}>\n *           <Layout style={{flex: 1, justifyContent: 'center', alignItems: 'center'}}>\n *             <Text>Welcome to UI Kitten</Text>\n *           </Layout>\n *         </ApplicationProvider>\n *       <React.Fragment>\n *     );\n *   }\n * }\n * ```\n */\nexport class IconRegistry extends React.Component<IconRegistryProps> {\n\n  static defaultProps: Partial<IconRegistryProps> = {\n    icons: [],\n  };\n\n  private findDefaultIconPack = (packs: IconPack<any>[], name: string): IconPack<any> => {\n    const requestedPackIndex: number = packs.findIndex((pack: IconPack<any>): boolean => {\n      return pack.name === name;\n    });\n\n    return packs[Math.max(0, requestedPackIndex)];\n  };\n\n  private registerIcons = (source: IconsProp, defaultPack: string): void => {\n    const packs: IconPack<any>[] = Array.isArray(source) ? source : [source];\n    const defaultIconPack: IconPack<any> = this.findDefaultIconPack(packs, defaultPack);\n\n    IconRegistryService.register(...packs);\n    IconRegistryService.setDefaultIconPack(defaultIconPack.name);\n  };\n\n  public render(): React.ReactNode {\n    const { icons, defaultIcons } = this.props;\n    this.registerIcons(icons, defaultIcons);\n\n    return null;\n  }\n}\n","export const TextStyleProps: string[] = [\n\n  // TextStyle\n\n  'color',\n  'fontFamily',\n  'fontSize',\n  'fontStyle',\n  'fontWeight',\n  'letterSpacing',\n  'lineHeight',\n  'textAlign',\n  'textAlign',\n  'textDecorationLine',\n  'textDecorationStyle',\n  'textDecorationColor',\n  'textShadowColor',\n  'textShadowColor',\n  'textShadowOffset',\n  'textShadowRadius',\n\n  // TextStyleIOS\n\n  'textTransform',\n  'writingDirection',\n\n  // TextStyleAndroid\n\n  'textAlignVertical',\n  'includeFontPadding',\n];\n\nexport const FlexStyleProps: string[] = [\n  'alignContent',\n  'alignItems',\n  'alignSelf',\n  'aspectRatio',\n  'borderBottomWidth',\n  'borderEndWidth',\n  'borderLeftWidth',\n  'borderRightWidth',\n  'borderStartWidth',\n  'borderTopWidth',\n  'borderWidth',\n  'bottom',\n  'display',\n  'end',\n  'flex',\n  'flexBasis',\n  'flexDirection',\n  'flexGrow',\n  'flexShrink',\n  'flexWrap',\n  'height',\n  'justifyContent',\n  'left',\n  'margin',\n  'marginBottom',\n  'marginEnd',\n  'marginHorizontal',\n  'marginLeft',\n  'marginRight',\n  'marginStart',\n  'marginTop',\n  'marginVertical',\n  'maxHeight',\n  'maxWidth',\n  'minHeight',\n  'minWidth',\n  'overflow',\n  'padding',\n  'paddingBottom',\n  'paddingEnd',\n  'paddingHorizontal',\n  'paddingLeft',\n  'paddingRight',\n  'paddingStart',\n  'paddingTop',\n  'paddingVertical',\n  'position',\n  'right',\n  'start',\n  'top',\n  'width',\n  'zIndex',\n\n  // ios\n\n  'direction',\n];\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  GestureResponderEvent,\n  ImageProps,\n  ImageStyle,\n  StyleProp,\n  StyleSheet,\n  TextInput,\n  TextInputProps,\n  TextStyle,\n  TouchableWithoutFeedback,\n  TouchableWithoutFeedbackProps,\n  View,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\nimport {\n  Interaction,\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport {\n  Text,\n  TextElement,\n} from '../text/text.component';\nimport {\n  allWithRest,\n  isValidString,\n} from '../support/services';\nimport {\n  FlexStyleProps,\n  InputFocusEvent,\n} from '../support/typings';\n\ntype IconElement = React.ReactElement<ImageProps>;\ntype IconProp = (style: StyleType) => IconElement;\n\ninterface ComponentProps {\n  status?: string;\n  size?: string;\n  disabled?: boolean;\n  label?: string;\n  caption?: string;\n  captionIcon?: IconProp;\n  icon?: IconProp;\n  textStyle?: StyleProp<TextStyle>;\n  labelStyle?: StyleProp<TextStyle>;\n  captionTextStyle?: StyleProp<TextStyle>;\n  onIconPress?: (event: GestureResponderEvent) => void;\n}\n\nexport type InputProps = StyledComponentProps & TextInputProps & ComponentProps;\nexport type InputElement = React.ReactElement<InputProps>;\n\n/**\n * Styled `Input` component.\n *\n * @extends React.Component\n *\n * @method {() => void} focus - Requests focus for the given input or view. The exact behavior triggered\n * will depend on the platform and type of view.\n *\n * @method {() => void} blur - Removes focus from an input or view. This is the opposite of `focus()`.\n *\n * @method {() => boolean} isFocused - Returns if the input is currently focused.\n *\n * @method {() => void} clear - Removes all text from the input.\n *\n * @property {boolean} disabled - Determines whether component is disabled.\n * Default is `false`.\n *\n * @property {string} status - Determines the status of the component.\n * Can be `basic`, `primary`, `success`, `info`, `warning`, `danger` or `control`.\n * Default is `basic`.\n *\n * @property {string} size - Determines the size of the component.\n * Can be `small`, `medium` or `large`.\n * Default is `medium`.\n *\n * @property {string} label - Determines label of the component.\n *\n * @property {StyleProp<TextStyle>} labelStyle - Customizes label style.\n *\n * @property {string} caption - Determines caption of the component.\n *\n * @property {StyleProp<TextStyle>} captionStyle - Customizes caption style.\n *\n * @property {string} placeholder - Determines placeholder of the component.\n *\n * @property {StyleProp<TextStyle>} textStyle - Customizes text style.\n *\n * @property {(style: StyleType) => React.ReactElement<ImageProps>} icon - Determines icon of the component.\n *\n * @property {(style: StyleType) => React.ReactElement<ImageProps>} captionIcon - Determines caption icon.\n *\n * @property {TextInputProps} ...TextInputProps - Any props applied to TextInput component.\n *\n * @overview-example InputSimpleUsage\n *\n * @overview-example InputStatus\n *\n * @overview-example InputSize\n *\n * @overview-example InputWithIcon\n *\n * @overview-example InputWithLabel\n *\n * @overview-example InputWithCaption\n *\n * @example InputInlineStyling\n *\n * @example InputWithExternalSourceIcon\n */\nexport class InputComponent extends React.Component<InputProps> {\n\n  static styledComponentName: string = 'Input';\n\n  private textInputRef: React.RefObject<TextInput> = React.createRef();\n\n  public focus = (): void => {\n    this.textInputRef.current.focus();\n  };\n\n  public blur = (): void => {\n    this.textInputRef.current.blur();\n  };\n\n  public isFocused = (): boolean => {\n    return this.textInputRef.current.isFocused();\n  };\n\n  public clear = (): void => {\n    this.textInputRef.current.clear();\n  };\n\n  private onTextFieldFocus = (event: InputFocusEvent): void => {\n    this.props.dispatch([Interaction.FOCUSED]);\n\n    if (this.props.onFocus) {\n      this.props.onFocus(event);\n    }\n  };\n\n  private onTextFieldBlur = (event: InputFocusEvent): void => {\n    this.props.dispatch([]);\n\n    if (this.props.onBlur) {\n      this.props.onBlur(event);\n    }\n  };\n\n  private onIconPress = (event: GestureResponderEvent): void => {\n    if (this.props.onIconPress) {\n      this.props.onIconPress(event);\n    }\n  };\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const flatStyles: ViewStyle = StyleSheet.flatten(this.props.style);\n    const { rest: inputContainerStyle, ...containerStyle } = allWithRest(flatStyles, FlexStyleProps);\n\n    const {\n      textMarginHorizontal,\n      textFontFamily,\n      textFontSize,\n      textLineHeight,\n      textFontWeight,\n      textColor,\n      placeholderColor,\n      iconWidth,\n      iconHeight,\n      iconMarginHorizontal,\n      iconTintColor,\n      labelColor,\n      labelFontSize,\n      labelLineHeight,\n      labelMarginBottom,\n      labelFontWeight,\n      captionMarginTop,\n      captionColor,\n      captionFontSize,\n      captionLineHeight,\n      captionFontWeight,\n      captionIconWidth,\n      captionIconHeight,\n      captionIconMarginRight,\n      captionIconTintColor,\n      ...containerParameters\n    } = source;\n\n    return {\n      container: containerStyle,\n      inputContainer: {\n        ...containerParameters,\n        ...inputContainerStyle,\n      },\n      captionContainer: {\n        marginTop: captionMarginTop,\n      },\n      text: {\n        marginHorizontal: textMarginHorizontal,\n        fontFamily: textFontFamily,\n        fontSize: textFontSize,\n        // FIXME: RN issue (https://github.com/facebook/react-native/issues/7823)\n        // lineHeight: textLineHeight,\n        fontWeight: textFontWeight,\n        color: textColor,\n      },\n      placeholder: {\n        color: placeholderColor,\n      },\n      icon: {\n        width: iconWidth,\n        height: iconHeight,\n        marginHorizontal: iconMarginHorizontal,\n        tintColor: iconTintColor,\n      },\n      label: {\n        color: labelColor,\n        fontSize: labelFontSize,\n        lineHeight: labelLineHeight,\n        marginBottom: labelMarginBottom,\n        fontWeight: labelFontWeight,\n      },\n      captionIcon: {\n        width: captionIconWidth,\n        height: captionIconHeight,\n        tintColor: captionIconTintColor,\n        marginRight: captionIconMarginRight,\n      },\n      captionLabel: {\n        fontSize: captionFontSize,\n        fontWeight: captionFontWeight,\n        lineHeight: captionLineHeight,\n        color: captionColor,\n      },\n    };\n  };\n\n  private renderIconTouchableElement = (style: StyleType): React.ReactElement<TouchableWithoutFeedbackProps> => {\n    const iconElement: IconElement = this.renderIconElement(style);\n\n    return (\n      <TouchableWithoutFeedback onPress={this.onIconPress}>\n        {iconElement}\n      </TouchableWithoutFeedback>\n    );\n  };\n\n  private renderIconElement = (style: StyleType): IconElement => {\n    const iconElement: IconElement = this.props.icon(style);\n\n    return React.cloneElement(iconElement, {\n      key: 0,\n      style: [style, styles.icon, iconElement.props.style],\n    });\n  };\n\n  private renderLabelElement = (style: TextStyle): TextElement => {\n    return (\n      <Text\n        key={1}\n        style={[style, styles.label, this.props.labelStyle]}>\n        {this.props.label}\n      </Text>\n    );\n  };\n\n  private renderCaptionElement = (style: TextStyle): TextElement => {\n    return (\n      <Text\n        key={2}\n        style={[style, styles.captionLabel, this.props.captionTextStyle]}>\n        {this.props.caption}\n      </Text>\n    );\n  };\n\n  private renderCaptionIconElement = (style: ImageStyle): IconElement => {\n    const iconElement: IconElement = this.props.captionIcon(style);\n\n    return React.cloneElement(iconElement, {\n      key: 3,\n      style: [style, styles.captionIcon, iconElement.props.style],\n    });\n  };\n\n  private renderComponentChildren = (style: StyleType): React.ReactNodeArray => {\n    const { icon, label, captionIcon, caption } = this.props;\n\n    return [\n      icon && this.renderIconTouchableElement(style.icon),\n      isValidString(label) && this.renderLabelElement(style.label),\n      isValidString(caption) && this.renderCaptionElement(style.captionLabel),\n      captionIcon && this.renderCaptionIconElement(style.captionIcon),\n    ];\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { themedStyle, textStyle, ...restProps } = this.props;\n    const componentStyle: StyleType = this.getComponentStyle(themedStyle);\n\n    const [\n      iconElement,\n      labelElement,\n      captionElement,\n      captionIconElement,\n    ] = this.renderComponentChildren(componentStyle);\n\n    return (\n      <View style={[componentStyle.container, styles.container]}>\n        {labelElement}\n        <View\n          style={[componentStyle.inputContainer, styles.inputContainer]}>\n          <TextInput\n            ref={this.textInputRef}\n            {...restProps}\n            style={[componentStyle.text, styles.text, textStyle]}\n            placeholderTextColor={componentStyle.placeholder.color}\n            editable={!restProps.disabled}\n            onFocus={this.onTextFieldFocus}\n            onBlur={this.onTextFieldBlur}\n          />\n          {iconElement}\n        </View>\n        <View style={[componentStyle.captionContainer, styles.captionContainer]}>\n          {captionIconElement}\n          {captionElement}\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {},\n  inputContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    width: '100%',\n  },\n  captionContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  text: {\n    flexGrow: 1,\n    flexShrink: 1,\n    flexBasis: 'auto',\n  },\n  placeholder: {},\n  icon: {},\n  label: {\n    textAlign: 'left',\n  },\n  captionIcon: {},\n  captionLabel: {\n    textAlign: 'left',\n  },\n});\n\nexport const Input = styled<InputProps>(InputComponent);\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Interaction } from '@kitten/theme';\nimport {\n  Input as RNInput,\n  InputElement as RNInputElement,\n  InputProps as RNInputProps,\n  // @ts-ignore\n} from './input.component.tsx';\nimport {\n  WebEventResponder,\n  WebEventResponderCallbacks,\n  WebEventResponderInstance,\n} from '../support/services';\n\nexport type InputProps = RNInputProps & WebEventResponderCallbacks;\nexport type InputElement = React.ReactElement<InputProps>;\n\nexport class Input extends React.Component<InputProps> implements WebEventResponderCallbacks {\n\n  private inputRef: React.RefObject<any> = React.createRef();\n  private webEventResponder: WebEventResponderInstance = WebEventResponder.create(this);\n\n  public onMouseEnter = (): void => {\n    this.inputRef.current.props.dispatch([Interaction.HOVER]);\n\n    if (this.props.onMouseEnter) {\n      this.props.onMouseEnter();\n    }\n  };\n\n  public onMouseLeave = (): void => {\n    this.inputRef.current.props.dispatch([]);\n\n    if (this.props.onMouseLeave) {\n      this.props.onMouseLeave();\n    }\n  };\n\n  public onFocus = (): void => {\n    if (this.props.onFocus) {\n      this.props.onFocus();\n    }\n  };\n\n  public onBlur = (): void => {\n    if (this.props.onBlur) {\n      this.props.onBlur();\n    }\n  };\n\n  public render(): RNInputElement {\n    const { textStyle, ...restProps } = this.props;\n\n    return (\n      <RNInput\n        {...restProps}\n        {...this.webEventResponder.eventHandlers}\n        ref={this.inputRef}\n        textStyle={[textStyle, styles.text]}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  text: {\n    // @ts-ignore\n    outlineWidth: 0,\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  View,\n  ViewProps,\n} from 'react-native';\nimport {\n  styled,\n  StyledComponentProps,\n} from '@kitten/theme';\n\ninterface ComponentProps {\n  level?: string;\n  children?: React.ReactNode;\n}\n\nexport type LayoutProps = StyledComponentProps & ViewProps & ComponentProps;\nexport type LayoutElement = React.ReactElement<LayoutProps>;\n\n/**\n * `Layout` container component. Behaves like React Native `View`.\n * The key feature of using `Layout` instead of `View` is that\n * it automatically picks background color fitting to current theme.\n *\n * @extends React.Component\n *\n * @property {string} level - Determines background color level of component.\n * Can be `level='1'`, `level='2'`, `level='3'` or `level='4'`.\n *\n * @property {React.ReactElement<any> | React.ReactElement<any>[]} children - Determines the children of the component.\n *\n * @property {ViewProps} ...ViewProps - Any props applied to View component.\n *\n * @overview-example LayoutSimpleUsage\n *\n * @overview-example LayoutLevel\n *\n * @example LayoutInlineStyling\n */\nexport class LayoutComponent extends React.Component<LayoutProps> {\n\n  static styledComponentName: string = 'Layout';\n\n  public render(): React.ReactElement<ViewProps> {\n    const { style, themedStyle, ...derivedProps } = this.props;\n\n    return (\n      <View\n        {...derivedProps}\n        style={[themedStyle, style]}\n      />\n    );\n  }\n}\n\nexport const Layout = styled<LayoutProps>(LayoutComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  View,\n  ViewProps,\n  StyleSheet,\n  Dimensions,\n  ViewStyle,\n  StyleProp,\n} from 'react-native';\nimport {\n  ModalService,\n  StyleType,\n} from '@kitten/theme';\nimport {\n  MeasureNode,\n  MeasureNodeProps,\n  MeasuringElementProps,\n  MeasureResult,\n} from '../popover/measure.component';\nimport { Size } from '../popover/type';\nimport { ModalPresentingBased } from '../support/typings';\n\nconst initialWindowSize: Size = Dimensions.get('screen');\nconst TAG_CHILD: string = 'Modal';\nconst initialContentSize: Size = { width: 0, height: 0 };\nexport const baseModalTestId: string = '@modal/base';\n\ntype ChildElement = React.ReactElement<any>;\ntype ChildrenProp = ChildElement | ChildElement[];\n\ninterface ComponentProps {\n  visible: boolean;\n  children: ChildrenProp;\n  backdropStyle?: StyleProp<ViewStyle>;\n}\n\nexport type ModalProps = ViewProps & ComponentProps & ModalPresentingBased;\nexport type ModalElement = React.ReactElement<ModalProps>;\n\n/**\n * `Modal` component is a wrapper than presents content above an enclosing view.\n *\n * @extends React.Component\n *\n * @property {boolean} visible - Determines whether component is visible. By default is false.\n *\n * @property {React.ReactElement<any> | React.ReactElement<any>[]} children -\n * Determines component's children.\n *\n * @property {boolean} allowBackdrop - Determines whether user can tap on back-drop.\n * Default is `false`.\n *\n * @property {StyleProp<ViewStyle>} backdropStyle - Determines the style of backdrop.\n *\n * @property {() => void} onBackdropPress - Determines component's behavior when the user is\n * tapping on back-drop.\n *\n * @property {ViewProps} ...ViewProps - Any props applied to View component.\n *\n * @overview-example Simple Usage\n *\n * ```\n * import React from 'react';\n * import { StyleSheet } from 'react-native';\n * import { Button, Modal, Text, Layout } from 'react-native-ui-kitten';\n *\n * export class ModalShowcase extends React.Component {\n *\n *   state = {\n *     modalVisible: false,\n *   };\n *\n *   setModalVisible = () => {\n *     const modalVisible = !this.state.modalVisible;\n *     this.setState({ modalVisible });\n *   };\n *\n *   renderModalElement = () => {\n *     return (\n *       <Layout\n *         level='3'\n *         style={styles.modalContainer}>\n *         <Text>This is modal</Text>\n *         <Button onPress={this.setModalVisible}>Hide Modal</Button>\n *       </Layout>\n *     );\n *   };\n *\n *   render() {\n *     return (\n *       <Layout style={styles.container}>\n *         <Button onPress={this.setModalVisible}>Show Modal</Button>\n *         <Modal visible={this.state.modalVisible}>\n *           {this.renderModalElement()}\n *         </Modal>\n *       </Layout>\n *     );\n *   }\n * }\n *\n * const styles = StyleSheet.create({\n *   container: {\n *     flex: 1,\n *     padding: 16,\n *   },\n *   modalContainer: {\n *     width: 200,\n *     height: 200,\n *     justifyContent: 'center',\n *     alignItems: 'center',\n *   },\n * });\n * ```\n *\n * @overview-example With Backdrop\n *\n * ```\n * import React from 'react';\n * import { StyleSheet } from 'react-native';\n * import { Button, Modal, Text, Layout } from 'react-native-ui-kitten';\n *\n * export class ModalShowcase extends React.Component {\n *\n *   state = {\n *     modalVisible: false,\n *   };\n *\n *   setModalVisible = () => {\n *     const modalVisible: boolean = !this.state.modalVisible;\n *     this.setState({ modalVisible });\n *   };\n *\n *   renderModalElement = () => {\n *     return (\n *       <Layout\n *         level='3'\n *         style={styles.modalContainer}>\n *         <Text>This is modal</Text>\n *         <Button onPress={this.setModalVisible}>Hide Modal</Button>\n *       </Layout>\n *     );\n *   };\n *\n *   render() {\n *     return (\n *       <Layout style={styles.container}>\n *         <Button onPress={this.setModalVisible}>Show Modal</Button>\n *         <Modal\n *           allowBackdrop={true}\n *           backdropStyle={{ backgroundColor: 'black', opacity: 0.5 }}\n *           onBackdropPress={this.setModalVisible}\n *           visible={this.state.modalVisible}>\n *           {this.renderModalElement()}\n *         </Modal>\n *       </View>\n *     );\n *   }\n * }\n *\n * const styles = StyleSheet.create({\n *   container: {\n *     flex: 1,\n *     padding: 16,\n *   },\n *   modalContainer: {\n *     width: 200,\n *     height: 200,\n *     justifyContent: 'center',\n *     alignItems: 'center',\n *   },\n * });\n * ```\n */\nexport class Modal extends React.Component<ModalProps> {\n\n  static defaultProps: Partial<ModalProps> = {\n    allowBackdrop: false,\n    onBackdropPress: () => null,\n  };\n\n  private contentSize: Size = initialContentSize;\n  private id: string = '';\n\n  public componentDidUpdate(prevProps: ModalProps): void {\n    if (prevProps.visible !== this.props.visible) {\n      this.handleVisibility(this.props);\n    } else if (prevProps.visible && this.props.visible) {\n      const element: React.ReactElement = this.renderModal();\n      ModalService.update(this.id, element.props.children);\n    }\n  }\n\n  private handleVisibility = (props: ModalProps): void => {\n    const { allowBackdrop, onBackdropPress } = this.props;\n\n    if (props.visible) {\n      const element: React.ReactElement = this.renderModal();\n      this.id = ModalService.show(element, { allowBackdrop, onBackdropPress });\n    } else {\n      ModalService.hide(this.id);\n      this.id = '';\n    }\n  };\n\n  private getAbsoluteRelatedStyle = (): StyleType => {\n    const windowSize: Size = Dimensions.get('window');\n\n    return {\n      top: (windowSize.height - this.contentSize.height) / 2,\n      left: (windowSize.width - this.contentSize.width) / 2,\n    };\n  };\n\n  private onMeasure = (result: MeasureResult): void => {\n    this.contentSize = result[TAG_CHILD].size;\n  };\n\n  private renderBaseModal = (): React.ReactElement<ViewProps> => {\n    const { style, children, ...restProps } = this.props;\n    const absoluteRelatedStyle: StyleType = this.getAbsoluteRelatedStyle();\n    const measuringProps: MeasuringElementProps = { tag: TAG_CHILD };\n\n    return (\n      <View\n        {...restProps}\n        {...measuringProps}\n        testID={baseModalTestId}\n        key={TAG_CHILD}\n        style={[styles.container, absoluteRelatedStyle, style]}>\n        {children}\n      </View>\n    );\n  };\n\n  private renderModal = (): React.ReactElement => {\n    const { backdropStyle } = this.props;\n    const modal: React.ReactElement<ViewProps> = this.renderBaseModal();\n\n    return backdropStyle ? (\n      <React.Fragment>\n        <View\n          pointerEvents='box-none'\n          style={[styles.backdrop, backdropStyle]}/>\n        {modal}\n      </React.Fragment>\n    ) : modal;\n  };\n\n  private renderMeasureNode = (): React.ReactElement<MeasureNodeProps> => {\n    const modal: React.ReactElement = this.renderBaseModal();\n    const measureStyledModal: React.ReactElement = React.cloneElement(modal, {\n      style: [modal.props.style, styles.hiddenModal],\n      key: TAG_CHILD,\n      pointerEvents: 'none',\n    });\n\n    return (\n      <MeasureNode onResult={this.onMeasure}>\n        {[measureStyledModal]}\n      </MeasureNode>\n    );\n  };\n\n  public render(): React.ReactNode {\n    return this.renderMeasureNode();\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    position: 'absolute',\n  },\n  backdrop: {\n    position: 'absolute',\n    width: initialWindowSize.width,\n    height: initialWindowSize.height,\n  },\n  hiddenModal: {\n    opacity: 0,\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport {\n  Menu,\n  MenuElement,\n  MenuProps,\n} from '../menu/menu.component';\nimport { MenuItemType } from '../menu/menuItem.component';\nimport {\n  Popover,\n  PopoverElement,\n  PopoverProps,\n} from '../popover/popover.component';\nimport {\n  ModalPresentingBased,\n  Override,\n} from '../support/typings';\n\ntype PopoverContentProps = Omit<PopoverProps, 'content'>;\nexport type OverflowMenuItemType = Omit<MenuItemType, 'subItems'>;\n\ninterface ComponentProps extends PopoverContentProps, ModalPresentingBased {\n  children: React.ReactElement<any>;\n}\n\ntype MenuBasedProps = Override<MenuProps, { data: OverflowMenuItemType[] }>;\n\nexport type OverflowMenuProps = & StyledComponentProps & ComponentProps & MenuBasedProps;\nexport type OverflowMenuElement = React.ReactElement<OverflowMenuProps>;\n\n/**\n * `OverflowMenu` renders vertical list of menu items in a modal.\n *\n * @extends React.Component\n *\n * @property {React.ReactElement<any>} children - Determines the element above\n * which the menu will be rendered.\n *\n * @property {boolean} visible - determines the visibility of the component.\n *\n * @property {OverflowMenuItemType[]} data - Determines menu items.\n *\n * @property {number} selectedIndex - Determines the index of currently selected item.\n *\n * @property {(index: number, event: GestureResponderEvent) => void} onSelect - Fires when selected item is changed.\n *\n * @property {Omit<PopoverProps, 'content'>} ...PopoverProps - Any props applied to Popover component,\n * excluding `content`.\n *\n * @property {Override<MenuProps, { data: OverflowMenuItemType[] }>} ...MenuProps - Any props applied to Menu component.\n *\n * @property {ModalPresentingBased} ...ModalProps - Any props applied to Modal component.\n *\n * @overview-example OverflowMenuSimpleUsage\n *\n * @overview-example OverflowMenuWithIcons\n *\n * @example OverflowMenuWithDisabledItems\n *\n * @example OverflowMenuWithoutDivider\n *\n * @example OverflowMenuExternalSourceIcons\n */\nclass OverflowMenuComponent extends React.Component<OverflowMenuProps> {\n\n  static styledComponentName: string = 'OverflowMenu';\n\n  static defaultProps: Partial<OverflowMenuProps> = {\n    indicatorOffset: 12,\n  };\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const {\n      indicatorBackgroundColor,\n      ...containerParameters\n    } = source;\n\n    return {\n      container: containerParameters,\n      indicator: {\n        backgroundColor: indicatorBackgroundColor,\n      },\n    };\n  };\n\n  private renderPopoverContentElement = (style: StyleType): MenuElement => {\n    const { themedStyle, indicatorStyle, children, data, ...restProps } = this.props;\n\n    return (\n      <Menu\n        {...restProps}\n        data={data}\n        style={[styles.menu, style]}\n        initialNumToRender={data.length}\n        bounces={false}\n      />\n    );\n  };\n\n  public render(): PopoverElement {\n    const { themedStyle, style, indicatorStyle, children, appearance, ...restProps } = this.props;\n    const { container, indicator } = this.getComponentStyle(themedStyle);\n\n    const contentElement: MenuElement = this.renderPopoverContentElement(container);\n\n    return (\n      <Popover\n        {...restProps}\n        style={[styles.container, style]}\n        indicatorStyle={[indicator, indicatorStyle]}\n        content={contentElement}>\n        {children}\n      </Popover>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    overflow: 'hidden',\n  },\n  menu: {\n    flexGrow: 0,\n  },\n});\n\nexport const OverflowMenu = styled<OverflowMenuProps>(OverflowMenuComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  GestureResponderEvent,\n  Insets,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  TouchableOpacity,\n  TouchableOpacityProps,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport {\n  Interaction,\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport {\n  Text,\n  TextElement,\n} from '../text/text.component';\nimport { isValidString } from '../support/services';\n\ninterface ComponentProps {\n  textStyle?: StyleProp<TextStyle>;\n  text?: string;\n  checked?: boolean;\n  status?: string;\n  onChange?: (selected: boolean) => void;\n}\n\nexport type RadioProps = StyledComponentProps & TouchableOpacityProps & ComponentProps;\nexport type RadioElement = React.ReactElement<RadioProps>;\n\n/**\n * Styled `Radio` component.\n *\n * @extends React.Component\n *\n * @property {boolean} checked - Determines whether component is checked.\n * Default is `false`.\n *\n * @property {boolean} disabled - Determines whether component is disabled.\n * Default is `false`.\n *\n * @property {string} status - Determines the status of the component.\n * Can be `basic`, `primary`, `success`, `info`, `warning`, `danger` or `control`.\n * Default is `basic`.\n *\n * @property {string} text - Determines text of the component.\n *\n * @property {StyleProp<TextStyle>} textStyle - Customizes text style.\n *\n * @property {(selected: boolean) => void} onChange - Triggered on onChange value.\n *\n * @property {TouchableOpacityProps} ...TouchableOpacityProps - Any props applied to TouchableOpacity component.\n *\n * @overview-example RadioSimpleUsage\n *\n * @overview-example RadioStatus\n *\n * @overview-example RadioWithText\n *\n * @example RadioInlineStyling\n */\nexport class RadioComponent extends React.Component<RadioProps> {\n\n  static styledComponentName: string = 'Radio';\n\n  private onPress = (): void => {\n    if (this.props.onChange) {\n      this.props.onChange(!this.props.checked);\n    }\n  };\n\n  private onPressIn = (event: GestureResponderEvent): void => {\n    this.props.dispatch([Interaction.ACTIVE]);\n\n    if (this.props.onPressIn) {\n      this.props.onPressIn(event);\n    }\n  };\n\n  private onPressOut = (event: GestureResponderEvent): void => {\n    this.props.dispatch([]);\n\n    if (this.props.onPressOut) {\n      this.props.onPressOut(event);\n    }\n  };\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const {\n      textMarginHorizontal,\n      textFontFamily,\n      textFontSize,\n      textFontWeight,\n      textLineHeight,\n      textColor,\n      iconWidth,\n      iconHeight,\n      iconBorderRadius,\n      iconTintColor,\n      outlineWidth,\n      outlineHeight,\n      outlineBorderRadius,\n      outlineBackgroundColor,\n      ...containerParameters\n    } = source;\n\n    return {\n      container: {},\n      highlightContainer: {},\n      selectContainer: containerParameters,\n      text: {\n        marginHorizontal: textMarginHorizontal,\n        fontFamily: textFontFamily,\n        fontSize: textFontSize,\n        lineHeight: textLineHeight,\n        fontWeight: textFontWeight,\n        color: textColor,\n      },\n      icon: {\n        width: iconWidth,\n        height: iconHeight,\n        borderRadius: iconBorderRadius,\n        backgroundColor: iconTintColor,\n      },\n      highlight: {\n        width: outlineWidth,\n        height: outlineHeight,\n        borderRadius: outlineBorderRadius,\n        backgroundColor: outlineBackgroundColor,\n      },\n    };\n  };\n\n  private createHitSlopInsets = (style: StyleProp<ViewStyle>): Insets => {\n    const flatStyle: ViewStyle = StyleSheet.flatten(style);\n\n    // @ts-ignore `width` is restricted to be a number\n    const value: number = 40 - flatStyle.width;\n\n    return {\n      left: value,\n      top: value,\n      right: value,\n      bottom: value,\n    };\n  };\n\n  private renderTextElement = (style: StyleType): TextElement => {\n    const { text, textStyle } = this.props;\n\n    return (\n      <Text\n        key={0}\n        style={[style, styles.text, textStyle]}>\n        {text}\n      </Text>\n    );\n  };\n\n  private renderComponentChildren = (style: StyleType): React.ReactNodeArray => {\n    const { text } = this.props;\n\n    return [\n      isValidString(text) && this.renderTextElement(style.text),\n    ];\n  };\n\n  public render(): React.ReactElement<TouchableOpacityProps> {\n    const { style, themedStyle, disabled, ...derivedProps } = this.props;\n\n    const {\n      container,\n      highlightContainer,\n      selectContainer,\n      icon,\n      highlight,\n      ...componentStyles\n    } = this.getComponentStyle(themedStyle);\n\n    const selectContainerStyle: StyleProp<ViewStyle> = [selectContainer, styles.selectContainer];\n    const hitSlopInsets: Insets = this.createHitSlopInsets(selectContainerStyle);\n\n    const [textElement] = this.renderComponentChildren(componentStyles);\n\n    return (\n      <TouchableOpacity\n        activeOpacity={1.0}\n        {...derivedProps}\n        style={[container, styles.container, style]}\n        disabled={disabled}\n        hitSlop={hitSlopInsets}\n        onPress={this.onPress}\n        onPressIn={this.onPressIn}\n        onPressOut={this.onPressOut}>\n        <View style={[highlightContainer, styles.highlightContainer]}>\n          <View style={[highlight, styles.highlight]}/>\n          <View style={selectContainerStyle}>\n            <View style={[icon, styles.icon]}/>\n          </View>\n        </View>\n        {textElement}\n      </TouchableOpacity>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  highlightContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  selectContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  icon: {},\n  highlight: {\n    position: 'absolute',\n  },\n  text: {},\n});\n\nexport const Radio = styled<RadioProps>(RadioComponent);\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Interaction } from '@kitten/theme';\nimport {\n  Radio as RNRadio,\n  RadioElement as RNRadioElement,\n  RadioProps as RNRadioProps,\n  // @ts-ignore\n} from './radio.component.tsx';\nimport {\n  WebEventResponder,\n  WebEventResponderCallbacks,\n  WebEventResponderInstance,\n} from '../support/services';\n\nexport type RadioProps = RNRadioProps & WebEventResponderCallbacks;\nexport type RadioElement = React.ReactElement<RadioProps>;\n\nexport class Radio extends React.Component<RadioProps> implements WebEventResponderCallbacks {\n\n  private radioRef: React.RefObject<any> = React.createRef();\n  private webEventResponder: WebEventResponderInstance = WebEventResponder.create(this);\n\n  public onMouseEnter = (): void => {\n    this.radioRef.current.props.dispatch([Interaction.HOVER]);\n\n    if (this.props.onMouseEnter) {\n      this.props.onMouseEnter();\n    }\n  };\n\n  public onMouseLeave = (): void => {\n    this.radioRef.current.props.dispatch([]);\n\n    if (this.props.onMouseLeave) {\n      this.props.onMouseLeave();\n    }\n  };\n\n  public onFocus = (): void => {\n    this.radioRef.current.props.dispatch([Interaction.FOCUSED]);\n\n    if (this.props.onFocus) {\n      this.props.onFocus();\n    }\n  };\n\n  public onBlur = (): void => {\n    this.radioRef.current.props.dispatch([]);\n\n    if (this.props.onBlur) {\n      this.props.onBlur();\n    }\n  };\n\n  public render(): RNRadioElement {\n    const { textStyle, ...restProps } = this.props;\n\n    return (\n      <RNRadio\n        {...restProps}\n        {...this.webEventResponder.eventHandlers}\n        style={[textStyle, styles.element]}\n        ref={this.radioRef}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  element: {\n    // @ts-ignore\n    outlineWidth: 0,\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  StyleSheet,\n  View,\n  ViewProps,\n} from 'react-native';\nimport {\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport { RadioElement } from '../radio/radio.component';\n\ntype ChildrenProp = RadioElement | RadioElement[];\n\ninterface ComponentProps {\n  children: ChildrenProp;\n  selectedIndex?: number;\n  onChange?: (index: number) => void;\n}\n\nexport type RadioGroupProps = StyledComponentProps & ViewProps & ComponentProps;\nexport type RadioGroupElement = React.ReactElement<RadioGroupProps>;\n\n/**\n * Renders a group of `Radio` buttons.\n *\n * @extends React.Component\n *\n * @property {React.ReactElement<RadioProps> | React.ReactElement<RadioProps>[]} children -\n * Determines radio buttons in group.\n *\n * @property {number} selectedIndex - Determines the index of selected button\n *\n * @property {(index: number) => void} onChange - Fires when selected radio is changed.\n *\n * @property {ViewProps} ...ViewProps - Any props applied to View component.\n *\n * @overview-example RadioGroupSimpleUsage\n */\nclass RadioGroupComponent extends React.Component<RadioGroupProps> {\n\n  static styledComponentName: string = 'RadioGroup';\n\n  static defaultProps: Partial<RadioGroupProps> = {\n    selectedIndex: -1,\n  };\n\n  private onRadioChange = (index: number): void => {\n    if (this.props.onChange) {\n      this.props.onChange(index);\n    }\n  };\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const { itemMarginVertical, ...containerParameters } = source;\n\n    return {\n      container: containerParameters,\n      item: {\n        marginVertical: itemMarginVertical,\n      },\n    };\n  };\n\n  private renderRadioElements = (source: RadioElement | RadioElement[], style: StyleType): RadioElement[] => {\n    return React.Children.map(source, (element: RadioElement, index: number): RadioElement => {\n      return React.cloneElement(element, {\n        key: index,\n        style: [style, element.props.style],\n        checked: this.props.selectedIndex === index,\n        onChange: () => this.onRadioChange(index),\n      });\n    });\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { themedStyle, style, children, ...derivedProps } = this.props;\n    const componentStyle: StyleType = this.getComponentStyle(themedStyle);\n\n    const radioElements: RadioElement[] = this.renderRadioElements(children, componentStyle.item);\n\n    return (\n      <View\n        {...derivedProps}\n        style={[componentStyle.container, styles.container, style]}>\n        {radioElements}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {},\n});\n\nexport const RadioGroup = styled<RadioGroupProps>(RadioGroupComponent);\n","import {\n  Animated,\n  Easing,\n  EasingFunction,\n  ViewStyle,\n} from 'react-native';\nimport {\n  Animation,\n  AnimationConfig,\n} from '../animation/animation';\n\nconst PI: number = 180;\nconst PI2: number = 360;\nconst OFFSET_MIN: number = PI / 12;\nconst OFFSET_MAX: number = PI / 6;\n\nconst BaseBezierEasing: EasingFunction = Easing.bezier(0.4, 0.0, 0.7, 1.0);\n\nconst StartArcEasing: EasingFunction = (progress: number): number => {\n  return -PI + OFFSET_MIN + (PI - OFFSET_MAX) * BaseBezierEasing(progress);\n};\n\nconst EndArcEasing: EasingFunction = (progress: number): number => {\n  return PI2 - OFFSET_MIN + (-PI + OFFSET_MAX) * BaseBezierEasing(progress);\n};\n\nconst DEFAULT_CONFIG: SpinnerAnimationConfig = {\n  duration: 2400,\n  easing: Easing.linear,\n  cycles: -1,\n};\n\ntype TimingAnimationConfig = Omit<Animated.TimingAnimationConfig, 'toValue'>;\n\nexport interface SpinnerAnimationStyle {\n  container: ViewStyle;\n  start: ViewStyle;\n  end: ViewStyle;\n}\n\nexport type SpinnerAnimationConfig = AnimationConfig & TimingAnimationConfig;\n\n/**\n * Animates a Spinner in a Material Design way.\n *\n * Thanks these guys for open sourcing the algorithm: https://github.com/n4kz/react-native-indicators\n */\nexport class SpinnerAnimation extends Animation<SpinnerAnimationConfig, SpinnerAnimationStyle> {\n\n  private animationValue: Animated.Value;\n  private animationFrames: number[];\n  private arcSize: number;\n\n  protected get animation(): Animated.CompositeAnimation {\n    return Animated.timing(this.animationValue, { toValue: 1.0, ...this.config });\n  }\n\n  constructor(arcSize: number, config?: SpinnerAnimationConfig) {\n    super({ ...DEFAULT_CONFIG, ...config });\n    this.arcSize = arcSize;\n    this.animationValue = new Animated.Value(0);\n    this.animationFrames = this.createFrameRange(this.config.duration);\n  }\n\n  public start(callback?: Animated.EndCallback) {\n    // reset animation value before the next animation cycle\n    this.animationValue.setValue(0);\n    super.start(callback);\n  }\n\n  public stop() {\n    super.stop();\n    this.animationValue.setValue(0);\n  }\n\n  /**\n   * @returns {SpinnerAnimationStyle} - an object that contains container, start and end arcs transform styles.\n   */\n  public toProps(): SpinnerAnimationStyle {\n    const containerInterpolation: Animated.AnimatedInterpolation = this.createContainerInterpolation();\n    const startArcInterpolation: Animated.AnimatedInterpolation = this.createArcInterpolation(StartArcEasing);\n    const endArcInterpolation: Animated.AnimatedInterpolation = this.createArcInterpolation(EndArcEasing);\n\n    return {\n      container: this.toStyleTransformProp(containerInterpolation),\n      start: this.toStyleTransformProp(startArcInterpolation),\n      end: this.toStyleTransformProp(endArcInterpolation, {\n        transform: [{ translateY: -this.arcSize / 2 }],\n      }),\n    };\n  }\n\n  /**\n   * @param {number} duration - animation duration.\n   * @returns an array of frames fitted into animation.\n   */\n  private createFrameRange = (duration: number): number[] => {\n    const numberOfFrames: number = 60 * duration / 1000;\n\n    return new Array(numberOfFrames).fill(0);\n  };\n\n  private createContainerInterpolation = (): Animated.AnimatedInterpolation => {\n    return this.animationValue.interpolate({\n      inputRange: [0, 1],\n      outputRange: [\n        this.toDegValue(OFFSET_MAX + OFFSET_MIN),\n        this.toDegValue((2 * PI2 + OFFSET_MAX + OFFSET_MIN)),\n      ],\n    });\n  };\n\n  private createArcInterpolation = (easing: EasingFunction): Animated.AnimatedInterpolation => {\n    return this.animationValue.interpolate({\n      inputRange: this.createArcInterpolationInputRange(),\n      outputRange: this.createArcInterpolationOutputRange(easing),\n    });\n  };\n\n  /**\n   * Maps the animation frames into initial animation values specific for each frame.\n   *\n   * @returns a container interpolation input range in a numeric format.\n   */\n  private createArcInterpolationInputRange = (): number[] => {\n    return this.animationFrames.map((item: number, frame: number): number => {\n      return frame / (this.animationFrames.length - 1);\n    });\n  };\n\n  /**\n   * Maps the animation frames into a final animation values specific for each frame.\n   *\n   * @param {(progress: number) => number} easing - Easing function specific for the arc.\n   * @returns an arc interpolation end values eased with an `easing` function in a StyleSheet degree format.\n   */\n  private createArcInterpolationOutputRange = (easing: EasingFunction): string[] => {\n    return this.animationFrames.map((item: number, frame: number): string => {\n      const progress: number = 2 * frame / (this.animationFrames.length - 1);\n      const boundedProgress: number = Math.min(2.0 - progress, progress);\n\n      return this.toDegValue(easing(boundedProgress));\n    });\n  };\n\n  /**\n   * @param {Animated.AnimatedInterpolation} rotate - animated rotation animationValue.\n   * @param {ViewStyle} source - initial StyleSheet object.\n   * @returns a final StyleSheet object with a `rotate` animation value.\n   */\n  private toStyleTransformProp = (rotate: Animated.AnimatedInterpolation, source: ViewStyle = {}): ViewStyle => {\n    const transform = [...(source.transform || []), { rotate }];\n\n    // @ts-ignore: AnimatedInterpolation does not fit RotateTransform type declaration\n    return { ...source, transform };\n  };\n\n  /**\n   * @param {number} source - degrees in a numeric format.\n   * @returns degrees in a StyleSheet format.\n   */\n  private toDegValue = (source: number): string => {\n    return `${source}deg`;\n  };\n}\n","import React from 'react';\nimport {\n  Animated,\n  StyleSheet,\n  View,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\nimport {\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport {\n  SpinnerAnimation,\n  SpinnerAnimationStyle,\n} from './animation';\n// TODO: Frame, Point, Size types should be refactored to common types\nimport { Size } from '../popover/type';\n\ninterface ArcElementStyle {\n  container: ViewStyle;\n  arc: ViewStyle;\n  overflow?: ViewStyle;\n}\n\ninterface ComponentProps extends ViewProps {\n  animating?: boolean;\n  size?: string;\n  status?: string;\n}\n\nexport type SpinnerProps = StyledComponentProps & ComponentProps;\nexport type SpinnerElement = React.ReactElement<SpinnerProps>;\n\n/**\n * Styled `Spinner` component. Designed to be used as `ActivityIndicator` component\n *\n * @extends React.Component\n *\n * @property {boolean} animating - Determines whether component is animating. Default is `true`.\n *\n * @property {string} status - Determines the status of the component.\n * Can be `basic`, `primary`, `success`, `info`, `warning`, `danger` or `control`.\n * Default is `primary`.\n *\n * @property {string} size - Determines the size of the component.\n * Can be `tiny`, `small`, `medium`, `large`, or `giant`.\n * Default is `medium`.\n *\n * @overview-example SpinnerSimpleUsage\n *\n * @overview-example SpinnerSizes\n *\n * @overview-example SpinnerStatuses\n *\n * @example SpinnerDataLoading\n */\nexport class SpinnerComponent extends React.PureComponent<SpinnerProps> {\n\n  static styledComponentName: string = 'Spinner';\n\n  static defaultProps: Partial<SpinnerProps> = {\n    animating: true,\n  };\n\n  private animation: SpinnerAnimation = new SpinnerAnimation(this.containerSize.height);\n\n  private get containerSize(): Size {\n    const { width, height } = StyleSheet.flatten([this.props.themedStyle, this.props.style]);\n    // @ts-ignore: width and height are restricted to be a number\n    return new Size(width, height);\n  }\n\n  public componentDidMount(): void {\n    if (this.props.animating) {\n      this.startAnimation();\n    }\n  }\n\n  public componentDidUpdate(prevProps: SpinnerProps): void {\n    const animatingChanged: boolean = this.props.animating !== prevProps.animating;\n\n    if (animatingChanged && this.props.animating) {\n      this.startAnimation();\n    }\n\n    if (animatingChanged && !this.props.animating) {\n      this.stopAnimation();\n    }\n  }\n\n  public componentWillUnmount(): void {\n    this.animation.release();\n  }\n\n  private startAnimation = (): void => {\n    this.animation.start();\n  };\n\n  private stopAnimation = (): void => {\n    this.animation.stop();\n  };\n\n  private getComponentStyle = (source: SpinnerAnimationStyle): StyleType => {\n    const start: ArcElementStyle = {\n      container: source.container,\n      arc: source.start,\n    };\n\n    const end: ArcElementStyle = {\n      container: source.container,\n      arc: source.end,\n      overflow: { top: this.containerSize.height / 2 },\n    };\n\n    return { start, end };\n  };\n\n  private renderArcElement = (style: ArcElementStyle, size: Size): React.ReactElement<ViewProps> => {\n    const arcSize: Size = new Size(size.width, size.height / 2);\n\n    return (\n      <Animated.View style={[style.container, styles.absolute, size]}>\n        <View style={[styles.noOverflow, style.overflow, arcSize]}>\n          <Animated.View style={[style.arc, size]}>\n            <View style={[styles.noOverflow, arcSize]}>\n              <View style={[this.props.themedStyle, this.props.style]}/>\n            </View>\n          </Animated.View>\n        </View>\n      </Animated.View>\n    );\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const containerSize: Size = this.containerSize;\n    const { start, end } = this.getComponentStyle(this.animation.toProps());\n\n    return (\n      <View style={containerSize}>\n        {this.renderArcElement(start, containerSize)}\n        {this.renderArcElement(end, containerSize)}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  absolute: StyleSheet.absoluteFillObject,\n  noOverflow: {\n    overflow: 'hidden',\n  },\n});\n\nexport const Spinner = styled<SpinnerProps>(SpinnerComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\nimport {\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport { TabElement } from './tab.component';\nimport { TabIndicator } from '../support/components';\n\ntype ChildrenProp = TabElement | TabElement[];\n\ninterface ComponentProps {\n  children: ChildrenProp;\n  selectedIndex?: number;\n  indicatorStyle?: StyleProp<ViewStyle>;\n  onSelect?: (index: number) => void;\n}\n\nexport type TabBarProps = StyledComponentProps & ViewProps & ComponentProps;\nexport type TabBarElement = React.ReactElement<TabBarProps>;\n\n/**\n * The `TabBar` component that manages `Tab` components.\n *\n * @extends React.Component\n *\n * @property {number} selectedIndex - Determines current tab index.\n *\n * @property {StyleProp<ViewStyle>} indicatorStyle - Determines style of selected tab indicator.\n *\n * @property {(index: number) => void} onSelect - Fires on tab select with corresponding index.\n *\n * @property {React.ReactElement<TabProps>} children - Determines tabs.\n *\n * @property {ViewProps} ...ViewProps - Any props applied to View component.\n *\n * @overview-example TabBarSimpleUsage\n *\n * @overview-example Using with React Navigation\n *\n * ```\n * import React from 'react';\n * import { createAppContainer, SafeAreaView } from 'react-navigation';\n * import { createMaterialTopTabNavigator } from 'react-navigation-tabs';\n * import { TabBar, Tab, Layout, Text } from 'react-native-ui-kitten';\n *\n * // React Navigation also requires installing additional dependencies:\n * //\n * // npm i react-navigation react-navigation-tabs react-native-reanimated react-native-gesture-handler\n * //\n * // Then install it for ios:\n * //\n * // cd ios && pod install\n *\n * const HomeScreen = () => (\n *   <Layout style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n *     <Text category='h1'>HOME</Text>\n *   </Layout>\n * );\n *\n * const SettingsScreen = () => (\n *   <Layout style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n *     <Text category='h1'>SETTINGS</Text>\n *   </Layout>\n * );\n *\n * const TabBarComponent = ({ navigation }) => {\n *\n *   const onSelect = (index) => {\n *     const { [index]: selectedTabRoute } = navigation.state.routes;\n *     navigation.navigate(selectedTabRoute.routeName);\n *   };\n *\n *   return (\n *     <SafeAreaView>\n *       <TabBar selectedIndex={navigation.state.index} onSelect={onSelect}>\n *         <Tab title='HOME'/>\n *         <Tab title='SETTINGS'/>\n *       </TabBar>\n *     </SafeAreaView>\n *   );\n * };\n *\n * const TabNavigator = createMaterialTopTabNavigator({\n *   Home: HomeScreen,\n *   Settings: SettingsScreen,\n * }, {\n *   tabBarComponent: TabBarComponent,\n * });\n *\n * export const AppNavigator = createAppContainer(TabNavigator);\n * ```\n */\nexport class TabBarComponent extends React.Component<TabBarProps> {\n\n  static styledComponentName: string = 'TabBar';\n\n  static defaultProps: Partial<TabBarProps> = {\n    selectedIndex: 0,\n  };\n\n  private tabIndicatorRef: React.RefObject<TabIndicator> = React.createRef();\n\n  public scrollToIndex(params: { index: number, animated?: boolean }): void {\n    const { current: tabIndicator } = this.tabIndicatorRef;\n\n    tabIndicator.scrollToIndex(params);\n  }\n\n  public scrollToOffset(params: { offset: number, animated?: boolean }): void {\n    const { current: tabIndicator } = this.tabIndicatorRef;\n\n    tabIndicator.scrollToOffset(params);\n  }\n\n  private onTabSelect = (index: number): void => {\n    if (this.props.onSelect) {\n      this.props.onSelect(index);\n    }\n  };\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const {\n      indicatorHeight,\n      indicatorBorderRadius,\n      indicatorBackgroundColor,\n      ...containerParameters\n    } = source;\n\n    return {\n      container: containerParameters,\n      item: {},\n      indicator: {\n        height: indicatorHeight,\n        borderRadius: indicatorBorderRadius,\n        backgroundColor: indicatorBackgroundColor,\n      },\n    };\n  };\n\n  private isTabSelected = (index: number): boolean => {\n    return index === this.props.selectedIndex;\n  };\n\n  private renderTabElement = (element: TabElement, index: number): TabElement => {\n    return React.cloneElement(element, {\n      key: index,\n      style: [styles.item, element.props.style],\n      selected: this.isTabSelected(index),\n      onSelect: () => this.onTabSelect(index),\n    });\n  };\n\n  private renderTabElements = (source: ChildrenProp): TabElement[] => {\n    return React.Children.map(source, this.renderTabElement);\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { themedStyle, style, indicatorStyle, selectedIndex, children, ...derivedProps } = this.props;\n    const componentStyle: StyleType = this.getComponentStyle(themedStyle);\n\n    const tabElements: TabElement[] = this.renderTabElements(children);\n\n    return (\n      <View>\n        <View\n          {...derivedProps}\n          style={[componentStyle.container, styles.container, style]}>\n          {tabElements}\n        </View>\n        <TabIndicator\n          ref={this.tabIndicatorRef}\n          style={[componentStyle.indicator, styles.indicator, indicatorStyle]}\n          selectedPosition={selectedIndex}\n          positions={tabElements.length}\n        />\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n  },\n  item: {\n    flex: 1,\n  },\n  indicator: {},\n});\n\nexport const TabBar = styled<TabBarProps>(TabBarComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\nimport { TabElement } from './tab.component';\nimport { TabBar } from './tabBar.component';\nimport { ViewPager } from '../viewPager/viewPager.component';\n\ntype TabContentElement = React.ReactElement<any>;\ntype ChildrenProp = TabElement | TabElement[];\n\nclass TabViewChildElement {\n  tab: TabElement;\n  content: TabContentElement;\n}\n\nclass TabViewChildren {\n  tabs: TabElement[] = [];\n  content: TabContentElement[] = [];\n}\n\ninterface ComponentProps {\n  children: ChildrenProp;\n  selectedIndex?: number;\n  tabBarStyle?: StyleProp<ViewStyle>;\n  indicatorStyle?: StyleProp<ViewStyle>;\n  shouldLoadComponent?: (index: number) => boolean;\n  onOffsetChange?: (offset: number) => void;\n  onSelect?: (index: number) => void;\n}\n\nexport type TabViewProps = ViewProps & ComponentProps;\nexport type TabViewElement = React.ReactElement<TabViewProps>;\n\n/**\n * `TabView` is a dynamic tabset component. Allows flipping through the tab \"pages\".\n *\n * @extends React.Component\n **\n * @property {number} selectedIndex - Determines current tab index.\n *\n * @property {StyleProp<ViewStyle>} tabBarStyle - Determines style TabBar component.\n *\n * @property {StyleProp<ViewStyle>} indicatorStyle - Determines style of selected tab indicator.\n *\n * @property {(index: number) => void} onSelect - Fires on \"page\" select with corresponding index.\n *\n * @property {TabElement | TabElement[]} children - Determines children of the component.\n *\n * @property {(index: number) => boolean} shouldLoadComponent - Determines loading behavior particular page and can be\n * used for lazy loading.\n *\n * @property {(offset: number) => void} onOffsetChange - Fires on scroll event with current scroll offset.\n *\n * @property {ViewProps} ...ViewProps - Any props applied to View component.\n *\n * @overview-example TabViewSimpleUsage\n *\n * @overview-example TabViewLazyLoading\n *\n * @example TabViewInlineStyling\n */\nexport class TabView extends React.Component<TabViewProps> {\n\n  static defaultProps: Partial<TabViewProps> = {\n    selectedIndex: 0,\n  };\n\n  private viewPagerRef: React.RefObject<ViewPager> = React.createRef();\n  private tabBarRef: React.RefObject<any> = React.createRef();\n\n  private onBarSelect = (index: number): void => {\n    const { current: viewPager } = this.viewPagerRef;\n\n    viewPager.scrollToIndex({ index, animated: true });\n  };\n\n  private onPagerOffsetChange = (offset: number): void => {\n    const { current: tabBar } = this.tabBarRef;\n    const tabCount: number = React.Children.count(tabBar.props.children);\n\n    tabBar.scrollToOffset({ offset: offset / tabCount });\n  };\n\n  private onPagerSelect = (selectedIndex: number): void => {\n    if (this.props.onSelect) {\n      this.props.onSelect(selectedIndex);\n    }\n  };\n\n  private renderComponentChild = (element: TabElement, index: number): TabViewChildElement => {\n    return {\n      tab: React.cloneElement(element, { key: index }),\n      content: element.props.children,\n    };\n  };\n\n  private renderComponentChildren = (source: ChildrenProp): TabViewChildren => {\n    return React.Children.toArray(source).reduce((acc: TabViewChildren, element: TabElement, index: number) => {\n      const { tab, content } = this.renderComponentChild(element, index);\n      return {\n        tabs: [...acc.tabs, tab],\n        content: [...acc.content, content],\n      };\n    }, new TabViewChildren());\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { style, selectedIndex, children, tabBarStyle, indicatorStyle, ...derivedProps } = this.props;\n\n    const { tabs, content } = this.renderComponentChildren(children);\n\n    return (\n      <View\n        style={[styles.container, style]}\n        {...derivedProps}>\n        <TabBar\n          style={tabBarStyle}\n          ref={this.tabBarRef}\n          selectedIndex={selectedIndex}\n          indicatorStyle={indicatorStyle}\n          onSelect={this.onBarSelect}>\n          {tabs}\n        </TabBar>\n        <ViewPager\n          ref={this.viewPagerRef}\n          {...derivedProps}\n          style={[styles.container, style]}\n          selectedIndex={selectedIndex}\n          shouldLoadComponent={this.props.shouldLoadComponent}\n          onOffsetChange={this.onPagerOffsetChange}\n          onSelect={this.onPagerSelect}>\n          {content}\n        </ViewPager>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    overflow: 'hidden',\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  ImageProps,\n  ImageStyle,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  TouchableOpacity,\n  TouchableOpacityProps,\n} from 'react-native';\nimport {\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport {\n  Text,\n  TextElement,\n} from '../text/text.component';\nimport { isValidString } from '../support/services';\n\ntype IconElement = React.ReactElement<ImageProps>;\ntype IconProp = (style: ImageStyle) => React.ReactElement<ImageProps>;\ntype ContentElement = React.ReactElement<any>;\n\ninterface ComponentProps {\n  title?: string;\n  titleStyle?: StyleProp<TextStyle>;\n  icon?: IconProp;\n  selected?: boolean;\n  onSelect?: (selected: boolean) => void;\n  children?: ContentElement;\n}\n\nexport type TabProps = StyledComponentProps & TouchableOpacityProps & ComponentProps;\nexport type TabElement = React.ReactElement<TabProps>;\n\n/**\n * `Tab` component is a part of `TabBar` or `TabView` component.\n * `TabView` Tabs should be wrapped in `TabBar` or `TabView` to provide usable component.\n * See usage examples at `TabView` component documentation.\n *\n * @extends React.Component\n *\n * @property {string} title - Determines the title of the component.\n *\n * @property {StyleProp<TextStyle>} titleStyle - Determines style of the title.\n *\n * @property {React.ReactElement<any>} children - Determines content of the tab.\n *\n * @property {(style: StyleType) => React.ReactElement<ImageProps>} icon - Determines icon of the component.\n *\n * @property {boolean} selected - Determines tab selection state.\n *\n * @property {(selected: boolean) => void} onSelect = Fires on onSelect event.\n *\n * @property {TouchableOpacityProps} ...TouchableOpacityProps - Any props applied to TouchableOpacity component.\n *\n * @overview-example TabSimpleUsage\n *\n * @overview-example TabWithIcon\n *\n * @example TabWithExternalSourceIcon\n *\n * @example TabInlineStyling\n */\nexport class TabComponent extends React.Component<TabProps> {\n\n  static styledComponentName: string = 'Tab';\n\n  static defaultProps: Partial<TabProps> = {\n    selected: false,\n  };\n\n  private onPress = (): void => {\n    if (this.props.onSelect) {\n      this.props.onSelect(!this.props.selected);\n    }\n  };\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const {\n      textMarginVertical,\n      textFontFamily,\n      textFontSize,\n      textLineHeight,\n      textFontWeight,\n      textColor,\n      iconWidth,\n      iconHeight,\n      iconMarginVertical,\n      iconTintColor,\n      ...containerParameters\n    } = source;\n\n    return {\n      container: containerParameters,\n      icon: {\n        width: iconWidth,\n        height: iconHeight,\n        marginVertical: iconMarginVertical,\n        tintColor: iconTintColor,\n      },\n      title: {\n        marginVertical: textMarginVertical,\n        fontFamily: textFontFamily,\n        fontSize: textFontSize,\n        lineHeight: textLineHeight,\n        fontWeight: textFontWeight,\n        color: textColor,\n      },\n    };\n  };\n\n  private renderTitleElement = (style: TextStyle): TextElement => {\n    const { title, titleStyle } = this.props;\n\n    return (\n      <Text\n        key={1}\n        style={[style, styles.title, titleStyle]}>\n        {title}\n      </Text>\n    );\n  };\n\n  private renderIconElement = (style: ImageStyle): IconElement => {\n    const iconElement: React.ReactElement<ImageProps> = this.props.icon(style);\n\n    return React.cloneElement(iconElement, {\n      key: 2,\n      style: [style, styles.icon, iconElement.props.style],\n    });\n  };\n\n  private renderComponentChildren = (style: StyleType): React.ReactNodeArray => {\n    const { title, icon } = this.props;\n\n    return [\n      icon && this.renderIconElement(style.icon),\n      isValidString(title) && this.renderTitleElement(style.title),\n    ];\n  };\n\n  public render(): React.ReactElement<TouchableOpacityProps> {\n    const { themedStyle, style, ...derivedProps } = this.props;\n    const { container, ...componentStyles } = this.getComponentStyle(themedStyle);\n\n    const [iconElement, titleElement] = this.renderComponentChildren(componentStyles);\n\n    return (\n      <TouchableOpacity\n        activeOpacity={1.0}\n        {...derivedProps}\n        style={[container, styles.container, style]}\n        onPress={this.onPress}>\n        {iconElement}\n        {titleElement}\n      </TouchableOpacity>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  icon: {},\n  title: {},\n});\n\nexport const Tab = styled<TabProps>(TabComponent);\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Interaction } from '@kitten/theme';\nimport {\n  Tab as RNTab,\n  TabElement as RNTabElement,\n  TabProps as RNTabProps,\n  // @ts-ignore\n} from './tab.component.tsx';\nimport {\n  WebEventResponder,\n  WebEventResponderCallbacks,\n  WebEventResponderInstance,\n} from '../support/services';\n\nexport type TabProps = RNTabProps & WebEventResponderCallbacks;\nexport type TabElement = React.ReactElement<TabProps>;\n\nexport class Tab extends React.Component<TabProps> implements WebEventResponderCallbacks {\n\n  private tabRef: React.RefObject<any> = React.createRef();\n  private webEventResponder: WebEventResponderInstance = WebEventResponder.create(this);\n\n  public onMouseEnter = (): void => {\n    this.tabRef.current.props.dispatch([Interaction.HOVER]);\n\n    if (this.props.onMouseEnter) {\n      this.props.onMouseEnter();\n    }\n  };\n\n  public onMouseLeave = (): void => {\n    this.tabRef.current.props.dispatch([]);\n\n    if (this.props.onMouseLeave) {\n      this.props.onMouseLeave();\n    }\n  };\n\n  public onFocus = (): void => {\n    if (this.props.onFocus) {\n      this.props.onFocus();\n    }\n  };\n\n  public onBlur = (): void => {\n    if (this.props.onBlur) {\n      this.props.onBlur();\n    }\n  };\n\n  public render(): RNTabElement {\n    const { style, ...restProps } = this.props;\n\n    return (\n      <RNTab\n        {...restProps}\n        {...this.webEventResponder.eventHandlers}\n        ref={this.tabRef}\n        style={[style, styles.element]}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  element: {\n    // @ts-ignore\n    outlineWidth: 0,\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  Animated,\n  Easing,\n  GestureResponderEvent,\n  PanResponder,\n  PanResponderCallbacks,\n  PanResponderGestureState,\n  PanResponderInstance,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  TouchableOpacity,\n  View,\n  ViewProps,\n} from 'react-native';\nimport {\n  Interaction,\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport {\n  Text,\n  TextElement,\n} from '../text/text.component';\nimport { CheckMark } from '../support/components';\nimport { I18nLayoutService } from '../support/services';\n\ninterface ComponentProps {\n  checked?: boolean;\n  disabled?: boolean;\n  status?: string;\n  size?: string;\n  text?: string;\n  textStyle?: StyleProp<TextStyle>;\n  onChange?: (checked: boolean) => void;\n}\n\nexport type ToggleProps = StyledComponentProps & ViewProps & ComponentProps;\nexport type ToggleElement = React.ReactElement<ToggleProps>;\n\n/**\n * Styled `Toggle` component.\n *\n * @extends React.Component\n *\n * @property {boolean} checked - Determines whether component is checked.\n * Default is `false`.\n *\n * @property {boolean} disabled - Determines whether component is disabled.\n * Default is `false`.\n *\n * @property {string} status - Determines the status of the component.\n * Can be `basic`, `primary`, `success`, `info`, `warning`, `danger` or `control`.\n * Default is `basic`.\n *\n * @property {string} text - Determines text of the component.\n *\n * @property {StyleProp<TextStyle>} textStyle - Customizes text style.\n *\n * @property {(checked: boolean) => void} onChange - Fires when selection state is changed.\n *\n * @property {TouchableOpacityProps} ...TouchableOpacityProps - Any props applied to TouchableOpacity component.\n *\n * @overview-example ToggleSimpleUsage\n *\n * @overview-example ToggleStatus\n *\n * @overview-example ToggleSize\n *\n * @overview-example ToggleWithText\n *\n * @example ToggleInlineStyling\n */\nexport class ToggleComponent extends React.Component<ToggleProps> implements PanResponderCallbacks {\n\n  static styledComponentName: string = 'Toggle';\n\n  private panResponder: PanResponderInstance;\n  private thumbWidthAnimation: Animated.Value;\n  private thumbTranslateAnimation: Animated.Value;\n  private ellipseScaleAnimation: Animated.Value;\n  private thumbTranslateAnimationActive: boolean;\n\n  constructor(props: ToggleProps) {\n    super(props);\n\n    const { checked, themedStyle } = props;\n\n    this.thumbWidthAnimation = new Animated.Value(themedStyle.thumbWidth);\n    this.thumbTranslateAnimation = new Animated.Value(0);\n    this.ellipseScaleAnimation = new Animated.Value(checked ? 0.01 : 1.0);\n    this.thumbTranslateAnimationActive = false;\n\n    this.panResponder = PanResponder.create(this);\n  }\n\n  // PanResponderCallbacks\n\n  public onStartShouldSetPanResponder = (): boolean => {\n    return true;\n  };\n\n  public onStartShouldSetPanResponderCapture = (): boolean => {\n    return true;\n  };\n\n  public onMoveShouldSetPanResponder = (): boolean => {\n    return true;\n  };\n\n  public onMoveShouldSetPanResponderCapture = (): boolean => {\n    return true;\n  };\n\n  public onPanResponderTerminationRequest = (): boolean => {\n    return false;\n  };\n\n  public onPanResponderGrant = (): void => {\n    const { checked, disabled, themedStyle } = this.props;\n\n    if (disabled) {\n      return;\n    }\n\n    this.onPressIn();\n\n    if (this.thumbTranslateAnimationActive) {\n      this.thumbTranslateAnimationActive = false;\n      this.stopAnimations();\n      return;\n    }\n\n    this.animateThumbWidth(themedStyle.thumbWidth * 1.2);\n    this.animateEllipseScale(checked ? 1 : 0.01);\n  };\n\n  public onPanResponderMove: () => boolean = (): boolean => {\n    return true;\n  };\n\n  public onPanResponderRelease = (e: GestureResponderEvent, gestureState: PanResponderGestureState): void => {\n    const { checked, disabled, themedStyle } = this.props;\n\n    if (!disabled) {\n      if ((!checked && gestureState.dx > -5) || (checked && gestureState.dx < 5)) {\n        this.toggle(this.onPress);\n      } else {\n        this.animateEllipseScale(checked ? 0.01 : 1);\n      }\n    }\n\n    this.animateThumbWidth(themedStyle.thumbWidth);\n    this.onPressOut();\n  };\n\n  private onPressIn = (): void => {\n    this.props.dispatch([Interaction.ACTIVE]);\n  };\n\n  private onPressOut = (): void => {\n    this.props.dispatch([]);\n  };\n\n  private onPress = (): void => {\n    if (this.props.onChange) {\n      this.props.onChange(!this.props.checked);\n    }\n  };\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const { checked, disabled } = this.props;\n\n    const {\n      outlineWidth,\n      outlineHeight,\n      outlineBorderRadius,\n      outlineBackgroundColor,\n      thumbWidth,\n      thumbHeight,\n      thumbBorderRadius,\n      thumbBackgroundColor,\n      textMarginHorizontal,\n      textFontSize,\n      textFontWeight,\n      textLineHeight,\n      textFontFamily,\n      textColor,\n      iconWidth,\n      iconHeight,\n      iconTintColor,\n      backgroundColor,\n      borderColor,\n      ...containerParameters\n    } = source;\n\n    return {\n      toggleContainer: {},\n      ellipseContainer: {\n        borderColor: borderColor,\n        backgroundColor: backgroundColor,\n        ...containerParameters,\n      },\n      highlight: {\n        width: outlineWidth,\n        height: outlineHeight,\n        borderRadius: outlineBorderRadius,\n        backgroundColor: outlineBackgroundColor,\n      },\n      ellipse: {\n        width: containerParameters.width - (containerParameters.borderWidth * 2),\n        height: containerParameters.height - (containerParameters.borderWidth * 2),\n        borderRadius: (source.height - (source.borderWidth * 2)) / 2,\n        backgroundColor: backgroundColor,\n      },\n      thumb: {\n        alignSelf: checked ? 'flex-end' : 'flex-start',\n        width: this.thumbWidthAnimation,\n        height: thumbHeight,\n        borderRadius: thumbBorderRadius,\n        backgroundColor: thumbBackgroundColor,\n        elevation: disabled ? 0 : 5,\n        transform: [{ translateX: this.thumbTranslateAnimation }],\n      },\n      text: {\n        marginHorizontal: textMarginHorizontal,\n        fontSize: textFontSize,\n        fontWeight: textFontWeight,\n        lineHeight: textLineHeight,\n        fontFamily: textFontFamily,\n        color: textColor,\n      },\n      icon: {\n        width: source.iconWidth,\n        height: source.iconHeight,\n        backgroundColor: iconTintColor,\n      },\n    };\n  };\n\n  private animateThumbTranslate = (value: number, callback: () => void = () => null): void => {\n    this.thumbTranslateAnimationActive = true;\n\n    Animated.timing(this.thumbTranslateAnimation, {\n      toValue: I18nLayoutService.select(value, -value),\n      duration: 150,\n      easing: Easing.linear,\n    }).start(() => {\n      this.thumbTranslateAnimationActive = false;\n      callback();\n    });\n  };\n\n  private animateThumbWidth = (value: number, callback: () => void = () => null): void => {\n    Animated.timing(this.thumbWidthAnimation, {\n      toValue: value,\n      duration: 150,\n      easing: Easing.linear,\n    }).start(callback);\n  };\n\n  private animateEllipseScale = (value: number, callback: () => void = () => null): void => {\n    Animated.timing(this.ellipseScaleAnimation, {\n      toValue: value,\n      duration: 200,\n      easing: Easing.linear,\n    }).start(callback);\n  };\n\n  private stopAnimations = (): void => {\n    const value: number = this.props.checked ? 0.01 : 1;\n\n    this.thumbTranslateAnimation.stopAnimation();\n    this.ellipseScaleAnimation.stopAnimation();\n    this.thumbWidthAnimation.stopAnimation();\n\n    this.ellipseScaleAnimation.setValue(value);\n  };\n\n  private toggle = (callback = (nextValue: boolean) => null): void => {\n    const value: number = this.props.checked ? -20 : 20;\n\n    this.animateThumbTranslate(value, () => {\n      this.thumbTranslateAnimation.setValue(0);\n      callback(!this.props.checked);\n    });\n\n    this.animateThumbWidth(this.props.themedStyle.thumbWidth);\n  };\n\n  private renderTextElement = (style: StyleType): TextElement => {\n    return (\n      <Text style={[style, this.props.textStyle]}>\n        {this.props.text}\n      </Text>\n    );\n  };\n\n  private renderComponentChildren = (style: StyleType): React.ReactNodeArray => {\n    return [\n      this.props.text && this.renderTextElement(style.text),\n    ];\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { themedStyle, style, checked, ...restProps } = this.props;\n\n    const componentStyle: StyleType = this.getComponentStyle(themedStyle);\n    const [textElement] = this.renderComponentChildren(componentStyle);\n\n    return (\n      <View\n        {...this.panResponder.panHandlers}\n        style={[styles.container, style]}>\n        <TouchableOpacity\n          activeOpacity={1.0}\n          {...restProps}\n          style={[componentStyle.toggleContainer, styles.toggleContainer]}>\n          <View style={[componentStyle.highlight, styles.highlight]}/>\n          <Animated.View style={[componentStyle.ellipseContainer, styles.ellipseContainer]}>\n            <Animated.View style={[componentStyle.ellipse, styles.ellipse]}/>\n            <Animated.View style={[componentStyle.thumb, styles.thumb]}>\n              <CheckMark style={componentStyle.icon} isAnimated={true}/>\n            </Animated.View>\n          </Animated.View>\n        </TouchableOpacity>\n        {textElement}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  toggleContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  ellipseContainer: {\n    justifyContent: 'center',\n    alignSelf: 'center',\n    overflow: 'hidden',\n  },\n  ellipse: {\n    alignSelf: 'center',\n    position: 'absolute',\n  },\n  highlight: {\n    alignSelf: 'center',\n    position: 'absolute',\n  },\n  thumb: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n\nexport const Toggle = styled<ToggleProps>(ToggleComponent);\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Interaction } from '@kitten/theme';\nimport {\n  Toggle as RNToggle,\n  ToggleElement as RNToggleElement,\n  ToggleProps as RNToggleProps,\n  // @ts-ignore\n} from './toggle.component.tsx';\nimport {\n  WebEventResponder,\n  WebEventResponderCallbacks,\n  WebEventResponderInstance,\n} from '../support/services';\n\nexport type ToggleProps = RNToggleProps & WebEventResponderCallbacks;\nexport type ToggleElement = React.ReactElement<ToggleProps>;\n\nexport class Toggle extends React.Component<ToggleProps> implements WebEventResponderCallbacks {\n\n  private toggleRef: React.RefObject<any> = React.createRef();\n  private webEventResponder: WebEventResponderInstance = WebEventResponder.create(this);\n\n  public onMouseEnter = (): void => {\n    if (!this.props.disabled) {\n      this.toggleRef.current.props.dispatch([Interaction.HOVER]);\n    }\n\n    if (this.props.onMouseEnter) {\n      this.props.onMouseEnter();\n    }\n  };\n\n  public onMouseLeave = (): void => {\n    if (!this.props.disabled) {\n      this.toggleRef.current.props.dispatch([]);\n    }\n\n    if (this.props.onMouseLeave) {\n      this.props.onMouseLeave();\n    }\n  };\n\n  public onFocus = (): void => {\n    if (!this.props.disabled) {\n      this.toggleRef.current.props.dispatch([Interaction.FOCUSED]);\n    }\n\n    if (this.props.onFocus) {\n      this.props.onFocus();\n    }\n  };\n\n  public onBlur = (): void => {\n    if (!this.props.disabled) {\n      this.toggleRef.current.props.dispatch([]);\n    }\n\n    if (this.props.onBlur) {\n      this.props.onBlur();\n    }\n  };\n\n  public render(): RNToggleElement {\n    const { style, ...restProps } = this.props;\n\n    return (\n      <RNToggle\n        {...restProps}\n        {...this.webEventResponder.eventHandlers}\n        ref={this.toggleRef}\n        style={[style, styles.element]}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  element: {\n    // @ts-ignore\n    outlineWidth: 0,\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  ImageProps,\n  ImageStyle,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  View,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\nimport {\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport {\n  Text,\n  TextElement,\n} from '../text/text.component';\nimport {\n  Popover,\n  PopoverElement,\n  PopoverProps,\n} from '../popover/popover.component';\nimport { ModalPresentingBased } from '../support/typings';\n\ntype IconElement = React.ReactElement<ImageProps>;\ntype IconProp = (style: StyleType) => IconElement;\ntype WrappingElement = React.ReactElement<any>;\n\ntype PopoverContentProps = Omit<PopoverProps, 'content'>;\n\ninterface ComponentProps extends PopoverContentProps, ModalPresentingBased {\n  text: string;\n  textStyle?: StyleProp<TextStyle>;\n  icon?: IconProp;\n  children: WrappingElement;\n}\n\nexport type TooltipProps = StyledComponentProps & ComponentProps;\nexport type TooltipElement = React.ReactElement<TooltipProps>;\n\n/**\n * `Tooltip` displays informative text when users focus on or tap an element.\n *\n * @extends React.Component\n *\n * @property {string} text - Determines the text of the tooltip\n *\n * @property {StyleProp<TextStyle>} textStyle - Customizes text style.\n *\n * @property {(style: StyleType) => React.ReactElement<ImageProps>} icon - Determines icon of the component.\n *\n * @property {React.ReactElement<any>} children - Determines the element \"above\" which popover will be shown.\n *\n * @property {boolean} visible - Determines whether popover is visible or not.\n *\n * @property {string | PopoverPlacement} placement - Determines the placement of the popover.\n * Can be `left`, `top`, `right`, `bottom`, `left start`, `left end`, `top start`, `top end`, `right start`,\n * `right end`, `bottom start` or `bottom end`.\n * Default is `bottom`.\n *\n * @property {number} indicatorOffset - Determines the offset of indicator (arrow).\n * @property {StyleProp<ViewStyle>} indicatorStyle - Determines style of indicator (arrow).\n *\n * @property {Omit<PopoverProps, 'content'>} ...PopoverProps - Any props applied to Popover component, excluding `content`.\n *\n * @property {ModalPresentingBased} ...ModalProps - Any props applied to Modal component.\n *\n * @overview-example TooltipSimpleUsage\n *\n * @overview-example TooltipWithIcon\n *\n * @overview-example TooltipPlacement\n *\n * @example TooltipWithExternalSourceIcon\n *\n * @example TooltipInlineStyling\n */\nexport class TooltipComponent extends React.Component<TooltipProps> {\n\n  static styledComponentName: string = 'Tooltip';\n\n  static defaultProps: Partial<TooltipProps> = {\n    indicatorOffset: 8,\n  };\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const {\n      indicatorBackgroundColor,\n      iconWidth,\n      iconHeight,\n      iconMarginHorizontal,\n      iconTintColor,\n      textMarginHorizontal,\n      textFontSize,\n      textFontFamily,\n      textLineHeight,\n      textColor,\n      ...containerParameters\n    } = source;\n\n    return {\n      container: containerParameters,\n      content: {},\n      indicator: {\n        backgroundColor: indicatorBackgroundColor,\n      },\n      icon: {\n        width: iconWidth,\n        height: iconHeight,\n        marginHorizontal: iconMarginHorizontal,\n        tintColor: iconTintColor,\n      },\n      text: {\n        marginHorizontal: textMarginHorizontal,\n        fontFamily: textFontFamily,\n        fontSize: textFontSize,\n        lineHeight: textLineHeight,\n        color: textColor,\n      },\n    };\n  };\n\n  private renderTextElement = (style: TextStyle): TextElement => {\n    const { text, textStyle } = this.props;\n\n    return (\n      <Text\n        key={1}\n        style={[style, styles.text, textStyle]}>\n        {text}\n      </Text>\n    );\n  };\n\n  private renderIconElement = (style: ImageStyle): IconElement => {\n    const iconElement: IconElement = this.props.icon(style);\n\n    return React.cloneElement(iconElement, {\n      key: 0,\n      style: [style, styles.icon, iconElement.props.style],\n    });\n  };\n\n  private renderContentElementChildren = (style: StyleType): React.ReactNodeArray => {\n    const { icon } = this.props;\n\n    return [\n      icon && this.renderIconElement(style.icon),\n      this.renderTextElement(style.text),\n    ];\n  };\n\n  private renderPopoverContentElement = (style: StyleType): React.ReactElement<ViewProps> => {\n    const { content, ...childrenStyle } = style;\n\n    const contentChildren: React.ReactNode = this.renderContentElementChildren(childrenStyle);\n\n    return (\n      <View style={[content, styles.content]}>\n        {contentChildren}\n      </View>\n    );\n  };\n\n  public render(): PopoverElement {\n    const { themedStyle, style, indicatorStyle, children, ...derivedProps } = this.props;\n    const { container, indicator, ...componentStyle } = this.getComponentStyle(themedStyle);\n\n    const contentElement: TextElement = this.renderPopoverContentElement(componentStyle);\n\n    return (\n      <Popover\n        {...derivedProps}\n        style={[container, styles.container, style]}\n        indicatorStyle={[indicator, indicatorStyle]}\n        content={contentElement}>\n        {children}\n      </Popover>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {},\n  content: {\n    flexDirection: 'row',\n  },\n  indicator: {},\n  icon: {},\n  text: {\n    alignSelf: 'center',\n  },\n});\n\nexport const Tooltip = styled<TooltipProps>(TooltipComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  View,\n  ViewProps,\n} from 'react-native';\nimport {\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport { TopNavigationActionElement } from './topNavigationAction.component';\nimport {\n  Text,\n  TextElement,\n} from '../text/text.component';\nimport { isValidString } from '../support/services';\n\ntype ActionElementProp = TopNavigationActionElement | TopNavigationActionElement[];\ntype AlignmentProp = 'start' | 'center';\n\ninterface ComponentProps {\n  title?: string;\n  titleStyle?: StyleProp<TextStyle>;\n  subtitle?: string;\n  subtitleStyle?: StyleProp<TextStyle>;\n  alignment?: AlignmentProp;\n  leftControl?: TopNavigationActionElement;\n  rightControls?: ActionElementProp;\n}\n\nexport type TopNavigationProps = StyledComponentProps & ViewProps & ComponentProps;\nexport type TopNavigationElement = React.ReactElement<TopNavigationProps>;\n\n/**\n * `TopNavigation` component is designed to be a Navigation Bar.\n * Can be used for navigation.\n *\n * @extends React.Component\n *\n * @property {string} title - Determines the title of the component.\n *\n * @property {string} subtitle - Determines the subtitle of the component.\n *\n * @property {string} alignment - Determines the alignment of the component.\n * Can be `center` or `start`.\n *\n * @property {React.ReactElement<TopNavigationActionProps>} leftControl - Determines the left control\n * of the component.\n *\n * @property {React.ReactElement<TopNavigationActionProps>[]} rightControls - Determines the right controls\n * of the component.\n *\n * @property {StyleProp<TextStyle>} titleStyle - Customizes text style of title.\n *\n * @property {StyleProp<TextStyle>} subtitleStyle - Customizes text style of subtitle.\n *\n * @property {ViewProps} ...ViewProps - Any props applied to View component.\n *\n * @overview-example TopNavigationSimpleUsage\n *\n * @overview-example TopNavigationActions\n *\n * @overview-example TopNavigationAlignments\n *\n * @overview-example TopNavigationWithMenu\n *\n * @example TopNavigationInlineStyling\n */\nexport class TopNavigationComponent extends React.Component<TopNavigationProps> {\n\n  static styledComponentName: string = 'TopNavigation';\n\n  private getAlignmentDependentStyles = (alignment: AlignmentProp): StyleType => {\n    if (alignment === 'center') {\n      return {\n        container: styles.containerCentered,\n        titleContainer: styles.titleContainerCentered,\n      };\n    }\n\n    return {\n      rightControlsContainer: styles.rightControlsContainerStart,\n    };\n  };\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const {\n      titleTextAlign,\n      titleFontFamily,\n      titleFontSize,\n      titleLineHeight,\n      titleFontWeight,\n      titleColor,\n      subtitleTextAlign,\n      subtitleFontFamily,\n      subtitleFontSize,\n      subtitleLineHeight,\n      subtitleFontWeight,\n      subtitleColor,\n      ...containerParameters\n    } = source;\n\n\n    return {\n      container: containerParameters,\n      titleContainer: {},\n      title: {\n        textAlign: titleTextAlign,\n        fontFamily: titleFontFamily,\n        fontSize: titleFontSize,\n        lineHeight: titleLineHeight,\n        fontWeight: titleFontWeight,\n        color: titleColor,\n      },\n      subtitle: {\n        textAlign: subtitleTextAlign,\n        fontFamily: subtitleFontFamily,\n        fontSize: subtitleFontSize,\n        color: subtitleColor,\n        fontWeight: subtitleFontWeight,\n        lineHeight: subtitleLineHeight,\n      },\n      leftControlContainer: {},\n      rightControlsContainer: {},\n    };\n  };\n\n  private renderTextElement = (text: string, style: StyleProp<TextStyle>): TextElement => {\n    return (\n      <Text style={style}>\n        {text}\n      </Text>\n    );\n  };\n\n  private renderActionElements(source: ActionElementProp): TopNavigationActionElement[] {\n    return React.Children.map(source, (element: TopNavigationActionElement, index: number) => {\n      return React.cloneElement(element, {\n        key: index,\n        appearance: this.props.appearance,\n      });\n    });\n  }\n\n  private renderComponentChildren = (style: StyleType): React.ReactNodeArray => {\n    const {\n      title,\n      subtitle,\n      leftControl,\n      rightControls,\n      titleStyle,\n      subtitleStyle,\n    } = this.props;\n\n    return [\n      isValidString(title) && this.renderTextElement(title, [style.title, styles.title, titleStyle]),\n      isValidString(subtitle) && this.renderTextElement(subtitle, [style.subtitle, styles.subtitle, subtitleStyle]),\n      leftControl && this.renderActionElements(leftControl),\n      rightControls && this.renderActionElements(rightControls),\n    ];\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { themedStyle, style, alignment, ...restProps } = this.props;\n\n    const {\n      container,\n      leftControlContainer,\n      titleContainer,\n      rightControlsContainer,\n      ...componentStyles\n    } = this.getComponentStyle(themedStyle);\n\n    const alignmentStyles: StyleType = this.getAlignmentDependentStyles(alignment);\n\n    const [\n      titleElement,\n      subtitleElement,\n      leftControlElement,\n      rightControlElements,\n    ] = this.renderComponentChildren(componentStyles);\n\n    return (\n      <View\n        style={[container, styles.container, alignmentStyles.container, style]}\n        {...restProps}>\n        <View style={[leftControlContainer, styles.leftControlContainer]}>\n          {leftControlElement}\n        </View>\n        <View style={[titleContainer, styles.titleContainer, alignmentStyles.titleContainer]}>\n          {titleElement}\n          {subtitleElement}\n        </View>\n        <View style={[rightControlsContainer, styles.rightControlsContainer, alignmentStyles.rightControlsContainer]}>\n          {rightControlElements}\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  containerCentered: {\n    justifyContent: 'space-between',\n  },\n  titleContainer: {},\n  titleContainerCentered: {\n    ...StyleSheet.absoluteFillObject,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  title: {},\n  subtitle: {},\n  leftControlContainer: {\n    flexDirection: 'row',\n    zIndex: 1,\n  },\n  rightControlsContainer: {\n    flexDirection: 'row',\n    zIndex: 1,\n  },\n  rightControlsContainerStart: {\n    flex: 1,\n    justifyContent: 'flex-end',\n  },\n});\n\nexport const TopNavigation = styled<TopNavigationProps>(TopNavigationComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  GestureResponderEvent,\n  ImageProps,\n  ImageStyle,\n  Insets,\n  StyleProp,\n  StyleSheet,\n  TouchableOpacity,\n  TouchableOpacityProps,\n} from 'react-native';\nimport {\n  Interaction,\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\n\ntype IconElement = React.ReactElement<ImageProps>;\ntype IconProp = (style: StyleType) => IconElement;\n\ninterface ComponentProps {\n  icon: IconProp;\n}\n\nexport type TopNavigationActionProps = StyledComponentProps & TouchableOpacityProps & ComponentProps;\nexport type TopNavigationActionElement = React.ReactElement<TopNavigationActionProps>;\n\n/**\n * The `TopNavigationAction` component is a part of the `TopNavigation` component.\n * `TopNavigationActions` should be used in `TopNavigation` to provide usable component.\n * See usage examples at `TopNavigation` component documentation.\n *\n * @extends React.Component\n *\n * @property {(style: StyleType) => React.ReactElement<ImageProps>} icon - Determines the icon of the tab.\n *\n * @property {TouchableOpacityProps} ...TouchableOpacityProps - Any props applied to TouchableOpacity component.\n *\n * @overview-example TopNavigationActionSimpleUsage\n *\n * @example TopNavigationActionExternalSourceIcon\n *\n * @example TopNavigationActionInlineStyling\n */\nclass TopNavigationActionComponent extends React.Component<TopNavigationActionProps> {\n\n  static styledComponentName: string = 'TopNavigationAction';\n\n  private onPress = (event: GestureResponderEvent): void => {\n    if (this.props.onPress) {\n      this.props.onPress(event);\n    }\n  };\n\n  private onPressIn = (event: GestureResponderEvent): void => {\n    this.props.dispatch([Interaction.ACTIVE]);\n\n    if (this.props.onPressIn) {\n      this.props.onPressIn(event);\n    }\n  };\n\n  private onPressOut = (event: GestureResponderEvent): void => {\n    this.props.dispatch([]);\n\n    if (this.props.onPressOut) {\n      this.props.onPressOut(event);\n    }\n  };\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const {\n      iconTintColor,\n      iconWidth,\n      iconHeight,\n      iconMarginHorizontal,\n    } = source;\n\n    return {\n      container: {\n        marginHorizontal: iconMarginHorizontal,\n      },\n      icon: {\n        tintColor: iconTintColor,\n        width: iconWidth,\n        height: iconHeight,\n        ...styles.icon,\n      },\n    };\n  };\n\n  private createHitSlopInsets = (iconStyle: StyleProp<ImageStyle>): Insets => {\n    const flatStyle: ImageStyle = StyleSheet.flatten(iconStyle);\n\n    // @ts-ignore: `width` is restricted to be a number\n    const value: number = 40 - flatStyle.width;\n\n    return {\n      left: value,\n      top: value,\n      right: value,\n      bottom: value,\n    };\n  };\n\n  private renderIconElement = (style: StyleType): IconElement => {\n    const iconElement: IconElement = this.props.icon(style);\n\n    return React.cloneElement(iconElement, {\n      style: [style, iconElement.props.style],\n    });\n  };\n\n  public render(): React.ReactNode {\n    const { themedStyle, style, icon, ...touchableProps } = this.props;\n    const componentStyle: StyleType = this.getComponentStyle(themedStyle);\n\n    const hitSlopInsets: Insets = this.createHitSlopInsets(componentStyle.icon);\n\n    const iconElement: IconElement = this.renderIconElement(componentStyle.icon);\n\n    return (\n      <TouchableOpacity\n        activeOpacity={1.0}\n        hitSlop={hitSlopInsets}\n        {...touchableProps}\n        style={[componentStyle.container, styles.container, style]}\n        onPress={this.onPress}\n        onPressIn={this.onPressIn}\n        onPressOut={this.onPressOut}>\n        {iconElement}\n      </TouchableOpacity>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {},\n  icon: {},\n});\n\nexport const TopNavigationAction = styled<TopNavigationActionProps>(TopNavigationActionComponent);\n","import React from 'react';\n\nexport enum AppTheme {\n  light = 'Light',\n  dark = 'Dark',\n}\n\nexport interface ThemeContextType {\n  theme: AppTheme;\n  setTheme: (theme: AppTheme) => void;\n  isDarkMode: () => boolean;\n}\n\nexport const ThemeContext = React.createContext<ThemeContextType>({\n  theme: AppTheme.light,\n  setTheme: (theme: AppTheme) => {},\n  isDarkMode: () => false,\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Interaction } from '@kitten/theme';\nimport {\n  TopNavigationAction as RNTopNavigationAction,\n  TopNavigationActionElement as RNTopNavigationActionElement,\n  TopNavigationActionProps as RNTopNavigationActionProps,\n  // @ts-ignore\n} from './topNavigationAction.component.tsx';\nimport {\n  WebEventResponder,\n  WebEventResponderCallbacks,\n  WebEventResponderInstance,\n} from '../support/services';\n\nexport type TopNavigationActionProps = RNTopNavigationActionProps & WebEventResponderCallbacks;\nexport type TopNavigationActionElement = React.ReactElement<TopNavigationActionProps>;\n\nexport class TopNavigationAction extends React.Component<TopNavigationActionProps>\n  implements WebEventResponderCallbacks {\n\n  private topNavigationActionRef: React.RefObject<any> = React.createRef();\n  private webEventResponder: WebEventResponderInstance = WebEventResponder.create(this);\n\n  public onMouseEnter = (): void => {\n    this.topNavigationActionRef.current.props.dispatch([Interaction.HOVER]);\n\n    if (this.props.onMouseEnter) {\n      this.props.onMouseEnter();\n    }\n  };\n\n  public onMouseLeave = (): void => {\n    this.topNavigationActionRef.current.props.dispatch([]);\n\n    if (this.props.onMouseLeave) {\n      this.props.onMouseLeave();\n    }\n  };\n\n  public onFocus = (): void => {\n    this.topNavigationActionRef.current.props.dispatch([Interaction.FOCUSED]);\n\n    if (this.props.onFocus) {\n      this.props.onFocus();\n    }\n  };\n\n  public onBlur = (): void => {\n    this.topNavigationActionRef.current.props.dispatch([]);\n\n    if (this.props.onBlur) {\n      this.props.onBlur();\n    }\n  };\n\n  public render(): RNTopNavigationActionElement {\n    const { style, ...restProps } = this.props;\n\n    return (\n      <RNTopNavigationAction\n        {...restProps}\n        {...this.webEventResponder.eventHandlers}\n        ref={this.topNavigationActionRef}\n        style={[style, styles.element]}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  element: {\n    // @ts-ignore\n    outlineWidth: 0,\n  },\n});\n","import React from 'react';\nimport {\n  Icon,\n  IconElement,\n  StyleType,\n} from 'react-native-ui-kitten';\n\n/**\n * Should contain all icon names used in app.\n * Needed to support compatible icon names between different icon packs.\n */\nexport interface AppIconRegistry {\n  ['arrow-ios-downward']: string;\n  ['arrow-ios-upward']: string;\n  ['arrow-back']: string;\n  ['color-palette']: string;\n  ['grid']: string;\n  ['list']: string;\n  ['menu']: string;\n  ['more-vertical']: string;\n  ['search']: string;\n  ['settings']: string;\n  ['star']: string;\n  ['trash']: string;\n}\n\nexport const ArrowDownwardIcon = (style: StyleType): IconElement => (\n  <Icon name='arrow-ios-downward' {...style}/>\n);\n\nexport const ArrowUpwardIcon = (style: StyleType): IconElement => (\n  <Icon name='arrow-ios-upward' {...style}/>\n);\n\nexport const BackIcon = (style): IconElement => (\n  <Icon {...style} name='arrow-back'/>\n);\n\nexport const ColorPaletteIcon = (style: StyleType): IconElement => (\n  <Icon name='color-palette' {...style}/>\n);\n\nexport const GridIcon = (style: StyleType): IconElement => (\n  <Icon name='grid' {...style}/>\n);\n\nexport const ListIcon = (style: StyleType): IconElement => (\n  <Icon name='list' {...style}/>\n);\n\nexport const MenuIcon = (style): IconElement => (\n  <Icon {...style} name='menu'/>\n);\n\nexport const MoreVerticalIcon = (style): IconElement => (\n  <Icon {...style} name='more-vertical'/>\n);\n\nexport const SearchIcon = (style: StyleType): IconElement => (\n  <Icon {...style} name='search' />\n);\n\nexport const SettingsIcon = (style: StyleType): IconElement => (\n  <Icon {...style} name='settings' />\n);\n\nexport const StarIcon = (style: StyleType): IconElement => (\n  <Icon name='star' {...style}/>\n);\n\nexport const TrashIcon = (style: StyleType): IconElement => (\n  <Icon {...style} name='trash' />\n);\n\n\n","import React from 'react';\nimport {\n  LayoutChangeEvent,\n  Platform,\n  StyleSheet,\n  View,\n} from 'react-native';\nimport {\n  Button,\n  Layout,\n  LayoutProps,\n  OverflowMenu,\n  OverflowMenuItemType,\n  Text,\n} from 'react-native-ui-kitten';\nimport {\n  AppTheme,\n  ThemeContext,\n  ThemeContextType,\n} from '@pg/themes/themeContext';\nimport { ColorPaletteIcon } from '@pg/icons';\n\ninterface Props {\n  showcaseId: string;\n}\n\nexport type SharingHeightContainerProps = LayoutProps & Props;\n\nconst themes: AppTheme[] = [AppTheme.light, AppTheme.dark];\n\nexport const sharingHeightContainer = (Component: React.ComponentType,\n                                       showcaseId: string): React.ReactElement<SharingHeightContainerProps> => {\n\n  const [menuVisible, setMenuVisible] = React.useState(false);\n  const themeContext: ThemeContextType = React.useContext(ThemeContext);\n\n  const onThemesButtonPress = (): void => {\n    setMenuVisible(!menuVisible);\n  };\n\n  const onThemeSelect = (index: number): void => {\n    themeContext.setTheme(themes[index]);\n    setMenuVisible(false);\n  };\n\n  const onLayout = (event: LayoutChangeEvent): void => {\n    if (Platform.OS === 'web') {\n      postLayoutChangeEvent(event);\n    }\n  };\n\n  const postLayoutChangeEvent = ({ nativeEvent }: LayoutChangeEvent): void => {\n    const layoutChangeMessage: { height: number; id: string; } = {\n      id: showcaseId,\n      height: nativeEvent.layout.height,\n    };\n\n    window.parent.postMessage(layoutChangeMessage, '*');\n  };\n\n  const createThemeMenuItem = (title: string): OverflowMenuItemType => {\n    return { title };\n  };\n\n  return (\n    <Layout\n      style={styles.container}\n      onLayout={onLayout}>\n      <View style={styles.optionsContainer}>\n        <Text\n          appearance='hint'\n          category='c1'>\n          Powered by React Native Web\n        </Text>\n        <OverflowMenu\n          visible={menuVisible}\n          onSelect={onThemeSelect}\n          data={themes.map(createThemeMenuItem)}\n          onBackdropPress={onThemesButtonPress}>\n          <Button\n            appearance='ghost'\n            status='basic'\n            size='small'\n            icon={ColorPaletteIcon}\n            onPress={onThemesButtonPress}>\n            {themeContext.theme}\n          </Button>\n        </OverflowMenu>\n      </View>\n      <Component/>\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n    minHeight: 170,\n  },\n  optionsContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Avatar,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport const AvatarInlineStylingShowcase = () => (\n  <Layout style={styles.container}>\n    <Avatar\n      style={styles.avatar}\n      source={{ uri: 'https://images.unsplash.com/photo-1494790108377-be9c29b29330' }}\n    />\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n  avatar: {\n    width: 96,\n    height: 96,\n    borderRadius: 16,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Avatar,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport const AvatarRemoteImagesShowcase = () => (\n  <Layout style={styles.container}>\n    <Avatar source={{ uri: 'https://images.unsplash.com/photo-1494790108377-be9c29b29330' }}/>\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Avatar,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport const AvatarShapeShowcase = () => (\n  <Layout style={styles.container}>\n    <Avatar\n      style={styles.item}\n      shape='round'\n      source={{ uri: 'https://images.unsplash.com/photo-1494790108377-be9c29b29330' }}\n    />\n    <Avatar\n      style={styles.item}\n      shape='rounded'\n      source={{ uri: 'https://images.unsplash.com/photo-1494790108377-be9c29b29330' }}\n    />\n    <Avatar\n      style={styles.item}\n      shape='square'\n      source={{ uri: 'https://images.unsplash.com/photo-1494790108377-be9c29b29330' }}\n    />\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n  },\n  item: {\n    marginVertical: 8,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Avatar,\n  AvatarProps,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport const AvatarSimpleUsageShowcase = () => (\n  <Layout style={styles.container}>\n    <Avatar source={{ uri: 'https://images.unsplash.com/photo-1494790108377-be9c29b29330' }} />\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Avatar,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport const AvatarSizeShowcase = () => (\n  <Layout style={styles.container}>\n    <Avatar\n      style={styles.item}\n      size='tiny'\n      source={{ uri: 'https://images.unsplash.com/photo-1494790108377-be9c29b29330' }}\n    />\n    <Avatar\n      style={styles.item}\n      size='small'\n      source={{ uri: 'https://images.unsplash.com/photo-1494790108377-be9c29b29330' }}\n    />\n    <Avatar\n      style={styles.item}\n      size='medium'\n      source={{ uri: 'https://images.unsplash.com/photo-1494790108377-be9c29b29330' }}\n    />\n    <Avatar\n      style={styles.item}\n      size='large'\n      source={{ uri: 'https://images.unsplash.com/photo-1494790108377-be9c29b29330' }}\n    />\n    <Avatar\n      style={styles.item}\n      size='giant'\n      source={{ uri: 'https://images.unsplash.com/photo-1494790108377-be9c29b29330' }}\n    />\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n  },\n  item: {\n    marginVertical: 8,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  BottomNavigation,\n  BottomNavigationTab,\n} from 'react-native-ui-kitten';\n\nexport class BottomNavigationInlineStylingShowcase extends React.Component {\n\n  state = {\n    selectedIndex: 0,\n  };\n\n  onTabSelect = (selectedIndex) => {\n    this.setState({ selectedIndex });\n  };\n\n  render() {\n    return (\n      <BottomNavigation\n        style={styles.bottomNavigation}\n        indicatorStyle={styles.indicator}\n        selectedIndex={this.state.selectedIndex}\n        onSelect={this.onTabSelect}>\n        <BottomNavigationTab title='DASHBOARD'/>\n        <BottomNavigationTab title='SETTINGS'/>\n      </BottomNavigation>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  bottomNavigation: { backgroundColor: 'white' },\n  indicator: { backgroundColor: 'black' },\n});\n","import React from 'react';\nimport {\n  BottomNavigation,\n  BottomNavigationTab,\n} from 'react-native-ui-kitten';\n\nexport class BottomNavigationSimpleUsageShowcase extends React.Component {\n\n  state = {\n    selectedIndex: 0,\n  };\n\n  onTabSelect = (selectedIndex) => {\n    this.setState({ selectedIndex });\n  };\n\n  render() {\n    return (\n      <BottomNavigation\n        selectedIndex={this.state.selectedIndex}\n        onSelect={this.onTabSelect}>\n        <BottomNavigationTab title='DASHBOARD'/>\n        <BottomNavigationTab title='SETTINGS'/>\n      </BottomNavigation>\n    );\n  }\n}\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { BottomNavigationTab } from 'react-native-ui-kitten';\n\nexport const BottomNavigationTabInlineStylingShowcase = () => (\n  <BottomNavigationTab\n    style={styles.tab}\n    titleStyle={styles.tabTitle}\n    title='TAB 1'\n  />\n);\n\nconst styles = StyleSheet.create({\n  tab: { backgroundColor: '#EDF1F7' },\n  tabTitle: { color: '#3366FF' },\n});\n","import React from 'react';\nimport { BottomNavigationTab } from 'react-native-ui-kitten';\n\nexport const BottomNavigationTabSimpleUsageShowcase = () => (\n  <BottomNavigationTab title='TAB 1'/>\n);\n","import React from 'react';\nimport { Image } from 'react-native';\nimport { BottomNavigationTab } from 'react-native-ui-kitten';\n\nconst DashboardIcon = (style) => (\n  <Image\n    style={style}\n    source={{uri: 'https://akveo.github.io/eva-icons/fill/png/128/layout.png'}}\n  />\n);\n\nexport const BottomNavigationTabWithExternalSourceIconShowcase = () => (\n  <BottomNavigationTab\n    title='DASHBOARD'\n    icon={DashboardIcon}\n  />\n);\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport {\n  BottomNavigationTab,\n  Icon,\n} from 'react-native-ui-kitten';\n\nconst DashboardIcon = (style) => (\n  <Icon {...style} name='layout'/>\n);\n\nexport const BottomNavigationTabWithIconShowcase = () => (\n  <BottomNavigationTab\n    title='DASHBOARD'\n    icon={DashboardIcon}\n  />\n);\n","// IMPORTANT: To use Icon component make sure to follow this guide:\n// https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n\nimport React from 'react';\nimport {\n  BottomNavigation,\n  BottomNavigationTab,\n  Icon,\n} from 'react-native-ui-kitten';\n\nconst DashboardIcon = (style) => (\n  <Icon {...style} name='layout'/>\n);\n\nconst SettingsIcon = (style) => (\n  <Icon {...style} name='settings'/>\n);\n\nexport class BottomNavigationWithIconsShowcase extends React.Component {\n\n  state = {\n    selectedIndex: 0,\n  };\n\n  onTabSelect = (selectedIndex) => {\n    this.setState({ selectedIndex });\n  };\n\n  render() {\n    return (\n      <BottomNavigation\n        selectedIndex={this.state.selectedIndex}\n        onSelect={this.onTabSelect}>\n        <BottomNavigationTab\n          title='DASHBOARD'\n          icon={DashboardIcon}\n        />\n        <BottomNavigationTab\n          title='SETTINGS'\n          icon={SettingsIcon}\n        />\n      </BottomNavigation>\n    );\n  }\n}\n","import React from 'react';\nimport {\n  BottomNavigation,\n  BottomNavigationTab,\n} from 'react-native-ui-kitten';\n\nexport class BottomNavigationWithoutIndicatorShowcase extends React.Component {\n\n  state = {\n    selectedIndex: 0,\n  };\n\n  onTabSelect = (selectedIndex) => {\n    this.setState({ selectedIndex });\n  };\n\n  render() {\n    return (\n      <BottomNavigation\n        appearance='noIndicator'\n        selectedIndex={this.state.selectedIndex}\n        onSelect={this.onTabSelect}>\n        <BottomNavigationTab title='DASHBOARD'/>\n        <BottomNavigationTab title='SETTINGS'/>\n      </BottomNavigation>\n    );\n  }\n}\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport const ButtonAppearancesShowcase = () => (\n  <Layout style={styles.container}>\n    <Button style={styles.button} appearance='filled'>FILLED</Button>\n    <Button style={styles.button} appearance='outline'>OUTLINE</Button>\n    <Button style={styles.button} appearance='ghost'>GHOST</Button>\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    paddingVertical: 4,\n    paddingHorizontal: 4,\n  },\n  button: {\n    marginVertical: 4,\n    marginHorizontal: 4,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport const ButtonGhostShowcase = () => (\n  <Layout style={styles.container}>\n    <Button style={styles.button} appearance='ghost' status='primary'>PRIMARY</Button>\n    <Button style={styles.button} appearance='ghost' status='success'>SUCCESS</Button>\n    <Button style={styles.button} appearance='ghost' status='info'>INFO</Button>\n    <Button style={styles.button} appearance='ghost' status='warning'>WARNING</Button>\n    <Button style={styles.button} appearance='ghost' status='danger'>DANGER</Button>\n    <Button style={styles.button} appearance='ghost' status='basic'>BASIC</Button>\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    paddingVertical: 4,\n    paddingHorizontal: 4,\n  },\n  button: {\n    marginVertical: 4,\n    marginHorizontal: 4,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport const ButtonOutlineShowcase = () => (\n  <Layout style={styles.container}>\n    <Button style={styles.button} appearance='outline' status='primary'>PRIMARY</Button>\n    <Button style={styles.button} appearance='outline' status='success'>SUCCESS</Button>\n    <Button style={styles.button} appearance='outline' status='info'>INFO</Button>\n    <Button style={styles.button} appearance='outline' status='warning'>WARNING</Button>\n    <Button style={styles.button} appearance='outline' status='danger'>DANGER</Button>\n    <Button style={styles.button} appearance='outline' status='basic'>BASIC</Button>\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    paddingVertical: 4,\n    paddingHorizontal: 4,\n  },\n  button: {\n    marginVertical: 4,\n    marginHorizontal: 4,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport const ButtonSimpleUsageShowcase = () => (\n  <Layout style={styles.container}>\n    <Button style={styles.button}>ACTIVE</Button>\n    <Button style={styles.button} disabled={true}>DISABLED</Button>\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    paddingVertical: 4,\n    paddingHorizontal: 4,\n  },\n  button: {\n    marginVertical: 4,\n    marginHorizontal: 4,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport const ButtonSizeShowcase = () => (\n  <Layout style={styles.container}>\n    <Button style={styles.button} size='tiny'>TINY</Button>\n    <Button style={styles.button} size='small'>SMALL</Button>\n    <Button style={styles.button} size='medium'>MEDIUM</Button>\n    <Button style={styles.button} size='large'>LARGE</Button>\n    <Button style={styles.button} size='giant'>GIANT</Button>\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    paddingVertical: 4,\n    paddingHorizontal: 4,\n  },\n  button: {\n    marginVertical: 4,\n    marginHorizontal: 4,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport const ButtonStatusShowcase = () => (\n  <Layout style={styles.container}>\n    <Button style={styles.button} status='primary'>PRIMARY</Button>\n    <Button style={styles.button} status='success'>SUCCESS</Button>\n    <Button style={styles.button} status='info'>INFO</Button>\n    <Button style={styles.button} status='warning'>WARNING</Button>\n    <Button style={styles.button} status='danger'>DANGER</Button>\n    <Button style={styles.button} status='basic'>BASIC</Button>\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    paddingVertical: 4,\n    paddingHorizontal: 4,\n  },\n  button: {\n    marginVertical: 4,\n    marginHorizontal: 4,\n  },\n});\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  Icon,\n  Layout,\n} from 'react-native-ui-kitten';\n\nconst StarIcon = (style) => (\n  <Icon {...style} name='star'/>\n);\n\nexport const ButtonWithIconShowcase = () => (\n  <Layout style={styles.container}>\n    <Button style={styles.button} status='primary' icon={StarIcon}>PRIMARY</Button>\n    <Button style={styles.button} status='success' icon={StarIcon}>SUCCESS</Button>\n    <Button style={styles.button} status='danger' icon={StarIcon}/>\n    <Button style={styles.button} appearance='ghost' status='danger' icon={StarIcon}/>\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    paddingVertical: 4,\n    paddingHorizontal: 4,\n  },\n  button: {\n    marginVertical: 4,\n    marginHorizontal: 4,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  ButtonGroup,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport const ButtonGroupAppearanceShowcase = () => (\n  <Layout style={styles.container}>\n    <ButtonGroup\n      style={styles.buttonGroup}\n      appearance='filled'>\n      <Button style={styles.button}>L</Button>\n      <Button style={styles.button}>M</Button>\n      <Button style={styles.button}>R</Button>\n    </ButtonGroup>\n    <ButtonGroup\n      style={styles.buttonGroup}\n      appearance='outline'>\n      <Button style={styles.button}>L</Button>\n      <Button style={styles.button}>M</Button>\n      <Button style={styles.button}>R</Button>\n    </ButtonGroup>\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n  },\n  buttonGroup: {\n    marginVertical: 8,\n  },\n  button: {\n    flex: 1,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  ButtonGroup,\n} from 'react-native-ui-kitten';\n\nexport const ButtonGroupInlineStylingShowcase = () => (\n  <ButtonGroup style={styles.buttonGroup}>\n    <Button style={styles.button}>L</Button>\n    <Button style={styles.button}>M</Button>\n    <Button style={styles.button}>R</Button>\n  </ButtonGroup>\n);\n\nconst styles = StyleSheet.create({\n  buttonGroup: {\n    margin: 16,\n    borderRadius: 8,\n  },\n  button: {\n    flex: 1,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  ButtonGroup,\n} from 'react-native-ui-kitten';\n\nexport const ButtonGroupSimpleUsageShowcase = () => (\n  <ButtonGroup style={styles.container}>\n    <Button style={styles.button}>L</Button>\n    <Button style={styles.button}>M</Button>\n    <Button style={styles.button}>R</Button>\n  </ButtonGroup>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    margin: 16,\n  },\n  button: {\n    flex: 1,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  ButtonGroup,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport const ButtonGroupSizeShowcase = () => (\n  <Layout style={styles.container}>\n    <ButtonGroup\n      style={styles.buttonGroup}\n      size='tiny'>\n      <Button style={styles.button}>L</Button>\n      <Button style={styles.button}>M</Button>\n      <Button style={styles.button}>R</Button>\n    </ButtonGroup>\n    <ButtonGroup\n      style={styles.buttonGroup}\n      size='small'>\n      <Button style={styles.button}>L</Button>\n      <Button style={styles.button}>M</Button>\n      <Button style={styles.button}>R</Button>\n    </ButtonGroup>\n    <ButtonGroup\n      style={styles.buttonGroup}\n      size='medium'>\n      <Button style={styles.button}>L</Button>\n      <Button style={styles.button}>M</Button>\n      <Button style={styles.button}>R</Button>\n    </ButtonGroup>\n    <ButtonGroup\n      style={styles.buttonGroup}\n      size='large'>\n      <Button style={styles.button}>L</Button>\n      <Button style={styles.button}>M</Button>\n      <Button style={styles.button}>R</Button>\n    </ButtonGroup>\n    <ButtonGroup\n      style={styles.buttonGroup}\n      size='giant'>\n      <Button style={styles.button}>L</Button>\n      <Button style={styles.button}>M</Button>\n      <Button style={styles.button}>R</Button>\n    </ButtonGroup>\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n  },\n  buttonGroup: {\n    marginVertical: 8,\n  },\n  button: {\n    flex: 1,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  ButtonGroup,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport const ButtonGroupStatusShowcase = () => (\n  <Layout style={styles.container}>\n    <ButtonGroup\n      style={styles.buttonGroup}\n      status='primary'>\n      <Button style={styles.button}>L</Button>\n      <Button style={styles.button}>M</Button>\n      <Button style={styles.button}>R</Button>\n    </ButtonGroup>\n    <ButtonGroup\n      style={styles.buttonGroup}\n      status='success'>\n      <Button style={styles.button}>L</Button>\n      <Button style={styles.button}>M</Button>\n      <Button style={styles.button}>R</Button>\n    </ButtonGroup>\n    <ButtonGroup\n      style={styles.buttonGroup}\n      status='info'>\n      <Button style={styles.button}>L</Button>\n      <Button style={styles.button}>M</Button>\n      <Button style={styles.button}>R</Button>\n    </ButtonGroup>\n    <ButtonGroup\n      style={styles.buttonGroup}\n      status='warning'>\n      <Button style={styles.button}>L</Button>\n      <Button style={styles.button}>M</Button>\n      <Button style={styles.button}>R</Button>\n    </ButtonGroup>\n    <ButtonGroup\n      style={styles.buttonGroup}\n      status='danger'>\n      <Button style={styles.button}>L</Button>\n      <Button style={styles.button}>M</Button>\n      <Button style={styles.button}>R</Button>\n    </ButtonGroup>\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n  buttonGroup: {\n    marginBottom: 10,\n  },\n  button: {\n    flex: 1,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Calendar,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport class CalendarBoundingMonthShowcase extends React.Component {\n\n  state = {\n    date: new Date(),\n  };\n\n  onSelect = (date) => {\n    this.setState({ date });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Calendar\n          date={this.state.date}\n          boundingMonth={false}\n          onSelect={this.onSelect}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n    minHeight: 376,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Calendar,\n  Layout,\n} from 'react-native-ui-kitten';\n\nconst now = new Date();\n\nexport class CalendarBoundsShowcase extends React.Component {\n\n  state = {\n    date: new Date(),\n  };\n\n  onSelect = (date) => {\n    this.setState({ date });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Calendar\n          min={new Date(now.getFullYear(), now.getMonth(), 15)}\n          max={new Date(now.getFullYear(), now.getMonth() + 1, 15)}\n          date={this.state.date}\n          onSelect={this.onSelect}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n    minHeight: 376,\n  },\n});\n","import React from 'react';\nimport {\n  StyleSheet,\n  View,\n} from 'react-native';\nimport {\n  Calendar,\n  Layout,\n  Text,\n} from 'react-native-ui-kitten';\n\nexport class CalendarCustomDayShowcase extends React.Component {\n\n  state = {\n    date: new Date(),\n  };\n\n  onSelect = (date) => {\n    this.setState({ date });\n  };\n\n  renderDay = ({ date }, style) => (\n    <View\n      style={[styles.dayContainer, style.container]}>\n      <Text style={style.text}>{`${date.getDate()}`}</Text>\n      <Text style={[style.text, styles.value]}>\n        {`${100 * date.getDate() + Math.pow(date.getDate(), 2)}$`}\n      </Text>\n    </View>\n  );\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Calendar\n          date={this.state.date}\n          onSelect={this.onSelect}\n          renderDay={this.renderDay}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n    minHeight: 376,\n  },\n  dayContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    aspectRatio: 1,\n  },\n  value: {\n    fontSize: 12,\n    fontWeight: '400',\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Calendar,\n  Layout,\n  NativeDateService,\n} from 'react-native-ui-kitten';\n\nconst i18n = {\n  dayNames: {\n    short: ['周日', '周一', '周二', '周三', '周四', '周五', '周六'],\n    long: ['星期天', '星期一', '星期二', '星期三', '星期四', '星期五', '星期六'],\n  },\n  monthNames: {\n    short: ['1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月', '12月'],\n    long: ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月'],\n  },\n};\n\nexport class CalendarCustomLocaleShowcase extends React.Component {\n\n  state = {\n    date: new Date(),\n  };\n\n  dateService = new NativeDateService('zh', { i18n });\n\n  onSelect = (date) => {\n    this.setState({ date });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Calendar\n          date={this.state.date}\n          dateService={this.dateService}\n          onSelect={this.onSelect}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n    minHeight: 376,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Calendar,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport class CalendarFilterShowcase extends React.Component {\n\n  state = {\n    date: new Date(),\n  };\n\n  onSelect = (date) => {\n    this.setState({ date });\n  };\n\n  filter = (date) => {\n    return date.getDay() !== 0 && date.getDay() !== 6;\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Calendar\n          date={this.state.date}\n          onSelect={this.onSelect}\n          filter={this.filter}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n    minHeight: 376,\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport {\n  DateService,\n  TranslationWidth,\n} from 'react-native-ui-kitten';\n// @ts-ignore\nimport _moment, {\n  default as _rollupMoment,\n  Moment,\n} from 'moment';\n\nconst moment = _rollupMoment || _moment;\n\nexport class MomentDateService extends DateService<Moment> {\n\n  protected localeData: {\n    firstDayOfWeek: number,\n    defaultFormat: string,\n    months: { [key: string]: string[] },\n    days: { [key: string]: string[] },\n  };\n\n  constructor(locale: string = 'en') {\n    super();\n    this.setLocale(locale);\n  }\n\n  public setLocale(locale: string) {\n    super.setLocale(locale);\n    this.setMomentLocaleData(locale);\n  }\n\n  public addDay(date: Moment, days: number): Moment {\n    return this.clone(date).add({ days });\n  }\n\n  public addMonth(date: Moment, months: number): Moment {\n    return this.clone(date).add({ months });\n  }\n\n  public addYear(date: Moment, years: number): Moment {\n    return this.clone(date).add({ years });\n  }\n\n  public clone(date: Moment): Moment {\n    return date.clone().locale(this.locale);\n  }\n\n  public compareDates(date1: Moment, date2: Moment): number {\n    return this.getYear(date1) - this.getYear(date2) ||\n      this.getMonth(date1) - this.getMonth(date2) ||\n      this.getDate(date1) - this.getDate(date2);\n  }\n\n  public createDate(year: number, month: number, date: number): Moment {\n    return moment.utc([year, month, date]);\n  }\n\n  public format(date: Moment, format: string): string {\n    if (date) {\n      return date.format(format || this.localeData.defaultFormat);\n    }\n\n    return '';\n  }\n\n  public getDate(date: Moment): number {\n    return this.clone(date).date();\n  }\n\n  public getDayOfWeek(date: Moment): number {\n    return this.clone(date).day();\n  }\n\n  public getDayOfWeekNames(style: TranslationWidth = TranslationWidth.SHORT): string[] {\n    return this.localeData.days[style];\n  }\n\n  public getFirstDayOfWeek(): number {\n    return this.localeData.firstDayOfWeek;\n  }\n\n  public getMonth(date: Moment): number {\n    return this.clone(date).month();\n  }\n\n  public getMonthEnd(date: Moment): Moment {\n    return this.clone(date).endOf('month');\n  }\n\n  public getMonthName(date: Moment, style: TranslationWidth = TranslationWidth.SHORT): string {\n    const month: number = this.getMonth(date);\n\n    return this.getMonthNameByIndex(month, style);\n  }\n\n  public getMonthNameByIndex(month: number, style: TranslationWidth = TranslationWidth.SHORT): string {\n    return this.localeData.months[style][month];\n  }\n\n  public getMonthStart(date: Moment): Moment {\n    return this.clone(date).startOf('month');\n  }\n\n  public getNumberOfDaysInMonth(date: Moment): number {\n    return this.clone(date).daysInMonth();\n  }\n\n  public getYear(date: Moment): number {\n    return this.clone(date).year();\n  }\n\n  public getYearEnd(date: Moment): Moment {\n    return this.clone(date).endOf('year');\n  }\n\n  public getYearStart(date: Moment): Moment {\n    return this.clone(date).startOf('year');\n  }\n\n  public isSameDay(date1: Moment, date2: Moment): boolean {\n    return this.isSameMonth(date1, date2) && this.getDate(date1) === this.getDate(date2);\n  }\n\n  public isSameMonth(date1: Moment, date2: Moment): boolean {\n    return this.isSameYear(date1, date2) && this.getMonth(date1) === this.getMonth(date2);\n  }\n\n  public isSameYear(date1: Moment, date2: Moment): boolean {\n    return this.getYear(date1) === this.getYear(date2);\n  }\n\n  public isValidDateString(date: string, format: string): boolean {\n    return moment(date, format).isValid();\n  }\n\n  public parse(date: string, format: string): Moment {\n    return moment(date, format);\n  }\n\n  public today(): Moment {\n    return moment();\n  }\n\n  public getId(): string {\n    return 'moment';\n  }\n\n  protected setMomentLocaleData(locale: string) {\n    const momentLocaleData = moment.localeData(locale);\n\n    this.localeData = {\n      firstDayOfWeek: momentLocaleData.firstDayOfWeek(),\n      defaultFormat: momentLocaleData.longDateFormat('L'),\n      months: {\n        [TranslationWidth.SHORT]: momentLocaleData.monthsShort(),\n        [TranslationWidth.LONG]: momentLocaleData.months(),\n      },\n      days: {\n        [TranslationWidth.SHORT]: momentLocaleData.weekdaysShort(),\n        [TranslationWidth.LONG]: momentLocaleData.weekdays(),\n      },\n    };\n  }\n}\n","/**\n * IMPORTANT: To use Moment make sure to install Moment Date Service\n * npm i @ui-kitten/moment\n */\n\nimport React from 'react';\nimport { StyleSheet } from 'react-native';\nimport moment from 'moment';\nimport {\n  Calendar,\n  Layout,\n} from 'react-native-ui-kitten';\nimport { MomentDateService } from '@ui-kitten/moment';\n\nexport class CalendarMomentShowcase extends React.Component {\n\n  state = {\n    date: moment(),\n  };\n\n  dateService = new MomentDateService();\n\n  onSelect = (date) => {\n    this.setState({ date });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Calendar\n          date={this.state.date}\n          dateService={this.dateService}\n          onSelect={this.onSelect}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n    minHeight: 376,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Calendar,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport class CalendarSimpleUsageShowcase extends React.Component {\n\n  state = {\n    date: new Date(),\n  };\n\n  onSelect = (date) => {\n    this.setState({ date });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Calendar\n          date={this.state.date}\n          onSelect={this.onSelect}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n    minHeight: 376,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Calendar,\n  Layout,\n  NativeDateService,\n} from 'react-native-ui-kitten';\n\nexport class CalendarStartDayOfWeekShowcase extends React.Component {\n\n  state = {\n    date: new Date(),\n  };\n\n  dateService = new NativeDateService('en', { startDayOfWeek: 1 });\n\n  onSelect = (date) => {\n    this.setState({ date });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Calendar\n          date={this.state.date}\n          dateService={this.dateService}\n          onSelect={this.onSelect}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n    minHeight: 376,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  RangeCalendar,\n} from 'react-native-ui-kitten';\n\nexport class RangeCalendarSimpleUsageShowcase extends React.Component {\n\n  state = {\n    range: {\n      startDate: null,\n      endDate: null,\n    },\n  };\n\n  onSelect = (range) => {\n    this.setState({ range });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <RangeCalendar\n          range={this.state.range}\n          onSelect={this.onSelect}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n","import React from 'react';\nimport {\n  Image,\n  StyleSheet,\n  View,\n} from 'react-native';\nimport {\n  Layout,\n  Card,\n  Text,\n} from 'react-native-ui-kitten';\n\nconst bodyText: string = 'A nebula is an interstellar cloud of dust, hydrogen, helium and other ionized gases. ' +\n  'Originally, nebula was a name for any diffuse astronomical object, including galaxies beyond the Milky Way.';\nconst headerImageUri: string = 'https://cdn.pixabay.com/photo/2017/01/20/00/30/maldives-1993704__340.jpg';\n\nexport const CustomHeader = () => {\n  return (\n    <View>\n      <Image\n        source={{ uri: headerImageUri }}\n        style={styles.headerImage}\n      />\n      <View style={styles.headerTextContainer}>\n        <Text\n          category='h6'\n          style={styles.headerText}>\n          Title\n        </Text>\n      </View>\n    </View>\n  );\n};\n\nexport const CardCustomHeaderShowcase = () => (\n  <Layout style={styles.container}>\n    <Card header={CustomHeader}>\n      <Text style={styles.bodyText}>\n        {bodyText}\n      </Text>\n    </Card>\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingVertical: 4,\n    paddingHorizontal: 4,\n  },\n  card: {\n    marginVertical: 6,\n  },\n  bodyText: {\n    color: '#8f8b8b',\n  },\n  headerTextContainer: {\n    paddingHorizontal: 24,\n    paddingVertical: 16,\n  },\n  headerText: {\n    color: '#6e5f5e',\n  },\n  headerImage: {\n    width: '100%',\n    height: 230,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Card,\n  CardHeader,\n  Text,\n} from 'react-native-ui-kitten';\n\nconst bodyText: string = 'A nebula is an interstellar cloud of dust, hydrogen, helium and other ionized gases. ' +\n  'Originally, nebula was a name for any diffuse astronomical object, including galaxies beyond the Milky Way.';\n\nconst Header = () => (\n  <CardHeader\n    title='Title'\n    description='Description'\n  />\n);\n\nexport const CardEvaHeaderShowcase = () => (\n  <Layout style={styles.container}>\n    <Card header={Header}>\n      <Text style={styles.bodyText}>\n        {bodyText}\n      </Text>\n    </Card>\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingVertical: 4,\n    paddingHorizontal: 4,\n  },\n  card: {\n    marginVertical: 6,\n  },\n  bodyText: {\n    color: '#8f8b8b',\n  },\n});\n","import React from 'react';\nimport {\n  StyleSheet,\n  View,\n} from 'react-native';\nimport {\n  Layout,\n  Card,\n  Text,\n  Button,\n} from 'react-native-ui-kitten';\n\nconst bodyText: string = 'A nebula is an interstellar cloud of dust, hydrogen, helium and other ionized gases. ' +\n  'Originally, nebula was a name for any diffuse astronomical object, including galaxies beyond the Milky Way.';\n\nconst Footer = () => {\n  return (\n    <View style={styles.footerContainer}>\n      <Button\n        size='small'\n        style={styles.footerControl}>\n        Accept\n      </Button>\n      <Button\n        size='small'\n        status='basic'>\n        Cancel\n      </Button>\n    </View>\n  );\n};\n\nexport const CardFooterShowcase = () => (\n  <Layout style={styles.container}>\n    <Card footer={Footer}>\n      <Text style={styles.bodyText}>\n        {bodyText}\n      </Text>\n    </Card>\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingVertical: 4,\n    paddingHorizontal: 4,\n  },\n  card: {\n    marginVertical: 6,\n  },\n  bodyText: {\n    color: '#8f8b8b',\n  },\n  footerContainer: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n  },\n  footerControl: {\n    marginRight: 12,\n  },\n});\n","import React from 'react';\nimport {\n  StyleSheet,\n  View,\n} from 'react-native';\nimport {\n  Layout,\n  Card,\n  Text,\n  Button,\n  CardHeader,\n} from 'react-native-ui-kitten';\n\nconst bodyText: string = 'A nebula is an interstellar cloud of dust, hydrogen, helium and other ionized gases. ' +\n  'Originally, nebula was a name for any diffuse astronomical object, including galaxies beyond the Milky Way.';\n\nconst Footer = () => {\n  return (\n    <View style={styles.footerContainer}>\n      <Button\n        size='small'\n        style={styles.footerControl}>\n        Accept\n      </Button>\n      <Button\n        size='small'\n        status='basic'>\n        Cancel\n      </Button>\n    </View>\n  );\n};\n\nconst Header = () => (\n  <CardHeader\n    title='Title'\n    description='Description'\n  />\n);\n\nexport const CardHeaderFooterShowcase = () => (\n  <Layout style={styles.container}>\n    <Card\n      header={Header}\n      footer={Footer}>\n      <Text style={styles.bodyText}>\n        {bodyText}\n      </Text>\n    </Card>\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingVertical: 4,\n    paddingHorizontal: 4,\n  },\n  card: {\n    marginVertical: 6,\n  },\n  bodyText: {\n    color: '#8f8b8b',\n  },\n  footerContainer: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n  },\n  footerControl: {\n    marginRight: 12,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Card,\n  Text,\n} from 'react-native-ui-kitten';\n\nconst bodyText: string = 'A nebula is an interstellar cloud of dust, hydrogen, helium and other ionized gases. ' +\n  'Originally, nebula was a name for any diffuse astronomical object, including galaxies beyond the Milky Way.';\n\nexport const CardSimpleUsageShowcase = () => (\n  <Layout style={styles.container}>\n    <Card>\n      <Text style={styles.bodyText}>\n        {bodyText}\n      </Text>\n    </Card>\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingVertical: 4,\n    paddingHorizontal: 4,\n  },\n  card: {\n    marginVertical: 6,\n  },\n  bodyText: {\n    color: '#8f8b8b',\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Card,\n  CardHeader,\n  Text,\n  List,\n} from 'react-native-ui-kitten';\n\nconst bodyText: string = 'A nebula is an interstellar cloud of dust, hydrogen, helium and other ionized gases. ' +\n  'Originally, nebula was a name for any diffuse astronomical object, including galaxies beyond the Milky Way.';\n\nexport class CardStatusesShowcase extends React.Component {\n\n  statuses = [\n    'primary',\n    'success',\n    'info',\n    'warning',\n    'danger',\n  ];\n\n  renderHeader = () => (\n    <CardHeader\n      title='Title'\n      description='Description'\n    />\n  );\n\n  renderItem = (info) => (\n    <Card\n      status={info.item}\n      style={styles.card}\n      header={this.renderHeader}>\n      <Text style={styles.bodyText}>\n        {bodyText}\n      </Text>\n    </Card>\n  );\n\n  render() {\n    return (\n      <List\n        style={styles.container}\n        data={this.statuses}\n        renderItem={this.renderItem}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    height: 500,\n    paddingVertical: 4,\n    paddingHorizontal: 4,\n  },\n  card: {\n    marginVertical: 4,\n  },\n  bodyText: {\n    color: '#8f8b8b',\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  CheckBox,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport class CheckboxIndeterminateShowcase extends React.Component {\n\n  state = {\n    mainCheckboxChecked: false,\n    mainCheckboxIndeterminate: false,\n    checkbox1Checked: false,\n    checkbox2Checked: false,\n    checkbox3Checked: false,\n  };\n\n  onMainCheckboxChange = (checked) => {\n    if (checked) {\n      this.setState({\n        checkbox1Checked: true,\n        checkbox2Checked: true,\n        checkbox3Checked: true,\n      });\n    } else {\n      this.setState({\n        checkbox1Checked: false,\n        checkbox2Checked: false,\n        checkbox3Checked: false,\n      });\n    }\n    this.setState({ mainCheckboxChecked: checked });\n  };\n\n  onCheckbox1Change = (checked) => {\n    this.setState({ checkbox1Checked: checked }, this.setMainCheckboxDependingState);\n  };\n\n  onCheckbox2Change = (checked) => {\n    this.setState({ checkbox2Checked: checked }, this.setMainCheckboxDependingState);\n  };\n\n  onCheckbox3Change = (checked) => {\n    this.setState({ checkbox3Checked: checked }, this.setMainCheckboxDependingState);\n  };\n\n  setMainCheckboxDependingState = () => {\n    const { checkbox1Checked, checkbox2Checked, checkbox3Checked } = this.state;\n    const states = [checkbox1Checked, checkbox2Checked, checkbox3Checked];\n    const someChecked = states.some((item) => item === true);\n    const everyChecked = states.every((item) => item === true);\n\n    if (someChecked && !everyChecked) {\n      this.setState({\n        mainCheckboxChecked: true,\n        mainCheckboxIndeterminate: true,\n      });\n    } else if (!someChecked && !everyChecked) {\n      this.setState({\n        mainCheckboxChecked: false,\n        mainCheckboxIndeterminate: false,\n      });\n    } else if (everyChecked) {\n      this.setState({\n        mainCheckboxChecked: true,\n        mainCheckboxIndeterminate: false,\n      });\n    }\n  };\n\n  render() {\n    const {\n      mainCheckboxChecked,\n      mainCheckboxIndeterminate,\n      checkbox1Checked,\n      checkbox2Checked,\n      checkbox3Checked,\n    } = this.state;\n\n    return (\n      <Layout style={styles.container}>\n        <CheckBox\n          style={styles.checkbox}\n          text='Main'\n          checked={mainCheckboxChecked}\n          indeterminate={mainCheckboxIndeterminate}\n          onChange={this.onMainCheckboxChange}\n        />\n        <CheckBox\n          text='Checkbox 1'\n          style={[styles.checkbox, styles.leftSpace]}\n          checked={checkbox1Checked}\n          onChange={this.onCheckbox1Change}\n        />\n        <CheckBox\n          text='Checkbox 2'\n          style={[styles.checkbox, styles.leftSpace]}\n          checked={checkbox2Checked}\n          onChange={this.onCheckbox2Change}\n        />\n        <CheckBox\n          text='Checkbox 3'\n          style={[styles.checkbox, styles.leftSpace]}\n          checked={checkbox3Checked}\n          onChange={this.onCheckbox3Change}\n        />\n      </Layout>\n    );\n  }\n}\n\nexport const styles = StyleSheet.create({\n  container: {\n    paddingVertical: 4,\n    paddingHorizontal: 8,\n  },\n  checkbox: {\n    marginVertical: 4,\n  },\n  leftSpace: {\n    marginHorizontal: 4,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { CheckBox } from 'react-native-ui-kitten';\n\nexport class CheckboxInlineStylingShowcase extends React.Component {\n\n  state = {\n    checked: false,\n  };\n\n  onCheckedChange = (checked) => {\n    this.setState({ checked });\n  };\n\n  render() {\n    return (\n      <CheckBox\n        style={styles.checkbox}\n        textStyle={styles.text}\n        checked={this.state.checked}\n        text='Place your Text'\n        onChange={this.onCheckedChange}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  checkbox: {\n    margin: 8,\n  },\n  text: {\n    color: '#3366FF',\n    fontSize: 18,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  CheckBox,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport class CheckboxSimpleUsageShowcase extends React.Component {\n\n  state = {\n    checked1: false,\n  };\n\n  onChecked1Change = (checked1) => {\n    this.setState({ checked1 });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <CheckBox\n          style={styles.checkbox}\n          text='Active'\n          checked={this.state.checked1}\n          onChange={this.onChecked1Change}\n        />\n        <CheckBox\n          style={styles.checkbox}\n          text='Disabled'\n          disabled={true}\n        />\n        <CheckBox\n          style={styles.checkbox}\n          text='Checked Disabled'\n          disabled={true}\n          checked={true}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    paddingVertical: 4,\n    paddingHorizontal: 4,\n  },\n  checkbox: {\n    marginVertical: 4,\n    marginHorizontal: 4,\n  },\n});\n","import React from 'react';\nimport {\n  StyleSheet,\n  View,\n} from 'react-native';\nimport {\n  CheckBox,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport class CheckboxStatusShowcase extends React.Component {\n\n  state = {\n    primaryChecked: false,\n    successChecked: false,\n    infoChecked: false,\n    warningChecked: false,\n    dangerChecked: false,\n    basicChecked: false,\n  };\n\n  onPrimaryChange = (primaryChecked) => {\n    this.setState({ primaryChecked });\n  };\n\n  onSuccessChange = (successChecked) => {\n    this.setState({ successChecked });\n  };\n\n  onInfoChange = (infoChecked) => {\n    this.setState({ infoChecked });\n  };\n\n  onWarningChange = (warningChecked) => {\n    this.setState({ warningChecked });\n  };\n\n  onDangerChange = (dangerChecked) => {\n    this.setState({ dangerChecked });\n  };\n\n  onBasicChange = (basicChecked) => {\n    this.setState({ basicChecked });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <CheckBox\n          style={styles.checkbox}\n          status='primary'\n          text='Primary'\n          checked={this.state.primaryChecked}\n          onChange={this.onPrimaryChange}\n        />\n        <CheckBox\n          style={styles.checkbox}\n          status='success'\n          text='Success'\n          checked={this.state.successChecked}\n          onChange={this.onSuccessChange}\n        />\n        <CheckBox\n          style={styles.checkbox}\n          status='info'\n          text='Info'\n          checked={this.state.infoChecked}\n          onChange={this.onInfoChange}\n        />\n        <CheckBox\n          style={styles.checkbox}\n          status='warning'\n          text='Warning'\n          checked={this.state.warningChecked}\n          onChange={this.onWarningChange}\n        />\n        <CheckBox\n          style={styles.checkbox}\n          status='danger'\n          text='Danger'\n          checked={this.state.dangerChecked}\n          onChange={this.onDangerChange}\n        />\n        <CheckBox\n          style={styles.checkbox}\n          status='basic'\n          text='Basic'\n          checked={this.state.basicChecked}\n          onChange={this.onBasicChange}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    paddingVertical: 4,\n    paddingHorizontal: 4,\n  },\n  checkbox: {\n    marginVertical: 4,\n    marginHorizontal: 4,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { CheckBox } from 'react-native-ui-kitten';\n\nexport class CheckboxTextShowcase extends React.Component {\n\n  state = {\n    checked: false,\n  };\n\n  onCheckedChange = (checked) => {\n    this.setState({ checked });\n  };\n\n  render() {\n    return (\n      <CheckBox\n        style={styles.checkbox}\n        checked={this.state.checked}\n        text='Place your Text'\n        onChange={this.onCheckedChange}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  checkbox: {\n    margin: 8,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Datepicker,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport class DatepickerBoundingMonthShowcase extends React.Component {\n\n  state = {\n    date: new Date(),\n  };\n\n  onSelect = (date) => {\n    this.setState({ date });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Datepicker\n          date={this.state.date}\n          boundingMonth={false}\n          onSelect={this.onSelect}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 400,\n    padding: 16,\n  },\n});\n","import React from 'react';\nimport {\n  StyleSheet,\n  View,\n} from 'react-native';\nimport {\n  Datepicker,\n  Layout,\n  Text,\n} from 'react-native-ui-kitten';\n\nexport class DatepickerCustomDayShowcase extends React.Component {\n\n  state = {\n    date: new Date(),\n  };\n\n  onSelect = (date) => {\n    this.setState({ date });\n  };\n\n  renderDay = ({ date }, style) => (\n    <View\n      style={[styles.dayContainer, style.container]}>\n      <Text style={style.text}>{`${date.getDate()}`}</Text>\n      <Text style={[style.text, styles.value]}>\n        {`${100 * date.getDate() + Math.pow(date.getDate(), 2)}$`}\n      </Text>\n    </View>\n  );\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Datepicker\n          date={this.state.date}\n          onSelect={this.onSelect}\n          renderDay={this.renderDay}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 400,\n    padding: 16,\n  },\n  dayContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    aspectRatio: 1,\n  },\n  value: {\n    fontSize: 12,\n    fontWeight: '400',\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Datepicker,\n  Layout,\n  NativeDateService,\n} from 'react-native-ui-kitten';\n\nconst i18n = {\n  dayNames: {\n    short: ['周日', '周一', '周二', '周三', '周四', '周五', '周六'],\n    long: ['星期天', '星期一', '星期二', '星期三', '星期四', '星期五', '星期六'],\n  },\n  monthNames: {\n    short: ['1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月', '12月'],\n    long: ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月'],\n  },\n};\n\nexport class DatepickerCustomLocaleShowcase extends React.Component {\n\n  state = {\n    date: new Date(),\n  };\n\n  dateService = new NativeDateService('zh', i18n);\n\n  onSelect = (date) => {\n    this.setState({ date });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Datepicker\n          date={this.state.date}\n          dateService={this.dateService}\n          onSelect={this.onSelect}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 400,\n    padding: 16,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Datepicker,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport class DatepickerFilterShowcase extends React.Component {\n\n  state = {\n    date: new Date(),\n  };\n\n  onSelect = (date) => {\n    this.setState({ date });\n  };\n\n  filter = (date) => {\n    return date.getDay() !== 0 && date.getDay() !== 6;\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Datepicker\n          date={this.state.date}\n          filter={this.filter}\n          onSelect={this.onSelect}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 400,\n    padding: 16,\n  },\n});\n","/**\n * IMPORTANT: To use Moment make sure to install Moment Date Service\n * npm i @ui-kitten/moment\n */\n\nimport React from 'react';\nimport { StyleSheet } from 'react-native';\nimport moment from 'moment';\nimport {\n  Datepicker,\n  Layout,\n} from 'react-native-ui-kitten';\nimport { MomentDateService } from '@ui-kitten/moment';\n\nexport class DatepickerMomentShowcase extends React.Component {\n\n  dateService = new MomentDateService();\n\n  state = {\n    date: moment(),\n  };\n\n  onSelect = (date) => {\n    this.setState({ date });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Datepicker\n          date={this.state.date}\n          dateService={this.dateService}\n          onSelect={this.onSelect}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 400,\n    padding: 16,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Datepicker,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport class DatepickerSimpleUsageShowcase extends React.Component {\n\n  state = {\n    date: new Date(),\n  };\n\n  onSelect = (date) => {\n    this.setState({ date });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Datepicker\n          date={this.state.date}\n          onSelect={this.onSelect}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 400,\n    padding: 16,\n  },\n});\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Datepicker,\n  Icon,\n  Layout,\n} from 'react-native-ui-kitten';\n\nconst CalendarIcon = (style) => (\n  <Icon {...style} name='calendar'/>\n);\n\nexport class DatepickerWithIconShowcase extends React.Component {\n\n  state = {\n    date: new Date(),\n  };\n\n  onSelect = (date) => {\n    this.setState({ date });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Datepicker\n          date={this.state.date}\n          icon={CalendarIcon}\n          onSelect={this.onSelect}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 400,\n    padding: 16,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  RangeDatepicker,\n} from 'react-native-ui-kitten';\n\nexport class RangeDatepickerSimpleUsageShowcase extends React.Component {\n\n  state = {\n    range: {\n      startDate: null,\n      endDate: null,\n    },\n  };\n\n  onSelect = (range) => {\n    this.setState({ range });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <RangeDatepicker\n          range={this.state.range}\n          onSelect={this.onSelect}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 400,\n    padding: 16,\n  },\n});\n\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { SafeAreaView } from 'react-navigation';\nimport {\n  Drawer,\n  Layout,\n  Text,\n} from 'react-native-ui-kitten';\n\nexport class DrawerCustomHeaderShowcase extends React.Component {\n\n  drawerData = [\n    { title: 'Dashboard' },\n    { title: 'Messages' },\n    { title: 'Settings' },\n    { title: 'Articles' },\n    { title: 'Ecommerce' },\n    { title: 'Chat' },\n  ];\n\n  onRouteSelect = (index) => {\n    // const { [index]: route } = this.drawerData;\n    // navigate with React Navigation\n    // this.props.navigation.navigate(route.title);\n  };\n\n  renderHeader = () => (\n    <Layout level='2'>\n      <Text category='h6'>Drawer Header</Text>\n    </Layout>\n  );\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <SafeAreaView>\n          <Drawer\n            data={this.drawerData}\n            header={this.renderHeader}\n            onSelect={this.onRouteSelect}\n          />\n        </SafeAreaView>\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { SafeAreaView } from 'react-navigation';\nimport {\n  Drawer,\n  DrawerHeaderFooter,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport class DrawerFooterShowcase extends React.Component {\n\n  drawerData = [\n    { title: 'Dashboard' },\n    { title: 'Messages' },\n    { title: 'Settings' },\n    { title: 'Articles' },\n    { title: 'Ecommerce' },\n    { title: 'Chat' },\n  ];\n\n  onRouteSelect = (index) => {\n    // const { [index]: route } = this.drawerData;\n    // navigate with React Navigation\n    // this.props.navigation.navigate(route.title);\n  };\n\n  renderFooter = () => (\n    <DrawerHeaderFooter description='Drawer Footer'/>\n  );\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <SafeAreaView>\n          <Drawer\n            data={this.drawerData}\n            footer={this.renderFooter}\n            onSelect={this.onRouteSelect}\n          />\n        </SafeAreaView>\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n});\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { SafeAreaView } from 'react-navigation';\nimport {\n  Drawer,\n  DrawerHeaderFooter,\n  Icon,\n  Layout,\n} from 'react-native-ui-kitten';\n\nconst PersonIcon = (style) => (\n  <Icon {...style} name='person'/>\n);\n\nexport class DrawerHeaderShowcase extends React.Component {\n\n  drawerData = [\n    { title: 'Dashboard' },\n    { title: 'Messages' },\n    { title: 'Settings' },\n    { title: 'Articles' },\n    { title: 'Ecommerce' },\n    { title: 'Chat' },\n  ];\n\n  onRouteSelect = (index) => {\n    // const { [index]: route } = this.drawerData;\n    // navigate with React Navigation\n    // this.props.navigation.navigate(route.title);\n  };\n\n  renderProfileHeader = () => (\n    <DrawerHeaderFooter\n      title='John Doe'\n      description='React Native Developer'\n      icon={PersonIcon}\n    />\n  );\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <SafeAreaView>\n          <Drawer\n            data={this.drawerData}\n            header={this.renderProfileHeader}\n            onSelect={this.onRouteSelect}\n          />\n        </SafeAreaView>\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { DrawerHeaderFooter } from 'react-native-ui-kitten';\n\nexport const DrawerHeaderFooterInlineStylingShowcase = () => (\n  <DrawerHeaderFooter\n    style={styles.drawerHeader}\n    titleStyle={styles.drawerHeaderTitle}\n    descriptionStyle={styles.drawerHeaderDescription}\n    title='John Doe'\n    description='React Native Developer'\n  />\n);\n\nconst styles = StyleSheet.create({\n  drawerHeader: { backgroundColor: 'black' },\n  drawerHeaderTitle: { color: 'white' },\n  drawerHeaderDescription: { color: 'gray' },\n});\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport {\n  DrawerHeaderFooter,\n  Icon,\n} from 'react-native-ui-kitten';\n\nconst ProfileIcon = (style) => (\n  <Icon {...style} name='person'/>\n);\n\nexport const DrawerHeaderFooterSimpleUsageShowcase = () => (\n  <DrawerHeaderFooter\n    title='John Doe'\n    description='React Native Developer'\n    icon={ProfileIcon}\n  />\n);\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport {\n  Button,\n  DrawerHeaderFooter,\n  Icon,\n} from 'react-native-ui-kitten';\n\nconst LogoutIcon = (style) => (\n  <Icon {...style} name='log-out'/>\n);\n\nconst LogoutButton = (style) => (\n  <Button style={style} icon={LogoutIcon}/>\n);\n\nexport const DrawerHeaderFooterWithAccessoryShowcase = () => (\n  <DrawerHeaderFooter\n    title='John Doe'\n    description='React Native Developer'\n    accessory={LogoutButton}\n  />\n);\n","import React from 'react';\nimport { Image } from 'react-native';\nimport { DrawerHeaderFooter } from 'react-native-ui-kitten';\n\nconst ProfileIcon = (style) => (\n  <Image style={style} source={{uri: 'https://akveo.github.io/eva-icons/fill/png/128/profile.png'}}/>\n);\n\nexport const DrawerHeaderFooterWithExternalSourceIconShowcase = () => (\n  <DrawerHeaderFooter\n    title='John Doe'\n    description='React Native Developer'\n    icon={ProfileIcon}\n  />\n);\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { SafeAreaView } from 'react-navigation';\nimport {\n  Drawer,\n  Layout,\n  Text,\n} from 'react-native-ui-kitten';\n\nconst NotificationBadge = (style) => (\n  <Layout style={[style, styles.badge]}>\n    <Text>NEW</Text>\n  </Layout>\n);\n\nexport class DrawerNotificationBadgeItemShowcase extends React.Component {\n\n  drawerData = [\n    { title: 'Dashboard' },\n    { title: 'Messages', accessory: NotificationBadge },\n    { title: 'Settings' },\n    { title: 'Articles' },\n  ];\n\n  onRouteSelect = (index) => {\n    // const { [index]: route } = this.drawerData;\n    // navigate with React Navigation\n    // this.props.navigation.navigate(route.title);\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <SafeAreaView>\n          <Drawer\n            data={this.drawerData}\n            onSelect={this.onRouteSelect}\n          />\n        </SafeAreaView>\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n  badge: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: 24,\n    width: 48,\n    paddingHorizontal: 24,\n    borderRadius: 12,\n    backgroundColor: 'orange',\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { SafeAreaView } from 'react-navigation';\nimport {\n  Drawer,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport class DrawerSimpleUsageShowcase extends React.Component {\n\n  drawerData = [\n    { title: 'Dashboard' },\n    { title: 'Messages' },\n    { title: 'Settings' },\n    { title: 'Articles' },\n    { title: 'Ecommerce' },\n    { title: 'Chat' },\n  ];\n\n  onRouteSelect = (index) => {\n    // const { [index]: route } = this.drawerData;\n    // navigate with React Navigation\n    // this.props.navigation.navigate(route.title);\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <SafeAreaView>\n          <Drawer\n            data={this.drawerData}\n            onSelect={this.onRouteSelect}\n          />\n        </SafeAreaView>\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n});\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { SafeAreaView } from 'react-navigation';\nimport {\n  Drawer,\n  Icon,\n  Layout,\n} from 'react-native-ui-kitten';\n\nconst DashboardIcon = (style) => (\n  <Icon {...style} name='layout'/>\n);\n\nconst MessagesIcon = (style) => (\n  <Icon {...style} name='email'/>\n);\n\nconst SettingsIcon = (style) => (\n  <Icon {...style} name='settings'/>\n);\n\nexport class DrawerWithIconsShowcase extends React.Component {\n\n  drawerData = [\n    { title: 'Dashboard', icon: DashboardIcon },\n    { title: 'Messages', icon: MessagesIcon },\n    { title: 'Settings', icon: SettingsIcon },\n  ];\n\n  onRouteSelect = (index) => {\n    // const { [index]: route } = this.drawerData;\n    // navigate with React Navigation\n    // this.props.navigation.navigate(route.title);\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <SafeAreaView>\n          <Drawer\n            data={this.drawerData}\n            onSelect={this.onRouteSelect}\n          />\n        </SafeAreaView>\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n});\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport {\n  Button,\n  Icon,\n} from 'react-native-ui-kitten';\n\nexport class IconAnimationShowcase extends React.Component {\n\n  iconRef = React.createRef();\n\n  onPress = () => {\n    this.iconRef.current.startAnimation();\n  };\n\n  renderIcon = (style) => (\n    <Icon\n      {...style}\n      ref={this.iconRef}\n      name='star'\n      animation='shake'\n    />\n  );\n\n  render() {\n    return (\n      <Button\n        icon={this.renderIcon}\n        onPress={this.onPress}>\n        START ANIMATION\n      </Button>\n    );\n  }\n}\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport {\n  Button,\n  Icon,\n} from 'react-native-ui-kitten';\n\nexport class IconAnimationInfiniteShowcase extends React.Component {\n\n  iconRef = React.createRef();\n\n  onPress = () => {\n    this.iconRef.current.startAnimation();\n  };\n\n  renderIcon = (style) => (\n    <Icon\n      {...style}\n      ref={this.iconRef}\n      name='star'\n      animation='shake'\n      animationConfig={{ cycles: -1 }}\n    />\n  );\n\n  render() {\n    return (\n      <Button\n        icon={this.renderIcon}\n        onPress={this.onPress}>\n        START ANIMATION\n      </Button>\n    );\n  }\n}\n","import React from 'react';\nimport { Image } from 'react-native';\nimport { Button } from 'react-native-ui-kitten';\n\nconst RemoteBulbIcon = (style) => (\n  <Image\n    style={style}\n    source={{ uri: 'https://akveo.github.io/eva-icons/outline/png/128/bulb-outline.png' }}\n  />\n);\n\nexport const IconExternalSourceShowcase = (props) => (\n  <Button icon={RemoteBulbIcon}>\n    Login with Facebook\n  </Button>\n);\n","/**\n * Visit react-native-svg documentation for more details on styling\n * https://github.com/react-native-community/react-native-svg#common-props\n */\n\nimport React from 'react';\nimport { Icon } from 'react-native-ui-kitten';\n\nexport const IconInlineStylingShowcase = (props) => (\n  <Icon\n    name='github'\n    width={32}\n    height={32}\n    fill='#FF7E6D'\n  />\n);\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n *\n * Visit react-native-svg documentation for more details on styling\n * https://github.com/react-native-community/react-native-svg#common-props\n */\n\nimport React from 'react';\nimport { Icon } from 'react-native-ui-kitten';\n\nexport const IconSimpleUsageShowcase = () => (\n  <Icon name='star' width={32} height={32} fill='#3366FF' />\n);\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport {\n  Button,\n  Icon,\n} from 'react-native-ui-kitten';\n\nexport class IconWithinButtonShowcase extends React.Component {\n\n  state = {\n    liked: false,\n  };\n\n  onPress = () => {\n    const liked = !this.state.liked;\n    this.setState({ liked });\n  };\n\n  renderIcon = (style) => (\n    <Icon\n      name={this.state.liked ? 'heart' : 'heart-outline'}\n      {...style}\n    />\n  );\n\n  render() {\n    return (\n      <Button\n        icon={this.renderIcon}\n        onPress={this.onPress}>\n        LIKE\n      </Button>\n    );\n  }\n}\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport {\n  Icon,\n  Input,\n} from 'react-native-ui-kitten';\n\nexport class IconWithinInputShowcase extends React.Component {\n\n  state = {\n    value: '',\n    secureTextEntry: true,\n  };\n\n  onChangeText = (value) => {\n    this.setState({ value });\n  };\n\n  onIconPress = () => {\n    const secureTextEntry = !this.state.secureTextEntry;\n    this.setState({ secureTextEntry });\n  };\n\n  renderIcon = (style) => (\n    <Icon\n      {...style}\n      name={!this.state.secureTextEntry ? 'eye' : 'eye-off'}\n    />\n  );\n\n  render() {\n    return (\n      <Input\n        placeholder='Password'\n        value={this.state.value}\n        secureTextEntry={this.state.secureTextEntry}\n        onChangeText={this.onChangeText}\n        icon={this.renderIcon}\n        onIconPress={this.onIconPress}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Input } from 'react-native-ui-kitten';\n\nexport class InputInlineStylingShowcase extends React.Component {\n\n  state = {\n    inputValue: '',\n  };\n\n  onChangeText = (value) => {\n    this.setState({ value });\n  };\n\n  render() {\n    return (\n      <Input\n        value={this.state.inputValue}\n        placeholder='Place your Text'\n        style={styles.input}\n        textStyle={styles.inputText}\n        labelStyle={styles.inputLabel}\n        captionTextStyle={styles.inputCaption}\n        onChangeText={this.onChangeText}\n        label='LABEL'\n        caption='CAPTION'\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  input: { borderRadius: 24 },\n  inputText: { color: '#3366FF' },\n  inputLabel: { color: '#3366FF' },\n  inputCaption: { color: '#3366FF' },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Input,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport class InputSimpleUsageShowcase extends React.Component {\n\n  state = {\n    value: '',\n  };\n\n  onChangeText = (value) => {\n    this.setState({ value });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Input\n          style={styles.input}\n          value={this.state.value}\n          onChangeText={this.onChangeText}\n          placeholder='Active'\n        />\n        <Input\n          style={styles.input}\n          disabled={true}\n          placeholder='Disabled'\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    paddingVertical: 8,\n    paddingHorizontal: 4,\n  },\n  input: {\n    flex: 1,\n    marginHorizontal: 4,\n  },\n});\n\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Input,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport class InputSizeShowcase extends React.Component {\n\n  state = {\n    smallValue: '',\n    mediumValue: '',\n    largeValue: '',\n  };\n\n  onSmallTextChange = (smallValue) => {\n    this.setState({ smallValue });\n  };\n\n  onMediumTextChange = (mediumValue) => {\n    this.setState({ mediumValue });\n  };\n\n  onLargeTextChange = (largeValue) => {\n    this.setState({ largeValue });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Input\n          style={styles.input}\n          size='small'\n          placeholder='Small'\n          value={this.state.smallValue}\n          onChangeText={this.onSmallTextChange}\n        />\n        <Input\n          style={styles.input}\n          size='medium'\n          placeholder='Medium'\n          value={this.state.mediumValue}\n          onChangeText={this.onMediumTextChange}\n        />\n        <Input\n          style={styles.input}\n          size='large'\n          placeholder='Large'\n          value={this.state.largeValue}\n          onChangeText={this.onLargeTextChange}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingVertical: 4,\n    paddingHorizontal: 8,\n  },\n  input: {\n    marginVertical: 4,\n  },\n});\n\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Input,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport class InputStatusShowcase extends React.Component {\n\n  state = {\n    primaryValue: '',\n    successValue: '',\n    infoValue: '',\n    warningValue: '',\n    dangerValue: '',\n  };\n\n  onPrimaryTextChange = (primaryValue) => {\n    this.setState({ primaryValue });\n  };\n\n  onSuccessTextChange = (successValue) => {\n    this.setState({ successValue });\n  };\n\n  onInfoTextChange = (infoValue) => {\n    this.setState({ infoValue });\n  };\n\n  onWarningTextChange = (warningValue) => {\n    this.setState({ warningValue });\n  };\n\n  onDangerTextChange = (dangerValue) => {\n    this.setState({ dangerValue });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Input\n          style={styles.input}\n          status='primary'\n          placeholder='Primary'\n          value={this.state.primaryValue}\n          onChangeText={this.onPrimaryTextChange}\n        />\n        <Input\n          style={styles.input}\n          status='success'\n          placeholder='Success'\n          value={this.state.successValue}\n          onChangeText={this.onSuccessTextChange}\n        />\n        <Input\n          style={styles.input}\n          status='info'\n          placeholder='Info'\n          value={this.state.infoValue}\n          onChangeText={this.onInfoTextChange}\n        />\n        <Input\n          style={styles.input}\n          status='warning'\n          placeholder='Warning'\n          value={this.state.warningValue}\n          onChangeText={this.onWarningTextChange}\n        />\n        <Input\n          style={styles.input}\n          status='danger'\n          placeholder='Danger'\n          value={this.state.dangerValue}\n          onChangeText={this.onDangerTextChange}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingVertical: 4,\n    paddingHorizontal: 8,\n  },\n  input: {\n    marginVertical: 4,\n  },\n});\n\n","import React from 'react';\nimport { Input } from 'react-native-ui-kitten';\n\nexport class InputWithCaptionShowcase extends React.Component {\n\n  state = {\n    value: '',\n  };\n\n  onChangeText = (value) => {\n    this.setState({ value });\n  };\n\n  isValidValue = () => {\n    return this.state.value.length >= 6;\n  };\n\n  render() {\n    const isValidInputValue = this.isValidValue();\n    return (\n      <Input\n        placeholder='Place your Text'\n        status={isValidInputValue ? 'success' : 'danger'}\n        caption={isValidInputValue ? '' : 'Invalid value'}\n        value={this.state.value}\n        onChangeText={this.onChangeText}\n      />\n    );\n  }\n}\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport { Icon, Input } from 'react-native-ui-kitten';\nimport { Image } from 'react-native';\n\nexport class InputWithExternalSourceIconShowcase extends React.Component {\n\n  state = {\n    value: '',\n  };\n\n  onChangeText = (value) => {\n    this.setState({ value });\n  };\n\n  renderIcon = (style) => {\n    return (\n      <Image\n        style={style}\n        source={{uri: 'https://akveo.github.io/eva-icons/fill/png/128/eye-off.png'}}\n      />\n    );\n  };\n\n  render() {\n    return (\n      <Input\n        value={this.state.value}\n        placeholder='Place your Text'\n        icon={this.renderIcon}\n        secureTextEntry={true}\n        onChangeText={this.onChangeText}\n      />\n    );\n  }\n}\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport { Icon, Input } from 'react-native-ui-kitten';\n\nexport class InputWithIconShowcase extends React.Component {\n\n  state = {\n    value: '',\n    secureTextEntry: true,\n  };\n\n  onChangeText = (value) => {\n    this.setState({ value });\n  };\n\n  onIconPress = () => {\n    const secureTextEntry = !this.state.secureTextEntry;\n    this.setState({ secureTextEntry });\n  };\n\n  renderIcon = (style) => {\n    const iconName = this.state.secureTextEntry ? 'eye-off' : 'eye';\n    return (\n      <Icon {...style} name={iconName}/>\n    );\n  };\n\n  render() {\n    return (\n      <Input\n        value={this.state.value}\n        placeholder='Place your Text'\n        icon={this.renderIcon}\n        secureTextEntry={this.state.secureTextEntry}\n        onIconPress={this.onIconPress}\n        onChangeText={this.onChangeText}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport { Input } from 'react-native-ui-kitten';\n\nexport class InputWithLabelShowcase extends React.Component {\n\n  state = {\n    value: '',\n  };\n\n  onChangeText = (value) => {\n    this.setState({ value });\n  };\n\n  render() {\n    return (\n      <Input\n        label='LABEL'\n        placeholder='Place your Text'\n        value={this.state.value}\n        onChangeText={this.onChangeText}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Text,\n} from 'react-native-ui-kitten';\n\nexport const LayoutInlineStylingShowcase = () => {\n\n  return (\n    <Layout style={[styles.container, styles.additionalContainerStyle]}>\n      <Text>Welcome To React Native UI Kitten!</Text>\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n  additionalContainerStyle: {\n    borderColor: 'red',\n    borderWidth: 2,\n    borderRadius: 8,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Text,\n} from 'react-native-ui-kitten';\n\nexport const LayoutLevelShowcase = () => {\n\n  return (\n    <Layout style={styles.container} level='4'>\n      <Layout style={styles.container} level='3'>\n        <Layout style={styles.container} level='2'>\n          <Layout style={[styles.container, styles.contentContainer]}>\n            <Text>Welcome To React Native UI Kitten!</Text>\n          </Layout>\n        </Layout>\n      </Layout>\n    </Layout>\n\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n  contentContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Text,\n} from 'react-native-ui-kitten';\n\nexport const LayoutSimpleUsageShowcase = () => {\n\n  return (\n    <Layout style={styles.container}>\n      <Text>Welcome To React Native UI Kitten!</Text>\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n});\n","/**\n * This example demonstrates how simply could be composed List Item\n * with classic layouts like icon at the left, forward button at the right, etc.\n *\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  Icon,\n  List,\n  ListItem,\n} from 'react-native-ui-kitten';\n\nconst SAMPLE_DATA = {\n  title: 'Title for Item',\n  description: 'Description for Item',\n};\n\nexport const ListCompositeItemShowcase = () => {\n\n  const data = new Array(8).fill(SAMPLE_DATA);\n\n  const renderItemAccessory = (style) => (\n    <Button style={style}>FOLLOW</Button>\n  );\n\n  const renderItemIcon = (style) => (\n    <Icon {...style} name='person' />\n  );\n\n  const renderItem = ({ item, index }) => (\n    <ListItem\n      title={`${item.title} ${index + 1}`}\n      description={`${item.description} ${index + 1}`}\n      icon={renderItemIcon}\n      accessory={renderItemAccessory}\n    />\n  );\n\n  return (\n    <List\n      style={styles.list}\n      data={data}\n      renderItem={renderItem}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  list: {\n    height: 150,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  List,\n  ListItem,\n} from 'react-native-ui-kitten';\n\nconst SAMPLE_DATA = {\n  title: 'Title for Item',\n  description: 'Description for Item',\n};\n\nexport const ListInlineStylingShowcase = (props) => {\n\n  const data = new Array(8).fill(SAMPLE_DATA);\n\n  const renderItem = ({ item, index }) => (\n    <ListItem\n      title={`${item.title} ${index + 1}`}\n      description={`${item.description} ${index + 1}`}\n    />\n  );\n\n  return (\n    <List\n      contentContainerStyle={styles.contentContainer}\n      data={data}\n      renderItem={renderItem}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  contentContainer: { paddingHorizontal: 8 },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { ListItem } from 'react-native-ui-kitten';\n\nexport const ListItemInlineStylingShowcase = (props) => (\n  <ListItem\n    style={styles.listItem}\n    titleStyle={styles.listItemTitle}\n    descriptionStyle={styles.listItemDescription}\n    title='Title'\n    description='Description'\n  />\n);\n\nconst styles = StyleSheet.create({\n  listItem: { borderRadius: 8 },\n  listItemTitle: { color: '#3366ff' },\n  listItemDescription: { color: '#2E3A59' },\n});\n","import React from 'react';\nimport { ListItem } from 'react-native-ui-kitten';\n\nexport const ListItemSimpleUsageShowcase = (props) => (\n  <ListItem title='Title' />\n);\n","import React from 'react';\nimport {\n  CheckBox,\n  ListItem,\n} from 'react-native-ui-kitten';\n\nexport class ListItemWithAccessoryShowcase extends React.Component {\n\n  state = {\n    checked: false,\n  };\n\n  onCheckBoxCheckedChange = (index) => {\n    const checked = !this.state.checked;\n    this.setState({ checked });\n  };\n\n  renderAccessory = (style, index) => (\n    <CheckBox\n      style={style}\n      checked={this.state.checked}\n      onChange={() => this.onCheckBoxCheckedChange(index)}\n    />\n  );\n\n  render() {\n    return (\n      <ListItem\n        title='Title'\n        description='Description'\n        accessory={this.renderAccessory}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport { Image } from 'react-native';\nimport { ListItem } from 'react-native-ui-kitten';\n\nconst RemoteStarIcon = (style) => (\n  <Image\n    style={style}\n    source={{ uri: 'https://akveo.github.io/eva-icons/fill/png/128/star.png' }}\n  />\n);\n\nexport const ListItemWithExternalIconShowcase = (props) => (\n  <ListItem\n    title='Title'\n    description='Description'\n    icon={RemoteStarIcon}\n  />\n);\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport {\n  Icon,\n  ListItem,\n} from 'react-native-ui-kitten';\n\nconst StarIcon = (style) => (\n  <Icon {...style} name='star'/>\n);\n\nexport const ListItemWithIconShowcase = (props) => (\n  <ListItem\n    title='Title'\n    description='Description'\n    icon={StarIcon}\n  />\n);\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  List,\n  ListItem,\n} from 'react-native-ui-kitten';\n\nconst SAMPLE_DATA = {\n  title: 'Item',\n};\n\nexport const ListSimpleUsageShowcase = (props) => {\n\n  const data = new Array(8).fill(SAMPLE_DATA);\n\n  const renderItem = ({ item, index }) => (\n    <ListItem title={`${item.title} ${index + 1}`} />\n  );\n\n  return (\n    <List\n      style={styles.list}\n      data={data}\n      renderItem={renderItem}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  list: {\n    height: 150,\n  },\n});\n","import React from 'react';\nimport { Menu } from 'react-native-ui-kitten';\n\nexport class MenuAppearanceShowcase extends React.Component {\n\n  state = {\n    selectedIndex: null,\n  };\n\n  data = [\n    { title: 'Item 1' },\n    { title: 'Item 2' },\n    { title: 'Item 3' },\n    { title: 'Item 4' },\n  ];\n\n  onSelect = (selectedIndex) => {\n    this.setState({ selectedIndex });\n  };\n\n  render() {\n    return (\n      <Menu\n        appearance='noDivider'\n        data={this.data}\n        selectedIndex={this.state.selectedIndex}\n        onSelect={this.onSelect}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Menu } from 'react-native-ui-kitten';\n\nexport class MenuInlineStylingShowcase extends React.Component {\n\n  state = {\n    selectedIndex: null,\n  };\n\n  data = [\n    {\n      title: 'Item 1',\n      titleStyle: styles.menuItemTitle,\n    },\n    { title: 'Item 2' },\n    {\n      title: 'Item 3',\n      titleStyle: styles.menuItemTitle,\n    },\n    { title: 'Item 4' },\n  ];\n\n  onSelect = (selectedIndex) => {\n    this.setState({ selectedIndex });\n  };\n\n  render() {\n    return (\n      <Menu\n        data={this.data}\n        selectedIndex={this.state.selectedIndex}\n        onSelect={this.onSelect}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  menuItemTitle: {\n    color: 'black',\n    fontSize: 18,\n  },\n});\n","import React from 'react';\nimport { Menu } from 'react-native-ui-kitten';\n\nexport class MenuSimpleUsageShowcase extends React.Component {\n\n  state = {\n    selectedIndex: null,\n  };\n\n  data = [\n    { title: 'Item 1' },\n    { title: 'Item 2', disabled: true },\n    { title: 'Item 3' },\n    { title: 'Item 4' },\n  ];\n\n  onSelect = (selectedIndex) => {\n    this.setState({ selectedIndex });\n  };\n\n  render() {\n    return (\n      <Menu\n        data={this.data}\n        selectedIndex={this.state.selectedIndex}\n        onSelect={this.onSelect}\n      />\n    );\n  }\n}\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport {\n  Icon,\n  Menu,\n} from 'react-native-ui-kitten';\n\nconst StarIcon = (style) => (\n  <Icon {...style} name='star'/>\n);\n\nexport class MenuWithIconsShowcase extends React.Component {\n\n  state = {\n    selectedIndex: null,\n  };\n\n  data = [\n    {\n      title: 'Item 1',\n      icon: StarIcon,\n    },\n    {\n      title: 'Item 2',\n      icon: StarIcon,\n    },\n    {\n      title: 'Item 3',\n      icon: StarIcon,\n    },\n    {\n      title: 'Item 4',\n      icon: StarIcon,\n    },\n  ];\n\n  onSelect = (selectedIndex) => {\n    this.setState({ selectedIndex });\n  };\n\n  render() {\n    return (\n      <Menu\n        data={this.data}\n        selectedIndex={this.state.selectedIndex}\n        onSelect={this.onSelect}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport { Menu } from 'react-native-ui-kitten';\n\nexport class MenuWithSubMenuShowcase extends React.Component {\n\n  state = {\n    selectedIndex: null,\n  };\n\n  data = [\n    { title: 'Item 1' },\n    {\n      title: 'Item 2',\n      subItems: [\n        { title: 'Sub Item 1' },\n        { title: 'Sub Item 2' },\n      ],\n    },\n    { title: 'Item 3' },\n    { title: 'Item 4' },\n  ];\n\n  onSelect = (selectedIndex) => {\n    this.setState({ selectedIndex });\n  };\n\n  render() {\n    return (\n      <Menu\n        data={this.data}\n        selectedIndex={this.state.selectedIndex}\n        onSelect={this.onSelect}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport {\n  Image,\n  StyleSheet,\n} from 'react-native';\nimport {\n  Button,\n  Layout,\n  OverflowMenu,\n} from 'react-native-ui-kitten';\n\nconst RemoteStarIcon = (style) => (\n  <Image\n    style={style}\n    source={{ uri: 'https://akveo.github.io/eva-icons/fill/png/128/star.png' }}\n  />\n);\n\nexport class OverflowMenuExternalSourceIconsShowcase extends React.Component {\n\n  state = {\n    menuVisible: false,\n    selectedIndex: null,\n  };\n\n  data = [\n    { title: 'Menu Item 1', icon: RemoteStarIcon },\n    { title: 'Menu Item 2', icon: RemoteStarIcon },\n    { title: 'Menu Item 3', icon: RemoteStarIcon },\n    { title: 'Menu Item 4', icon: RemoteStarIcon },\n  ];\n\n  onItemSelect = (selectedIndex) => {\n    this.setState({ selectedIndex }, this.toggleMenu);\n  };\n\n  toggleMenu = () => {\n    const menuVisible = !this.state.menuVisible;\n    this.setState({ menuVisible });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <OverflowMenu\n          data={this.data}\n          visible={this.state.menuVisible}\n          selectedIndex={this.state.selectedIndex}\n          onSelect={this.onItemSelect}\n          onBackdropPress={this.toggleMenu}>\n          <Button onPress={this.toggleMenu}>\n            TOGGLE MENU\n          </Button>\n        </OverflowMenu>\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 256,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  Layout,\n  OverflowMenu,\n} from 'react-native-ui-kitten';\n\nexport class OverflowMenuSimpleUsageShowcase extends React.Component {\n\n  state = {\n    menuVisible: false,\n    selectedIndex: null,\n  };\n\n  data = [\n    { title: 'Menu Item 1' },\n    { title: 'Menu Item 2' },\n    { title: 'Menu Item 3' },\n    { title: 'Menu Item 4' },\n  ];\n\n  onItemSelect = (selectedIndex) => {\n    this.setState({ selectedIndex }, this.toggleMenu);\n  };\n\n  toggleMenu = () => {\n    const menuVisible = !this.state.menuVisible;\n    this.setState({ menuVisible });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <OverflowMenu\n          data={this.data}\n          visible={this.state.menuVisible}\n          selectedIndex={this.state.selectedIndex}\n          onSelect={this.onItemSelect}\n          onBackdropPress={this.toggleMenu}>\n          <Button onPress={this.toggleMenu}>\n            TOGGLE MENU\n          </Button>\n        </OverflowMenu>\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 256,\n  },\n});\n\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  Layout,\n  OverflowMenu,\n} from 'react-native-ui-kitten';\n\nexport class OverflowMenuWithDisabledItemsShowcase extends React.Component {\n\n  state = {\n    menuVisible: false,\n    selectedIndex: null,\n  };\n\n  data = [\n    { title: 'Menu Item 1' },\n    { title: 'Menu Item 2', disabled: true },\n    { title: 'Menu Item 3' },\n    { title: 'Menu Item 4' },\n  ];\n\n  onItemSelect = (selectedIndex) => {\n    this.setState({ selectedIndex }, this.toggleMenu);\n  };\n\n  toggleMenu = () => {\n    const menuVisible = !this.state.menuVisible;\n    this.setState({ menuVisible });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <OverflowMenu\n          data={this.data}\n          visible={this.state.menuVisible}\n          selectedIndex={this.state.selectedIndex}\n          onSelect={this.onItemSelect}\n          onBackdropPress={this.toggleMenu}>\n          <Button onPress={this.toggleMenu}>\n            TOGGLE MENU\n          </Button>\n        </OverflowMenu>\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 256,\n  },\n});\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  Icon,\n  Layout,\n  OverflowMenu,\n} from 'react-native-ui-kitten';\n\nconst StarIcon = (style) => (\n  <Icon {...style} name='star'/>\n);\n\nexport class OverflowMenuWithIconsShowcase extends React.Component {\n\n  state = {\n    menuVisible: false,\n    selectedIndex: null,\n  };\n\n  data = [\n    { title: 'Menu Item 1', icon: StarIcon },\n    { title: 'Menu Item 2', icon: StarIcon },\n    { title: 'Menu Item 3', icon: StarIcon },\n    { title: 'Menu Item 4', icon: StarIcon },\n  ];\n\n  onItemSelect = (selectedIndex) => {\n    this.setState({ selectedIndex }, this.toggleMenu);\n  };\n\n  toggleMenu = () => {\n    const menuVisible = !this.state.menuVisible;\n    this.setState({ menuVisible });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <OverflowMenu\n          data={this.data}\n          visible={this.state.menuVisible}\n          selectedIndex={this.state.selectedIndex}\n          onSelect={this.onItemSelect}\n          onBackdropPress={this.toggleMenu}>\n          <Button onPress={this.toggleMenu}>\n            TOGGLE MENU\n          </Button>\n        </OverflowMenu>\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 256,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  Layout,\n  OverflowMenu,\n} from 'react-native-ui-kitten';\n\nexport class OverflowMenuWithoutDividerShowcase extends React.Component {\n\n  state = {\n    menuVisible: false,\n    selectedIndex: null,\n  };\n\n  data = [\n    { title: 'Menu Item 1' },\n    { title: 'Menu Item 2' },\n    { title: 'Menu Item 3' },\n    { title: 'Menu Item 4' },\n  ];\n\n  onItemSelect = (selectedIndex) => {\n    this.setState({ selectedIndex }, this.toggleMenu);\n  };\n\n  toggleMenu = () => {\n    const menuVisible = !this.state.menuVisible;\n    this.setState({ menuVisible });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <OverflowMenu\n          appearance='noDivider'\n          data={this.data}\n          visible={this.state.menuVisible}\n          selectedIndex={this.state.selectedIndex}\n          onSelect={this.onItemSelect}\n          onBackdropPress={this.toggleMenu}>\n          <Button onPress={this.toggleMenu}>\n            TOGGLE MENU\n          </Button>\n        </OverflowMenu>\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 256,\n  },\n});\n","import React from 'react';\nimport {\n  View,\n  StyleSheet,\n} from 'react-native';\nimport {\n  Popover,\n  Button,\n  Text,\n  Layout,\n  Select,\n} from 'react-native-ui-kitten';\n\nexport class PopoverPlacementShowcase extends React.Component {\n\n  state = {\n    visible: false,\n    placement: { text: 'top' },\n  };\n\n  placements = [\n    { text: 'top' },\n    { text: 'top start' },\n    { text: 'top end' },\n    { text: 'left' },\n    { text: 'left start' },\n    { text: 'left end' },\n    { text: 'right' },\n    { text: 'right start' },\n    { text: 'right end' },\n    { text: 'bottom' },\n    { text: 'bottom start' },\n    { text: 'bottom end' },\n  ];\n\n  setVisible = () => {\n    const visible = !this.state.visible;\n\n    this.setState({ visible });\n  };\n\n  setPlacement = (placement) => {\n    this.setState({ placement });\n  };\n\n  renderPopoverContent = () => (\n    <Layout style={styles.popoverContent}>\n      <Text>Hi! This is popover.</Text>\n    </Layout>\n  );\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <Select\n          label='Select Popover Placement'\n          data={this.placements}\n          selectedOption={this.state.placement}\n          onSelect={this.setPlacement}\n        />\n        <View style={styles.subContainer}>\n          <Popover\n            visible={this.state.visible}\n            placement={this.state.placement.text}\n            content={this.renderPopoverContent()}\n            onBackdropPress={this.setVisible}>\n            <Button\n              size='giant'\n              onPress={this.setVisible}>\n              SHOW POPOVER\n            </Button>\n          </Popover>\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n  subContainer: {\n    height: 400,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  button: {\n    width: 150,\n  },\n  popoverContent: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  select: {\n    position: 'absolute',\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  Layout,\n  Popover,\n  Text,\n} from 'react-native-ui-kitten';\n\nexport class PopoverSimpleUsageShowcase extends React.Component {\n\n  state = {\n    popoverVisible: false,\n  };\n\n  onToggleButtonPress = () => {\n    const popoverVisible = !this.state.popoverVisible;\n    this.setState({ popoverVisible });\n  };\n\n  renderPopoverContent = () => (\n    <Layout style={styles.popoverContent}>\n      <Text>Hi! This is popover.</Text>\n    </Layout>\n  );\n\n  render() {\n    return (\n      <Popover\n        visible={this.state.popoverVisible}\n        content={this.renderPopoverContent()}\n        onBackdropPress={this.onToggleButtonPress}>\n        <Button onPress={this.onToggleButtonPress}>\n          TOGGLE POPOVER\n        </Button>\n      </Popover>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  popoverContent: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Radio } from 'react-native-ui-kitten';\n\nexport class RadioInlineStylingShowcase extends React.Component {\n\n  state = {\n    checked: false,\n  };\n\n  onChange = (checked) => {\n    this.setState({ checked });\n  };\n\n  render() {\n    return (\n      <Radio\n        style={styles.radio}\n        textStyle={styles.radioText}\n        checked={this.state.checked}\n        text='Place your text'\n        onChange={this.onChange}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  radio: {\n    width: 32,\n    height: 32,\n  },\n  radioText: { color: '#3366FF' },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Radio,\n} from 'react-native-ui-kitten';\n\nexport class RadioSimpleUsageShowcase extends React.Component {\n\n  state = {\n    checked: false,\n  };\n\n  onChange = (checked) => {\n    this.setState({ checked });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Radio\n          style={styles.radio}\n          text='Active'\n          checked={this.state.checked}\n          onChange={this.onChange}\n        />\n        <Radio\n          style={styles.radio}\n          text='Disabled'\n          disabled={true}\n        />\n        <Radio\n          style={styles.radio}\n          text='Checked Disabled'\n          checked={true}\n          disabled={true}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    paddingVertical: 4,\n    paddingHorizontal: 4,\n  },\n  radio: {\n    marginVertical: 4,\n    marginHorizontal: 4,\n  },\n});\n\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Radio,\n} from 'react-native-ui-kitten';\n\nexport class RadioStatusShowcase extends React.Component {\n\n  state = {\n    primaryChecked: false,\n    successChecked: false,\n    infoChecked: false,\n    warningChecked: false,\n    dangerChecked: false,\n    basicChecked: false,\n  };\n\n  onPrimaryChange = (primaryChecked) => {\n    this.setState({ primaryChecked });\n  };\n\n  onSuccessChange = (successChecked) => {\n    this.setState({ successChecked });\n  };\n\n  onInfoChange = (infoChecked) => {\n    this.setState({ infoChecked });\n  };\n\n  onWarningChange = (warningChecked) => {\n    this.setState({ warningChecked });\n  };\n\n  onDangerChange = (dangerChecked) => {\n    this.setState({ dangerChecked });\n  };\n\n  onBasicChange = (basicChecked) => {\n    this.setState({ basicChecked });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Radio\n          style={styles.radio}\n          status='primary'\n          text='Primary'\n          checked={this.state.primaryChecked}\n          onChange={this.onPrimaryChange}\n        />\n        <Radio\n          style={styles.radio}\n          status='success'\n          text='Success'\n          checked={this.state.successChecked}\n          onChange={this.onSuccessChange}\n        />\n        <Radio\n          style={styles.radio}\n          status='info'\n          text='Info'\n          checked={this.state.infoChecked}\n          onChange={this.onInfoChange}\n        />\n        <Radio\n          style={styles.radio}\n          status='warning'\n          text='Warning'\n          checked={this.state.warningChecked}\n          onChange={this.onWarningChange}\n        />\n        <Radio\n          style={styles.radio}\n          status='danger'\n          text='Danger'\n          checked={this.state.dangerChecked}\n          onChange={this.onDangerChange}\n        />\n        <Radio\n          style={styles.radio}\n          status='basic'\n          text='Basic'\n          checked={this.state.basicChecked}\n          onChange={this.onBasicChange}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    paddingVertical: 4,\n    paddingHorizontal: 4,\n  },\n  radio: {\n    marginVertical: 4,\n    marginHorizontal: 4,\n  },\n});\n","import React from 'react';\nimport { Radio } from 'react-native-ui-kitten';\n\nexport class RadioWithTextShowcase extends React.Component {\n\n  state = {\n    checked: false,\n  };\n\n  onChange = (checked) => {\n    this.setState({ checked });\n  };\n\n  render() {\n    return (\n      <Radio\n        text='Place your Text'\n        checked={this.state.checked}\n        onChange={this.onChange}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Radio,\n  RadioGroup,\n} from 'react-native-ui-kitten';\n\nexport class RadioGroupSimpleUsageShowcase extends React.Component {\n\n  state = {\n    selectedIndex: 0,\n  };\n\n  onChange = (selectedIndex) => {\n    this.setState({ selectedIndex });\n  };\n\n  render() {\n    return (\n      <RadioGroup\n        style={styles.container}\n        selectedIndex={this.state.selectedIndex}\n        onChange={this.onChange}>\n        <Radio style={styles.radio} text='Option 1' />\n        <Radio style={styles.radio} text='Option 2' />\n        <Radio style={styles.radio} text='Option 3' />\n      </RadioGroup>\n    );\n  }\n}\n\nexport const styles = StyleSheet.create({\n  container: {\n    paddingVertical: 4,\n    paddingHorizontal: 8,\n  },\n  radio: {\n    marginVertical: 4,\n  },\n});\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Select,\n  Icon,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport class SelectCustomIconShowcase extends React.Component {\n\n  data = [\n    { text: 'Option 1' },\n    { text: 'Option 2' },\n    { text: 'Option 3' },\n  ];\n\n  state = {\n    selectedOption: null,\n  };\n\n  onSelect = (selectedOption) => {\n    this.setState({ selectedOption });\n  };\n\n  renderIcon = (style, visible) => {\n    const iconName = visible ? 'arrow-ios-upward' : 'arrow-ios-downward';\n    return (\n      <Icon {...style} name={iconName}/>\n    );\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Select\n          data={this.data}\n          selectedOption={this.state.selectedOption}\n          icon={this.renderIcon}\n          onSelect={this.onSelect}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    height: 230,\n    padding: 16,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Select,\n} from 'react-native-ui-kitten';\n\nexport class SelectInlineStylingShowcase extends React.Component {\n\n  private data = [\n    { text: 'Option 1' },\n    { text: 'Option 2', textStyle: styles.option2 },\n    { text: 'Option 3' },\n  ];\n\n  state = {\n    selectedOption: null,\n  };\n\n  onSelect = (selectedOption) => {\n    this.setState({ selectedOption });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Select\n          labelStyle={styles.labelStyle}\n          placeholderStyle={styles.placeholderStyle}\n          controlStyle={styles.controlStyle}\n          data={this.data}\n          selectedOption={this.state.selectedOption}\n          onSelect={this.onSelect}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    height: 230,\n    padding: 16,\n  },\n  labelStyle: {\n    color: 'gray',\n  },\n  placeholderStyle: {\n    color: 'gray',\n  },\n  controlStyle: {\n    borderRadius: 8,\n  },\n  option2: {\n    color: 'red',\n    fontSize: 18,\n  },\n});\n","/**\n * IMPORTANT: Do not forget to set keyExtractor property in such case!\n */\n\nimport React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Select,\n} from 'react-native-ui-kitten';\n\nexport class SelectMultiPreselectedInlineShowcase extends React.Component {\n\n  data = [\n    { text: 'Option 1' },\n    { text: 'Option 2' },\n    { text: 'Option 3' },\n  ];\n\n  state = {\n    selectedOption: [\n      { text: 'Option 2' },\n      { text: 'Option 3' },\n    ],\n  };\n\n  onSelect = (selectedOption) => {\n    this.setState({ selectedOption });\n  };\n\n  extractKey = (item) => {\n    return item.text;\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Select\n          data={this.data}\n          multiSelect={true}\n          selectedOption={this.state.selectedOption}\n          keyExtractor={this.extractKey}\n          onSelect={this.onSelect}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    height: 230,\n    padding: 16,\n  },\n});\n\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Select,\n} from 'react-native-ui-kitten';\n\nexport class SelectMultiPreselectedReferenceShowcase extends React.Component {\n\n  data = [\n    { text: 'Option 1' },\n    { text: 'Option 2' },\n    { text: 'Option 3' },\n  ];\n\n  state = {\n    selectedOption: [this.data[1], this.data[2]],\n  };\n\n  onSelect = (selectedOption) => {\n    this.setState({ selectedOption });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Select\n          data={this.data}\n          multiSelect={true}\n          selectedOption={this.state.selectedOption}\n          onSelect={this.onSelect}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    height: 230,\n    padding: 16,\n  },\n});\n\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Select,\n} from 'react-native-ui-kitten';\n\nexport class SelectMultiSelectShowcase extends React.Component {\n\n  data = [\n    { text: 'Option 1' },\n    { text: 'Option 2' },\n    { text: 'Option 3' },\n  ];\n\n  state = {\n    selectedOption: [],\n  };\n\n  onSelect = (selectedOption) => {\n    this.setState({ selectedOption });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Select\n          data={this.data}\n          multiSelect={true}\n          selectedOption={this.state.selectedOption}\n          onSelect={this.onSelect}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    height: 230,\n    padding: 16,\n  },\n});\n\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Select,\n} from 'react-native-ui-kitten';\n\nexport class SelectSimpleUsageShowcase extends React.Component {\n\n  data = [\n    { text: 'Option 1' },\n    { text: 'Option 2' },\n    { text: 'Option 3', disabled: true },\n    { text: 'Option 4' },\n  ];\n\n  state = {\n    selectedOption: null,\n  };\n\n  onSelect = (selectedOption) => {\n    this.setState({ selectedOption });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Select\n          style={styles.select}\n          data={this.data}\n          placeholder='Active'\n          selectedOption={this.state.selectedOption}\n          onSelect={this.onSelect}\n        />\n        <Select\n          style={styles.select}\n          data={this.data}\n          placeholder='Disabled'\n          disabled={true}\n          onSelect={this.onSelect}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    height: 230,\n    paddingVertical: 8,\n    paddingHorizontal: 4,\n  },\n  select: {\n    flex: 1,\n    marginHorizontal: 4,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Select,\n} from 'react-native-ui-kitten';\n\nexport class SelectStatusShowcase extends React.Component {\n\n  data = [\n    { text: 'Option 1' },\n    { text: 'Option 2' },\n    { text: 'Option 3' },\n  ];\n\n  state = {\n    selectedOptionPrimary: null,\n    selectedOptionSuccess: null,\n    selectedOptionInfo: null,\n    selectedOptionDanger: null,\n    selectedOptionWarning: null,\n    selectedOptionBasic: null,\n  };\n\n  onPrimarySelect = (selectedOptionPrimary) => {\n    this.setState({ selectedOptionPrimary });\n  };\n\n  onSuccessSelect = (selectedOptionSuccess) => {\n    this.setState({ selectedOptionSuccess });\n  };\n\n  onInfoSelect = (selectedOptionInfo) => {\n    this.setState({ selectedOptionInfo });\n  };\n\n  onDangerSelect = (selectedOptionDanger) => {\n    this.setState({ selectedOptionDanger });\n  };\n\n  onWarningSelect = (selectedOptionWarning) => {\n    this.setState({ selectedOptionWarning });\n  };\n\n  onBasicSelect = (selectedOptionBasic) => {\n    this.setState({ selectedOptionBasic });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Select\n          data={this.data}\n          status='primary'\n          placeholder='Primary'\n          selectedOption={this.state.selectedOptionPrimary}\n          onSelect={this.onPrimarySelect}\n        />\n        <Select\n          data={this.data}\n          status='success'\n          placeholder='Success'\n          selectedOption={this.state.selectedOptionSuccess}\n          onSelect={this.onSuccessSelect}\n        />\n        <Select\n          data={this.data}\n          status='info'\n          placeholder='Info'\n          selectedOption={this.state.selectedOptionInfo}\n          onSelect={this.onInfoSelect}\n        />\n        <Select\n          data={this.data}\n          status='warning'\n          placeholder='Warning'\n          selectedOption={this.state.selectedOptionWarning}\n          onSelect={this.onWarningSelect}\n        />\n        <Select\n          data={this.data}\n          status='danger'\n          placeholder='Danger'\n          selectedOption={this.state.selectedOptionDanger}\n          onSelect={this.onDangerSelect}\n        />\n        <Select\n          data={this.data}\n          status='basic'\n          placeholder='Basic'\n          selectedOption={this.state.selectedOptionBasic}\n          onSelect={this.onBasicSelect}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Select,\n} from 'react-native-ui-kitten';\n\nexport class SelectWithGroupsShowcase extends React.Component {\n\n  items = [\n    { text: 'Option 1' },\n    { text: 'Option 2' },\n    {\n      text: 'Option 3',\n      items: [\n        { text: 'SubOption 1' },\n        { text: 'SubOption 2' },\n      ],\n    },\n  ];\n\n  state = {\n    selectedOption: null,\n  };\n\n  onSelect = (selectedOption) => {\n    this.setState({ selectedOption });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Select\n          data={this.items}\n          selectedOption={this.state.selectedOption}\n          onSelect={this.onSelect}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    height: 280,\n    padding: 16,\n  },\n});\n\n","import React from 'react';\nimport {\n  StyleSheet,\n  View,\n} from 'react-native';\nimport {\n  List,\n  ListItem,\n  Spinner,\n} from 'react-native-ui-kitten';\n\nconst SAMPLE_DATA = {\n  title: 'Title for Item',\n};\n\nexport class SpinnerLoadingDataShowcase extends React.Component {\n\n  state = {\n    data: [],\n  };\n\n  componentDidMount() {\n    setTimeout(this.loadData, 5000);\n  }\n\n  loadData = () => {\n    const data = new Array(8).fill(SAMPLE_DATA);\n    this.setState({ data });\n  };\n\n  private renderLoading = () => (\n    <View style={styles.loading}>\n      <Spinner/>\n    </View>\n  );\n\n  renderDataItem = ({ item, index }) => (\n    <ListItem title={`${item.title} ${index + 1}`}/>\n  );\n\n  renderData = () => (\n    <List\n      data={this.state.data}\n      renderItem={this.renderDataItem}\n    />\n  );\n\n  render() {\n    const isLoaded: boolean = this.state.data.length > 0;\n    return isLoaded ? this.renderData() : this.renderLoading();\n  }\n}\n\nconst styles = StyleSheet.create({\n  loading: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n","import React from 'react';\nimport { Spinner } from 'react-native-ui-kitten';\n\nexport const SpinnerSimpleUsageShowcase = () => (\n  <Spinner/>\n);\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Spinner,\n} from 'react-native-ui-kitten';\n\nexport const SpinnerSizesShowcase = () => (\n  <Layout style={styles.container}>\n    <Spinner size='tiny'/>\n    <Spinner size='small'/>\n    <Spinner size='medium'/>\n    <Spinner size='large'/>\n    <Spinner size='giant'/>\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    flexWrap: 'wrap',\n    paddingVertical: 4,\n    paddingHorizontal: 4,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Spinner,\n} from 'react-native-ui-kitten';\n\nexport const SpinnerStatusesShowcase = () => (\n  <Layout style={styles.container}>\n    <Spinner status='primary'/>\n    <Spinner status='success'/>\n    <Spinner status='info'/>\n    <Spinner status='warning'/>\n    <Spinner status='danger'/>\n    <Spinner status='alternative'/>\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    flexWrap: 'wrap',\n    paddingVertical: 4,\n    paddingHorizontal: 4,\n  },\n});\n","import React from 'react';\nimport {\n  Tab,\n  TabBar,\n} from 'react-native-ui-kitten';\n\nexport class TabBarSimpleUsageShowcase extends React.Component {\n\n  state = {\n    selectedIndex: 0,\n  };\n\n  onBarSelect = (selectedIndex) => {\n    this.setState({ selectedIndex });\n  };\n\n  render() {\n    return (\n      <TabBar\n        selectedIndex={this.state.selectedIndex}\n        onSelect={this.onBarSelect}>\n        <Tab title='Tab 1'/>\n        <Tab title='Tab 2'/>\n        <Tab title='Tab 3'/>\n      </TabBar>\n    );\n  }\n}\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Tab } from 'react-native-ui-kitten';\n\nexport const TabInlineStylingShowcase = (props) => (\n  <Tab\n    style={styles.tab}\n    titleStyle={styles.tabTitle}\n    title='DASHBOARD'\n  />\n);\n\nconst styles = StyleSheet.create({\n  tab: { backgroundColor: '#EDF1F7' },\n  tabTitle: { color: '#3366FF' },\n});\n","import React from 'react';\nimport { Tab } from 'react-native-ui-kitten';\n\nexport const TabSimpleUsageShowcase = (props) => (\n  <Tab title='Tab Title' />\n);\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Tab,\n  TabView,\n  Text,\n} from 'react-native-ui-kitten';\n\nexport const TabViewInlineStylingShowcase = (props) => (\n  <TabView\n    style={styles.tabView}\n    tabBarStyle={styles.tabBar}\n    indicatorStyle={styles.tabViewIndicator}>\n    <Tab title='DASHBOARD'>\n      <Text>DASHBOARD</Text>\n    </Tab>\n    <Tab title='SETTINGS'>\n      <Text>SETTINGS</Text>\n    </Tab>\n  </TabView>\n);\n\nconst styles = StyleSheet.create({\n  tabView: { backgroundColor: '#EDF1F7' },\n  tabBar: { backgroundColor: '#C5CEE0' },\n  tabViewIndicator: { backgroundColor: '#3366FF' },\n});\n","import React from 'react';\nimport {\n  Tab,\n  TabView,\n  Text,\n} from 'react-native-ui-kitten';\n\nexport class TabViewLazyLoadingShowcase extends React.Component {\n\n  state = {\n    selectedIndex: 0,\n  };\n\n  onSelect = (selectedIndex) => {\n    this.setState({ selectedIndex });\n  };\n\n  shouldLoadTabContent = (index) => {\n    return index === this.state.selectedIndex;\n  };\n\n  render() {\n    return (\n      <TabView\n        selectedIndex={this.state.selectedIndex}\n        shouldLoadComponent={this.shouldLoadTabContent}\n        onSelect={this.onSelect}>\n        <Tab title='DASHBOARD'>\n          <Text>DASHBOARD</Text>\n        </Tab>\n        <Tab title='SETTINGS'>\n          <Text>SETTINGS</Text>\n        </Tab>\n      </TabView>\n    );\n  }\n}\n","import React from 'react';\nimport {\n  Tab,\n  TabView,\n  Text,\n} from 'react-native-ui-kitten';\n\nexport class TabViewSimpleUsageShowcase extends React.Component {\n\n  state = {\n    selectedIndex: 0,\n  };\n\n  onSelect = (selectedIndex) => {\n    this.setState({ selectedIndex });\n  };\n\n  render() {\n    return (\n      <TabView\n        selectedIndex={this.state.selectedIndex}\n        onSelect={this.onSelect}>\n        <Tab title='DASHBOARD'>\n          <Text>DASHBOARD</Text>\n        </Tab>\n        <Tab title='SETTINGS'>\n          <Text>SETTINGS</Text>\n        </Tab>\n      </TabView>\n    );\n  }\n}\n","import React from 'react';\nimport { Image } from 'react-native';\nimport { Tab } from 'react-native-ui-kitten';\n\nconst DashboardIcon = (style) => (\n  <Image style={style} source={{ uri: 'https://akveo.github.io/eva-icons/fill/png/128/layout.png' }}/>\n);\n\nexport const TabWithExternalSourceIconShowcase = (props) => (\n  <Tab title='DASHBOARD' icon={DashboardIcon}/>\n);\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport {\n  Icon,\n  Tab,\n} from 'react-native-ui-kitten';\n\nconst DashboardIcon = (style) => (\n  <Icon {...style} name='layout'/>\n);\n\nexport const TabWithIconShowcase = (props) => (\n  <Tab title='DASHBOARD' icon={DashboardIcon}/>\n);\n","import React from 'react';\nimport {\n  Layout,\n  Text,\n} from 'react-native-ui-kitten';\n\nexport const TextAppearancesShowcase = () => (\n  <Layout>\n    <Text appearance='default'>Default</Text>\n    <Text appearance='alternative'>Alternative</Text>\n    <Text appearance='hint'>Hint</Text>\n  </Layout>\n);\n","import React from 'react';\nimport {\n  Layout,\n  Text,\n} from 'react-native-ui-kitten';\n\nexport const TextCategoriesShowcase = () => (\n  <Layout>\n    <Text category='h1'>H1</Text>\n    <Text category='h2'>H2</Text>\n    <Text category='h3'>H3</Text>\n    <Text category='h4'>H4</Text>\n    <Text category='h5'>H5</Text>\n    <Text category='h6'>H6</Text>\n    <Text category='s1'>S1</Text>\n    <Text category='s2'>S2</Text>\n    <Text category='p1'>P1</Text>\n    <Text category='p2'>P2</Text>\n    <Text category='c1'>C1</Text>\n    <Text category='c2'>C2</Text>\n    <Text category='label'>LABEL</Text>\n  </Layout>\n);\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Text } from 'react-native-ui-kitten';\n\nexport const TextInlineStylingShowcase = () => (\n  <Text style={styles.text}>Sample Text</Text>\n);\n\nconst styles = StyleSheet.create({\n  text: {\n    color: '#3366FF',\n    fontSize: 18,\n  },\n});\n","import React from 'react';\nimport { Text } from 'react-native-ui-kitten';\n\nexport const TextSimpleUsageShowcase = () => (\n  <Text>Sample Text</Text>\n);\n","import React from 'react';\nimport {\n  Layout,\n  Text,\n} from 'react-native-ui-kitten';\n\nexport const TextStatusesShowcase = () => (\n  <Layout>\n    <Text status='primary'>Primary</Text>\n    <Text status='success'>Success</Text>\n    <Text status='info'>Info</Text>\n    <Text status='warning'>Warning</Text>\n    <Text status='danger'>Danger</Text>\n  </Layout>\n);\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Toggle } from 'react-native-ui-kitten';\n\nexport class ToggleInlineStylingShowcase extends React.Component {\n\n  state = {\n    checked: false,\n  };\n\n  onToggleValueChange = (checked) => {\n    this.setState({ checked });\n  };\n\n  render() {\n    return (\n      <Toggle\n        checked={this.state.checked}\n        text='Place your Text'\n        textStyle={styles.text}\n        onChange={this.onToggleValueChange}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  text: {\n    color: '#3366FF',\n    fontSize: 18,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Toggle,\n} from 'react-native-ui-kitten';\n\nexport class ToggleSimpleUsageShowcase extends React.Component {\n\n  state = {\n    checked: false,\n  };\n\n  onToggleValueChange = (checked) => {\n    this.setState({ checked });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Toggle\n          style={styles.toggle}\n          text='Active'\n          checked={this.state.checked}\n          onChange={this.onToggleValueChange}\n        />\n        <Toggle\n          style={styles.toggle}\n          text='Disabled'\n          disabled={true}\n        />\n        <Toggle\n          style={styles.toggle}\n          text='Checked Disabled'\n          checked={true}\n          disabled={true}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    paddingVertical: 4,\n    paddingHorizontal: 4,\n  },\n  toggle: {\n    marginVertical: 4,\n    marginHorizontal: 4,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Toggle,\n} from 'react-native-ui-kitten';\n\nexport class ToggleSizeShowcase extends React.Component {\n\n  state = {\n    tinyChecked: false,\n    smallChecked: false,\n    mediumChecked: false,\n    largeChecked: false,\n    giantChecked: false,\n  };\n\n  onTinyChange = (tinyChecked) => {\n    this.setState({ tinyChecked });\n  };\n\n  onSmallChange = (smallChecked) => {\n    this.setState({ smallChecked });\n  };\n\n  onMediumChange = (mediumChecked) => {\n    this.setState({ mediumChecked });\n  };\n\n  onLargeChange = (largeChecked) => {\n    this.setState({ largeChecked });\n  };\n\n  onGiantChange = (giantChecked) => {\n    this.setState({ giantChecked });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Toggle\n          style={styles.toggle}\n          checked={this.state.tinyChecked}\n          text='Tiny'\n          size='tiny'\n          onChange={this.onTinyChange}\n        />\n        <Toggle\n          style={styles.toggle}\n          checked={this.state.smallChecked}\n          text='Small'\n          size='small'\n          onChange={this.onSmallChange}\n        />\n        <Toggle\n          style={styles.toggle}\n          checked={this.state.mediumChecked}\n          text='Medium'\n          size='medium'\n          onChange={this.onMediumChange}\n        />\n        <Toggle\n          style={styles.toggle}\n          checked={this.state.largeChecked}\n          text='Large'\n          size='large'\n          onChange={this.onLargeChange}\n        />\n        <Toggle\n          style={styles.toggle}\n          checked={this.state.giantChecked}\n          text='Giant'\n          size='giant'\n          onChange={this.onGiantChange}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    paddingVertical: 4,\n    paddingHorizontal: 4,\n  },\n  toggle: {\n    marginVertical: 4,\n    marginHorizontal: 4,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Toggle,\n} from 'react-native-ui-kitten';\n\nexport class ToggleStatusShowcase extends React.Component {\n\n  state = {\n    primaryChecked: false,\n    successChecked: false,\n    infoChecked: false,\n    warningChecked: false,\n    dangerChecked: false,\n    basicChecked: false,\n  };\n\n  onPrimaryChange = (primaryChecked) => {\n    this.setState({ primaryChecked });\n  };\n\n  onSuccessChange = (successChecked) => {\n    this.setState({ successChecked });\n  };\n\n  onInfoChange = (infoChecked) => {\n    this.setState({ infoChecked });\n  };\n\n  onWarningChange = (warningChecked) => {\n    this.setState({ warningChecked });\n  };\n\n  onDangerChange = (dangerChecked) => {\n    this.setState({ dangerChecked });\n  };\n\n  onBasicChange = (basicChecked) => {\n    this.setState({ basicChecked });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Toggle\n          style={styles.toggle}\n          checked={this.state.primaryChecked}\n          text='Primary'\n          status='primary'\n          onChange={this.onPrimaryChange}\n        />\n        <Toggle\n          style={styles.toggle}\n          checked={this.state.successChecked}\n          text='Success'\n          status='success'\n          onChange={this.onSuccessChange}\n        />\n        <Toggle\n          style={styles.toggle}\n          checked={this.state.infoChecked}\n          text='Info'\n          status='info'\n          onChange={this.onInfoChange}\n        />\n        <Toggle\n          style={styles.toggle}\n          checked={this.state.warningChecked}\n          text='Warning'\n          status='warning'\n          onChange={this.onWarningChange}\n        />\n        <Toggle\n          style={styles.toggle}\n          checked={this.state.dangerChecked}\n          text='Danger'\n          status='danger'\n          onChange={this.onDangerChange}\n        />\n        <Toggle\n          style={styles.toggle}\n          checked={this.state.basicChecked}\n          text='Basic'\n          status='basic'\n          onChange={this.onBasicChange}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    paddingVertical: 4,\n    paddingHorizontal: 4,\n  },\n  toggle: {\n    marginVertical: 4,\n    marginHorizontal: 4,\n  },\n});\n","import React from 'react';\nimport { Toggle } from 'react-native-ui-kitten';\n\nexport class ToggleWithTextShowcase extends React.Component {\n\n  state = {\n    checked: false,\n  };\n\n  onChange = (checked) => {\n    this.setState({ checked });\n  };\n\n  render() {\n    return (\n      <Toggle\n        checked={this.state.checked}\n        text='Place your Text'\n        onChange={this.onChange}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  Tooltip,\n} from 'react-native-ui-kitten';\n\nexport class TooltipInlineStylingShowcase extends React.Component {\n\n  state = {\n    tooltipVisible: false,\n  };\n\n  onToggleButtonPress = () => {\n    const tooltipVisible = !this.state.tooltipVisible;\n    this.setState({ tooltipVisible });\n  };\n\n  render() {\n    return (\n      <Tooltip\n        visible={this.state.tooltipVisible}\n        text={'Hi! I\\'m a Tooltip'}\n        textStyle={styles.tooltipText}\n        onBackdropPress={this.onToggleButtonPress}>\n        <Button onPress={this.onToggleButtonPress}>\n          TOGGLE TOOLTIP\n        </Button>\n      </Tooltip>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  tooltipText: {\n    color: 'white',\n    fontSize: 18,\n  },\n});\n","import React from 'react';\nimport {\n  View,\n  StyleSheet,\n} from 'react-native';\nimport {\n  Tooltip,\n  Button,\n  Select,\n} from 'react-native-ui-kitten';\n\nexport class TooltipPlacementShowcase extends React.Component {\n\n  state = {\n    visible: false,\n    placement: { text: 'top' },\n  };\n\n  placements = [\n    { text: 'top' },\n    { text: 'top start' },\n    { text: 'top end' },\n    { text: 'left' },\n    { text: 'left start' },\n    { text: 'left end' },\n    { text: 'right' },\n    { text: 'right start' },\n    { text: 'right end' },\n    { text: 'bottom' },\n    { text: 'bottom start' },\n    { text: 'bottom end' },\n  ];\n\n  setVisible = () => {\n    const visible = !this.state.visible;\n\n    this.setState({ visible });\n  };\n\n  setPlacement = (placement) => {\n    this.setState({ placement });\n  };\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <Select\n          label='Select Tooltip Placement'\n          data={this.placements}\n          selectedOption={this.state.placement}\n          onSelect={this.setPlacement}\n        />\n        <View style={styles.subContainer}>\n          <Tooltip\n            visible={this.state.visible}\n            placement={this.state.placement.text}\n            text='Hi! This is tooltip.'\n            onBackdropPress={this.setVisible}>\n            <Button\n              size='giant'\n              onPress={this.setVisible}>\n              SHOW TOOLTIP\n            </Button>\n          </Tooltip>\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n  subContainer: {\n    height: 400,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  button: {\n    width: 150,\n  },\n  select: {\n    position: 'absolute',\n  },\n});\n","import React from 'react';\nimport {\n  Button,\n  Tooltip,\n} from 'react-native-ui-kitten';\n\nexport class TooltipSimpleUsageShowcase extends React.Component {\n\n  state = {\n    tooltipVisible: false,\n  };\n\n  onToggleButtonPress = () => {\n    const tooltipVisible = !this.state.tooltipVisible;\n    this.setState({ tooltipVisible });\n  };\n\n  render() {\n    return (\n      <Tooltip\n        visible={this.state.tooltipVisible}\n        text={'Hi! I\\'m a Tooltip'}\n        onBackdropPress={this.onToggleButtonPress}>\n        <Button onPress={this.onToggleButtonPress}>\n          TOGGLE TOOLTIP\n        </Button>\n      </Tooltip>\n    );\n  }\n}\n","import React from 'react';\nimport { Image } from 'react-native';\nimport {\n  Button,\n  Tooltip,\n} from 'react-native-ui-kitten';\n\nconst InfoIcon = (style) => (\n  <Image\n    style={style}\n    source={{ uri: 'https://akveo.github.io/eva-icons/fill/png/128/info.png' }}\n  />\n);\n\nexport class TooltipWithExternalSourceIconShowcase extends React.Component {\n\n  state = {\n    tooltipVisible: false,\n  };\n\n  onToggleButtonPress = () => {\n    const tooltipVisible = !this.state.tooltipVisible;\n    this.setState({ tooltipVisible });\n  };\n\n  render() {\n    return (\n      <Tooltip\n        visible={this.state.tooltipVisible}\n        text={'Hi! I\\'m a Tooltip'}\n        icon={InfoIcon}\n        onBackdropPress={this.onToggleButtonPress}>\n        <Button onPress={this.onToggleButtonPress}>\n          TOGGLE TOOLTIP\n        </Button>\n      </Tooltip>\n    );\n  }\n}\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport {\n  Button,\n  Icon,\n  Tooltip,\n} from 'react-native-ui-kitten';\n\nconst InfoIcon = (style) => (\n  <Icon {...style} name='info'/>\n);\n\nexport class TooltipWithIconShowcase extends React.Component {\n\n  state = {\n    tooltipVisible: false,\n  };\n\n  onToggleButtonPress = () => {\n    const tooltipVisible = !this.state.tooltipVisible;\n    this.setState({ tooltipVisible });\n  };\n\n  render() {\n    return (\n      <Tooltip\n        visible={this.state.tooltipVisible}\n        text={'Hi! I\\'m a Tooltip'}\n        icon={InfoIcon}\n        onBackdropPress={this.onToggleButtonPress}>\n        <Button onPress={this.onToggleButtonPress}>\n          TOGGLE TOOLTIP\n        </Button>\n      </Tooltip>\n    );\n  }\n}\n","import React from 'react';\nimport { Image } from 'react-native';\nimport { TopNavigationAction } from 'react-native-ui-kitten';\n\nconst BackIcon = (style) => (\n  <Image\n    style={style}\n    source={{uri: 'https://akveo.github.io/eva-icons/fill/png/128/arrow-back.png'}}\n  />\n);\n\nexport const TopNavigationActionExternalSourceIconShowcase = () => (\n  <TopNavigationAction icon={BackIcon}/>\n);\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Icon,\n  TopNavigationAction,\n} from 'react-native-ui-kitten';\n\nconst EditIcon = (style) => (\n  <Icon {...style} name='edit' />\n);\n\nexport const TopNavigationActionInlineStylingShowcase = () => (\n  <TopNavigationAction\n    style={styles.action}\n    icon={EditIcon}\n  />\n);\n\nconst styles = StyleSheet.create({\n  action: { marginHorizontal: 4 },\n});\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport {\n  Icon,\n  TopNavigationAction,\n} from 'react-native-ui-kitten';\n\nconst BackIcon = (style) => (\n  <Icon {...style} name='arrow-back'/>\n);\n\nexport const TopNavigationActionSimpleUsageShowcase = () => (\n  <TopNavigationAction icon={BackIcon} />\n);\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport {\n  Icon,\n  TopNavigation,\n  TopNavigationAction,\n} from 'react-native-ui-kitten';\n\nconst BackIcon = (style) => (\n  <Icon {...style} name='arrow-back'/>\n);\n\nconst EditIcon = (style) => (\n  <Icon {...style} name='edit'/>\n);\n\nconst MenuIcon = (style) => (\n  <Icon {...style} name='more-vertical'/>\n);\n\nconst BackAction = (props) => (\n  <TopNavigationAction {...props} icon={BackIcon}/>\n);\n\nconst EditAction = (props) => (\n  <TopNavigationAction {...props} icon={EditIcon}/>\n);\n\nconst MenuAction = (props) => (\n  <TopNavigationAction {...props} icon={MenuIcon}/>\n);\n\nexport const TopNavigationActionsShowcase = () => {\n\n  const onBackPress = () => {\n  };\n\n  const renderLeftControl = () => (\n    <BackAction onPress={onBackPress}/>\n  );\n\n  const renderRightControls = () => [\n    <EditAction/>,\n    <MenuAction/>,\n  ];\n\n  return (\n    <TopNavigation\n      title='Application Title'\n      leftControl={renderLeftControl()}\n      rightControls={renderRightControls()}\n    />\n  );\n};\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport {\n  Icon,\n  Layout,\n  TopNavigation,\n  TopNavigationAction,\n} from 'react-native-ui-kitten';\n\nconst BackIcon = (style) => (\n  <Icon {...style} name='arrow-back' />\n);\n\nconst BackAction = () => (\n  <TopNavigationAction icon={BackIcon}/>\n);\n\nexport const TopNavigationAlignmentsShowcase = () => (\n  <Layout>\n    <TopNavigation\n      title='Start'\n      alignment='start'\n      leftControl={BackAction()}\n    />\n    <TopNavigation\n      title='Center'\n      alignment='center'\n      leftControl={BackAction()}\n    />\n  </Layout>\n);\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Icon,\n  TopNavigation,\n  TopNavigationAction,\n} from 'react-native-ui-kitten';\n\nconst BackIcon = (style) => (\n  <Icon {...style} name='arrow-back' />\n);\n\nconst BackAction = () => (\n  <TopNavigationAction icon={BackIcon}/>\n);\n\nexport const TopNavigationInlineStylingShowcase = () => (\n  <TopNavigation\n    style={styles.topNavigation}\n    title='Title'\n    subtitle='Subtitle'\n    leftControl={BackAction()}\n    titleStyle={styles.title}\n    subtitleStyle={styles.subtitle}\n  />\n);\n\nconst styles = StyleSheet.create({\n  topNavigation: { backgroundColor: '#1A2138' },\n  title: { color: '#EDF1F7' },\n  subtitle: { color: '#C5CEE0' },\n});\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport {\n  Icon,\n  TopNavigation,\n  TopNavigationAction,\n} from 'react-native-ui-kitten';\n\nconst BackIcon = (style) => (\n  <Icon {...style} name='arrow-back' />\n);\n\nconst BackAction = () => (\n  <TopNavigationAction icon={BackIcon}/>\n);\n\nexport const TopNavigationSimpleUsageShowcase = () => (\n  <TopNavigation\n    leftControl={BackAction()}\n    title='Application Title'\n  />\n);\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Icon,\n  Layout,\n  OverflowMenu,\n  TopNavigation,\n  TopNavigationAction,\n} from 'react-native-ui-kitten';\n\nconst BackIcon = (style) => (\n  <Icon {...style} name='arrow-back'/>\n);\n\nconst MenuIcon = (style) => (\n  <Icon {...style} name='more-vertical'/>\n);\n\nconst InfoIcon = (style) => (\n  <Icon {...style} name='info'/>\n);\n\nconst LogoutIcon = (style) => (\n  <Icon {...style} name='log-out'/>\n);\n\nexport class TopNavigationWithMenuShowcase extends React.Component {\n\n  state = {\n    menuVisible: false,\n  };\n\n  menuData = [\n    { title: 'About', icon: InfoIcon },\n    { title: 'Logout', icon: LogoutIcon },\n  ];\n\n  onMenuActionPress = () => {\n    const menuVisible = !this.state.menuVisible;\n    this.setState({ menuVisible });\n  };\n\n  onMenuItemSelect = (index) => {\n    // Handle Item Select\n\n    this.setState({ menuVisible: false });\n  };\n\n  renderMenuAction = () => (\n    <OverflowMenu\n      visible={this.state.menuVisible}\n      data={this.menuData}\n      placement='bottom end'\n      onSelect={this.onMenuItemSelect}\n      onBackdropPress={this.onMenuActionPress}>\n      <TopNavigationAction\n        icon={MenuIcon}\n        onPress={this.onMenuActionPress}\n      />\n    </OverflowMenu>\n  );\n\n  renderBackAction = () => (\n    <TopNavigationAction icon={BackIcon} />\n  );\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <TopNavigation\n          title='Application Title'\n          leftControl={this.renderBackAction()}\n          rightControls={this.renderMenuAction()}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 192,\n  },\n});\n\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  ViewPager,\n  Layout,\n  Text,\n} from 'react-native-ui-kitten';\n\nexport class ViewPagerInlineStylingShowcase extends React.Component {\n\n  state = {\n    selectedIndex: 0,\n  };\n\n  onSelect = (selectedIndex) => {\n    this.setState({ selectedIndex });\n  };\n\n  render() {\n    return (\n      <ViewPager\n        style={styles.container}\n        selectedIndex={this.state.selectedIndex}\n        onSelect={this.onSelect}>\n        <Layout\n          level='2'\n          style={styles.tab}>\n          <Text category='h5'>Tab 1</Text>\n        </Layout>\n        <Layout\n          level='2'\n          style={styles.tab}>\n          <Text category='h5'>Tab 2</Text>\n        </Layout>\n      </ViewPager>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 16,\n  },\n  tab: {\n    height: 200,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  ViewPager,\n  Layout,\n  Text,\n} from 'react-native-ui-kitten';\n\nexport class ViewPagerLazyLoadingShowcase extends React.Component {\n\n  state = {\n    selectedIndex: 0,\n  };\n\n  onSelect = (selectedIndex) => {\n    this.setState({ selectedIndex });\n  };\n\n  shouldLoadComponent = (index) => {\n    return index === this.state.selectedIndex;\n  };\n\n  render() {\n    return (\n      <ViewPager\n        selectedIndex={this.state.selectedIndex}\n        shouldLoadComponent={this.shouldLoadComponent}\n        onSelect={this.onSelect}>\n        <Layout\n          level='2'\n          style={styles.tab}>\n          <Text category='h5'>Tab 1</Text>\n        </Layout>\n        <Layout\n          level='2'\n          style={styles.tab}>\n          <Text category='h5'>Tab 2</Text>\n        </Layout>\n      </ViewPager>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  tab: {\n    height: 200,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Text,\n  ViewPager,\n} from 'react-native-ui-kitten';\n\nexport class ViewPagerSimpleUsageShowcase extends React.Component {\n\n  state = {\n    selectedIndex: 0,\n  };\n\n  onIndexChange = (selectedIndex) => {\n    this.setState({ selectedIndex });\n  };\n\n  render() {\n    return (\n      <ViewPager\n        selectedIndex={this.state.selectedIndex}\n        onSelect={this.onIndexChange}>\n        <Layout\n          level='2'\n          style={styles.tab}>\n          <Text category='h5'>Tab 1</Text>\n        </Layout>\n        <Layout\n          level='2'\n          style={styles.tab}>\n          <Text category='h5'>Tab 2</Text>\n        </Layout>\n      </ViewPager>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  tab: {\n    height: 200,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n","import React from 'react';\nimport { createBrowserApp } from '@react-navigation/web';\nimport { createStackNavigator } from 'react-navigation';\nimport { sharingHeightContainer } from '@pg/components/sharingHeight.container';\nimport { AvatarInlineStylingShowcase } from '@pg/components/showcases/avatar/avatarInlineStyling.component';\nimport { AvatarRemoteImagesShowcase } from '@pg/components/showcases/avatar/avatarRemoteImages.component';\nimport { AvatarShapeShowcase } from '@pg/components/showcases/avatar/avatarShape.component';\nimport { AvatarSimpleUsageShowcase } from '@pg/components/showcases/avatar/avatarSimpleUsage.component';\nimport { AvatarSizeShowcase } from '@pg/components/showcases/avatar/avatarSize.component';\nimport { BottomNavigationInlineStylingShowcase } from '@pg/components/showcases/bottomNavigation/bottomNavigationInlineStyling.component';\nimport { BottomNavigationSimpleUsageShowcase } from '@pg/components/showcases/bottomNavigation/bottomNavigationSimpleUsage.component';\nimport { BottomNavigationTabInlineStylingShowcase } from '@pg/components/showcases/bottomNavigation/bottomNavigationTabInlineStyling.component';\nimport { BottomNavigationTabSimpleUsageShowcase } from '@pg/components/showcases/bottomNavigation/bottomNavigationTabSimpleUsage.component';\nimport { BottomNavigationTabWithExternalSourceIconShowcase } from '@pg/components/showcases/bottomNavigation/bottomNavigationTabWithExternalSourceIcon.component';\nimport { BottomNavigationTabWithIconShowcase } from '@pg/components/showcases/bottomNavigation/bottomNavigationTabWithIcon.component';\nimport { BottomNavigationWithIconsShowcase } from '@pg/components/showcases/bottomNavigation/bottomNavigationWithIcons.component';\nimport { BottomNavigationWithoutIndicatorShowcase } from '@pg/components/showcases/bottomNavigation/bottomNavigationWithoutIndicator.component';\nimport { ButtonAppearancesShowcase } from '@pg/components/showcases/button/buttonAppearances.component';\nimport { ButtonGhostShowcase } from '@pg/components/showcases/button/buttonGhost.component';\nimport { ButtonOutlineShowcase } from '@pg/components/showcases/button/buttonOutline.component';\nimport { ButtonSimpleUsageShowcase } from '@pg/components/showcases/button/buttonSimpleUsage.component';\nimport { ButtonSizeShowcase } from '@pg/components/showcases/button/buttonSize.component';\nimport { ButtonStatusShowcase } from '@pg/components/showcases/button/buttonStatus.component';\nimport { ButtonWithIconShowcase } from '@pg/components/showcases/button/buttonWithIcon.component';\nimport { ButtonGroupAppearanceShowcase } from '@pg/components/showcases/buttonGroup/buttonGroupAppearance.component';\nimport { ButtonGroupInlineStylingShowcase } from '@pg/components/showcases/buttonGroup/buttonGroupInlineStyling.component';\nimport { ButtonGroupSimpleUsageShowcase } from '@pg/components/showcases/buttonGroup/buttonGroupSimpleUsage.component';\nimport { ButtonGroupSizeShowcase } from '@pg/components/showcases/buttonGroup/buttonGroupSize.component';\nimport { ButtonGroupStatusShowcase } from '@pg/components/showcases/buttonGroup/buttonGroupStatus.component';\nimport { CalendarBoundingMonthShowcase } from '@pg/components/showcases/calendar/calendarBoundingMonth.component';\nimport { CalendarBoundsShowcase } from '@pg/components/showcases/calendar/calendarBounds.component';\nimport { CalendarCustomDayShowcase } from '@pg/components/showcases/calendar/calendarCustomDay.component';\nimport { CalendarCustomLocaleShowcase } from '@pg/components/showcases/calendar/calendarCustomLocale.component';\nimport { CalendarFilterShowcase } from '@pg/components/showcases/calendar/calendarFilter.component';\nimport { CalendarMomentShowcase } from '@pg/components/showcases/calendar/calendarMoment.component';\nimport { CalendarSimpleUsageShowcase } from '@pg/components/showcases/calendar/calendarSimpleUsage.component';\nimport { CalendarStartDayOfWeekShowcase } from '@pg/components/showcases/calendar/calendarStartDayOfWeek.component';\nimport { RangeCalendarSimpleUsageShowcase } from '@pg/components/showcases/calendar/rangeCalendarSimpleUsage.component';\nimport { CardCustomHeaderShowcase } from '@pg/components/showcases/card/cardCustomHeader.component';\nimport { CardEvaHeaderShowcase } from '@pg/components/showcases/card/cardEvaHeader.component';\nimport { CardFooterShowcase } from '@pg/components/showcases/card/cardFooter.component';\nimport { CardHeaderFooterShowcase } from '@pg/components/showcases/card/cardHeaderFooter.component';\nimport { CardSimpleUsageShowcase } from '@pg/components/showcases/card/cardSimpleUsage.component';\nimport { CardStatusesShowcase } from '@pg/components/showcases/card/cardStatuses.component';\nimport { CheckboxIndeterminateShowcase } from '@pg/components/showcases/checkbox/checkboxIndeterminate.component';\nimport { CheckboxInlineStylingShowcase } from '@pg/components/showcases/checkbox/checkboxInlineStyling.component';\nimport { CheckboxSimpleUsageShowcase } from '@pg/components/showcases/checkbox/checkboxSimpleUsage.component';\nimport { CheckboxStatusShowcase } from '@pg/components/showcases/checkbox/checkboxStatus.component';\nimport { CheckboxTextShowcase } from '@pg/components/showcases/checkbox/checkboxText.component';\nimport { DatepickerBoundingMonthShowcase } from '@pg/components/showcases/datepicker/datepickerBoundingMonth.component';\nimport { DatepickerCustomDayShowcase } from '@pg/components/showcases/datepicker/datepickerCustomDay.component';\nimport { DatepickerCustomLocaleShowcase } from '@pg/components/showcases/datepicker/datepickerCustomLocale.component';\nimport { DatepickerFilterShowcase } from '@pg/components/showcases/datepicker/datepickerFilter.component';\nimport { DatepickerMomentShowcase } from '@pg/components/showcases/datepicker/datepickerMoment.component';\nimport { DatepickerSimpleUsageShowcase } from '@pg/components/showcases/datepicker/datepickerSimpleUsage.component';\nimport { DatepickerWithIconShowcase } from '@pg/components/showcases/datepicker/datepickerWithIcon.component';\nimport { RangeDatepickerSimpleUsageShowcase } from '@pg/components/showcases/datepicker/rangeDatepickerSimpleUsage.component';\nimport { DrawerCustomHeaderShowcase } from '@pg/components/showcases/drawer/drawerCustomHeader.component';\nimport { DrawerFooterShowcase } from '@pg/components/showcases/drawer/drawerFooter.component';\nimport { DrawerHeaderShowcase } from '@pg/components/showcases/drawer/drawerHeader.component';\nimport { DrawerHeaderFooterInlineStylingShowcase } from '@pg/components/showcases/drawer/drawerHeaderFooterInlineStyling.component';\nimport { DrawerHeaderFooterSimpleUsageShowcase } from '@pg/components/showcases/drawer/drawerHeaderFooterSimpleUsage.component';\nimport { DrawerHeaderFooterWithAccessoryShowcase } from '@pg/components/showcases/drawer/drawerHeaderFooterWithAccessory.component';\nimport { DrawerHeaderFooterWithExternalSourceIconShowcase } from '@pg/components/showcases/drawer/drawerHeaderFooterWithExternalSourceIcon.component';\nimport { DrawerNotificationBadgeItemShowcase } from '@pg/components/showcases/drawer/drawerNotificationBadgeItem.component';\nimport { DrawerSimpleUsageShowcase } from '@pg/components/showcases/drawer/drawerSimpleUsage.component';\nimport { DrawerWithIconsShowcase } from '@pg/components/showcases/drawer/drawerWithIcons.component';\nimport { IconAnimationShowcase } from '@pg/components/showcases/icon/iconAnimation.component';\nimport { IconAnimationInfiniteShowcase } from '@pg/components/showcases/icon/iconAnimationInfinite.component';\nimport { IconExternalSourceShowcase } from '@pg/components/showcases/icon/iconExternalSource.component';\nimport { IconInlineStylingShowcase } from '@pg/components/showcases/icon/iconInlineStyling.component';\nimport { IconSimpleUsageShowcase } from '@pg/components/showcases/icon/iconSimpleUsage.component';\nimport { IconWithinButtonShowcase } from '@pg/components/showcases/icon/iconWithinButton.component';\nimport { IconWithinInputShowcase } from '@pg/components/showcases/icon/iconWithinInput.component';\nimport { InputInlineStylingShowcase } from '@pg/components/showcases/input/inputInlineStyling.component';\nimport { InputSimpleUsageShowcase } from '@pg/components/showcases/input/inputSimpleUsage.component';\nimport { InputSizeShowcase } from '@pg/components/showcases/input/inputSize.component';\nimport { InputStatusShowcase } from '@pg/components/showcases/input/inputStatus.component';\nimport { InputWithCaptionShowcase } from '@pg/components/showcases/input/inputWithCaption.component';\nimport { InputWithExternalSourceIconShowcase } from '@pg/components/showcases/input/inputWithExternalSourceIcon.component';\nimport { InputWithIconShowcase } from '@pg/components/showcases/input/inputWithIcon.component';\nimport { InputWithLabelShowcase } from '@pg/components/showcases/input/inputWithLabel.component';\nimport { LayoutInlineStylingShowcase } from '@pg/components/showcases/layout/layoutInlineStyling.component';\nimport { LayoutLevelShowcase } from '@pg/components/showcases/layout/layoutLevel.component';\nimport { LayoutSimpleUsageShowcase } from '@pg/components/showcases/layout/layoutSimpleUsage.component';\nimport { ListCompositeItemShowcase } from '@pg/components/showcases/list/listCompositeItem.component';\nimport { ListInlineStylingShowcase } from '@pg/components/showcases/list/listInlineStyling.component';\nimport { ListItemInlineStylingShowcase } from '@pg/components/showcases/list/listItemInlineStyling.component';\nimport { ListItemSimpleUsageShowcase } from '@pg/components/showcases/list/listItemSimpleUsage.component';\nimport { ListItemWithAccessoryShowcase } from '@pg/components/showcases/list/listItemWithAccessory.component';\nimport { ListItemWithExternalIconShowcase } from '@pg/components/showcases/list/listItemWithExternalIcon.component';\nimport { ListItemWithIconShowcase } from '@pg/components/showcases/list/listItemWithIcon.component';\nimport { ListSimpleUsageShowcase } from '@pg/components/showcases/list/listSimpleUsage.component';\nimport { MenuAppearanceShowcase } from '@pg/components/showcases/menu/menuAppearance.component';\nimport { MenuInlineStylingShowcase } from '@pg/components/showcases/menu/menuInlineStyling.component';\nimport { MenuSimpleUsageShowcase } from '@pg/components/showcases/menu/menuSimpleUsage.component';\nimport { MenuWithIconsShowcase } from '@pg/components/showcases/menu/menuWithIcons.component';\nimport { MenuWithSubMenuShowcase } from '@pg/components/showcases/menu/menuWithSubMenu.component';\nimport { OverflowMenuExternalSourceIconsShowcase } from '@pg/components/showcases/overflowMenu/overflowMenuExternalSourceIcons.component';\nimport { OverflowMenuSimpleUsageShowcase } from '@pg/components/showcases/overflowMenu/overflowMenuSimpleUsage.component';\nimport { OverflowMenuWithDisabledItemsShowcase } from '@pg/components/showcases/overflowMenu/overflowMenuWithDisabledItems.component';\nimport { OverflowMenuWithIconsShowcase } from '@pg/components/showcases/overflowMenu/overflowMenuWithIcons.component';\nimport { OverflowMenuWithoutDividerShowcase } from '@pg/components/showcases/overflowMenu/overflowMenuWithoutDivider.component';\nimport { PopoverPlacementShowcase } from '@pg/components/showcases/popover/popoverPlacement.component';\nimport { PopoverSimpleUsageShowcase } from '@pg/components/showcases/popover/popoverSimpleUsage.component';\nimport { RadioInlineStylingShowcase } from '@pg/components/showcases/radio/radioInlineStyling.component';\nimport { RadioSimpleUsageShowcase } from '@pg/components/showcases/radio/radioSimpleUsage.component';\nimport { RadioStatusShowcase } from '@pg/components/showcases/radio/radioStatus.component';\nimport { RadioWithTextShowcase } from '@pg/components/showcases/radio/radioWithText.component';\nimport { RadioGroupSimpleUsageShowcase } from '@pg/components/showcases/radioGroup/radioGroupSimpleUsage.component';\nimport { SelectCustomIconShowcase } from '@pg/components/showcases/select/selectCustomIcon.component';\nimport { SelectInlineStylingShowcase } from '@pg/components/showcases/select/selectInlineStyling.component';\nimport { SelectMultiPreselectedInlineShowcase } from '@pg/components/showcases/select/selectMultiPreselectedInline.component';\nimport { SelectMultiPreselectedReferenceShowcase } from '@pg/components/showcases/select/selectMultiPreselectedReference.component';\nimport { SelectMultiSelectShowcase } from '@pg/components/showcases/select/selectMultiSelect.component';\nimport { SelectSimpleUsageShowcase } from '@pg/components/showcases/select/selectSimpleUsage.component';\nimport { SelectStatusShowcase } from '@pg/components/showcases/select/selectStatus.component';\nimport { SelectWithGroupsShowcase } from '@pg/components/showcases/select/selectWithGroups.component';\nimport { SpinnerLoadingDataShowcase } from '@pg/components/showcases/spinner/spinnerLoadingData.component';\nimport { SpinnerSimpleUsageShowcase } from '@pg/components/showcases/spinner/spinnerSimpleUsage.component';\nimport { SpinnerSizesShowcase } from '@pg/components/showcases/spinner/spinnerSizes.component';\nimport { SpinnerStatusesShowcase } from '@pg/components/showcases/spinner/spinnerStatuses.component';\nimport { TabBarSimpleUsageShowcase } from '@pg/components/showcases/tab/tabBarSimpleUsage.component';\nimport { TabInlineStylingShowcase } from '@pg/components/showcases/tab/tabInlineStyling.component';\nimport { TabSimpleUsageShowcase } from '@pg/components/showcases/tab/tabSimpleUsage.component';\nimport { TabViewInlineStylingShowcase } from '@pg/components/showcases/tab/tabViewInlineStyling.component';\nimport { TabViewLazyLoadingShowcase } from '@pg/components/showcases/tab/tabViewLazyLoading.component';\nimport { TabViewSimpleUsageShowcase } from '@pg/components/showcases/tab/tabViewSimpleUsage.component';\nimport { TabWithExternalSourceIconShowcase } from '@pg/components/showcases/tab/tabWithExternalSourceIcon.component';\nimport { TabWithIconShowcase } from '@pg/components/showcases/tab/tabWithIcon.component';\nimport { TextAppearancesShowcase } from '@pg/components/showcases/text/textAppearances.component';\nimport { TextCategoriesShowcase } from '@pg/components/showcases/text/textCategories.component';\nimport { TextInlineStylingShowcase } from '@pg/components/showcases/text/textInlineStyling.component';\nimport { TextSimpleUsageShowcase } from '@pg/components/showcases/text/textSimpleUsage.component';\nimport { TextStatusesShowcase } from '@pg/components/showcases/text/textStatuses.component';\nimport { ToggleInlineStylingShowcase } from '@pg/components/showcases/toggle/toggleInlineStyling.component';\nimport { ToggleSimpleUsageShowcase } from '@pg/components/showcases/toggle/toggleSimpleUsage.component';\nimport { ToggleSizeShowcase } from '@pg/components/showcases/toggle/toggleSize.component';\nimport { ToggleStatusShowcase } from '@pg/components/showcases/toggle/toggleStatus.component';\nimport { ToggleWithTextShowcase } from '@pg/components/showcases/toggle/toggleWithText.component';\nimport { TooltipInlineStylingShowcase } from '@pg/components/showcases/tooltip/tooltipInlineStyling.component';\nimport { TooltipPlacementShowcase } from '@pg/components/showcases/tooltip/tooltipPlacement.component';\nimport { TooltipSimpleUsageShowcase } from '@pg/components/showcases/tooltip/tooltipSimpleUsage.component';\nimport { TooltipWithExternalSourceIconShowcase } from '@pg/components/showcases/tooltip/tooltipWithExternalSourceIcon.component';\nimport { TooltipWithIconShowcase } from '@pg/components/showcases/tooltip/tooltipWithIcon.component';\nimport { TopNavigationActionExternalSourceIconShowcase } from '@pg/components/showcases/topNavigation/topNavigationActionExternalSourceIcon.component';\nimport { TopNavigationActionInlineStylingShowcase } from '@pg/components/showcases/topNavigation/topNavigationActionInlineStyling.component';\nimport { TopNavigationActionSimpleUsageShowcase } from '@pg/components/showcases/topNavigation/topNavigationActionSimpleUsage.component';\nimport { TopNavigationActionsShowcase } from '@pg/components/showcases/topNavigation/topNavigationActions.component';\nimport { TopNavigationAlignmentsShowcase } from '@pg/components/showcases/topNavigation/topNavigationAlignments.component';\nimport { TopNavigationInlineStylingShowcase } from '@pg/components/showcases/topNavigation/topNavigationInlineStyling.component';\nimport { TopNavigationSimpleUsageShowcase } from '@pg/components/showcases/topNavigation/topNavigationSimpleUsage.component';\nimport { TopNavigationWithMenuShowcase } from '@pg/components/showcases/topNavigation/topNavigationWithMenu.component';\nimport { ViewPagerInlineStylingShowcase } from '@pg/components/showcases/viewPager/viewPagerInlineStyling.component';\nimport { ViewPagerLazyLoadingShowcase } from '@pg/components/showcases/viewPager/viewPagerLazyLoading.component';\nimport { ViewPagerSimpleUsageShowcase } from '@pg/components/showcases/viewPager/viewPagerSimpleUsage.component';\n\nconst routes = {\n  AvatarInlineStyling: () => sharingHeightContainer(AvatarInlineStylingShowcase, 'AvatarInlineStyling'),\n  AvatarRemoteImages: () => sharingHeightContainer(AvatarRemoteImagesShowcase, 'AvatarRemoteImages'),\n  AvatarShape: () => sharingHeightContainer(AvatarShapeShowcase, 'AvatarShape'),\n  AvatarSimpleUsage: () => sharingHeightContainer(AvatarSimpleUsageShowcase, 'AvatarSimpleUsage'),\n  AvatarSize: () => sharingHeightContainer(AvatarSizeShowcase, 'AvatarSize'),\n  BottomNavigationInlineStyling: () => sharingHeightContainer(BottomNavigationInlineStylingShowcase, 'BottomNavigationInlineStyling'),\n  BottomNavigationSimpleUsage: () => sharingHeightContainer(BottomNavigationSimpleUsageShowcase, 'BottomNavigationSimpleUsage'),\n  BottomNavigationTabInlineStyling: () => sharingHeightContainer(BottomNavigationTabInlineStylingShowcase, 'BottomNavigationTabInlineStyling'),\n  BottomNavigationTabSimpleUsage: () => sharingHeightContainer(BottomNavigationTabSimpleUsageShowcase, 'BottomNavigationTabSimpleUsage'),\n  BottomNavigationTabWithExternalSourceIcon: () => sharingHeightContainer(BottomNavigationTabWithExternalSourceIconShowcase, 'BottomNavigationTabWithExternalSourceIcon'),\n  BottomNavigationTabWithIcon: () => sharingHeightContainer(BottomNavigationTabWithIconShowcase, 'BottomNavigationTabWithIcon'),\n  BottomNavigationWithIcons: () => sharingHeightContainer(BottomNavigationWithIconsShowcase, 'BottomNavigationWithIcons'),\n  BottomNavigationWithoutIndicator: () => sharingHeightContainer(BottomNavigationWithoutIndicatorShowcase, 'BottomNavigationWithoutIndicator'),\n  ButtonAppearances: () => sharingHeightContainer(ButtonAppearancesShowcase, 'ButtonAppearances'),\n  ButtonGhost: () => sharingHeightContainer(ButtonGhostShowcase, 'ButtonGhost'),\n  ButtonOutline: () => sharingHeightContainer(ButtonOutlineShowcase, 'ButtonOutline'),\n  ButtonSimpleUsage: () => sharingHeightContainer(ButtonSimpleUsageShowcase, 'ButtonSimpleUsage'),\n  ButtonSize: () => sharingHeightContainer(ButtonSizeShowcase, 'ButtonSize'),\n  ButtonStatus: () => sharingHeightContainer(ButtonStatusShowcase, 'ButtonStatus'),\n  ButtonWithIcon: () => sharingHeightContainer(ButtonWithIconShowcase, 'ButtonWithIcon'),\n  ButtonGroupAppearance: () => sharingHeightContainer(ButtonGroupAppearanceShowcase, 'ButtonGroupAppearance'),\n  ButtonGroupInlineStyling: () => sharingHeightContainer(ButtonGroupInlineStylingShowcase, 'ButtonGroupInlineStyling'),\n  ButtonGroupSimpleUsage: () => sharingHeightContainer(ButtonGroupSimpleUsageShowcase, 'ButtonGroupSimpleUsage'),\n  ButtonGroupSize: () => sharingHeightContainer(ButtonGroupSizeShowcase, 'ButtonGroupSize'),\n  ButtonGroupStatus: () => sharingHeightContainer(ButtonGroupStatusShowcase, 'ButtonGroupStatus'),\n  CalendarBoundingMonth: () => sharingHeightContainer(CalendarBoundingMonthShowcase, 'CalendarBoundingMonth'),\n  CalendarBounds: () => sharingHeightContainer(CalendarBoundsShowcase, 'CalendarBounds'),\n  CalendarCustomDay: () => sharingHeightContainer(CalendarCustomDayShowcase, 'CalendarCustomDay'),\n  CalendarCustomLocale: () => sharingHeightContainer(CalendarCustomLocaleShowcase, 'CalendarCustomLocale'),\n  CalendarFilter: () => sharingHeightContainer(CalendarFilterShowcase, 'CalendarFilter'),\n  CalendarMoment: () => sharingHeightContainer(CalendarMomentShowcase, 'CalendarMoment'),\n  CalendarSimpleUsage: () => sharingHeightContainer(CalendarSimpleUsageShowcase, 'CalendarSimpleUsage'),\n  CalendarStartDayOfWeek: () => sharingHeightContainer(CalendarStartDayOfWeekShowcase, 'CalendarStartDayOfWeek'),\n  RangeCalendarSimpleUsage: () => sharingHeightContainer(RangeCalendarSimpleUsageShowcase, 'RangeCalendarSimpleUsage'),\n  CardCustomHeader: () => sharingHeightContainer(CardCustomHeaderShowcase, 'CardCustomHeader'),\n  CardEvaHeader: () => sharingHeightContainer(CardEvaHeaderShowcase, 'CardEvaHeader'),\n  CardFooter: () => sharingHeightContainer(CardFooterShowcase, 'CardFooter'),\n  CardHeaderFooter: () => sharingHeightContainer(CardHeaderFooterShowcase, 'CardHeaderFooter'),\n  CardSimpleUsage: () => sharingHeightContainer(CardSimpleUsageShowcase, 'CardSimpleUsage'),\n  CardStatuses: () => sharingHeightContainer(CardStatusesShowcase, 'CardStatuses'),\n  CheckboxIndeterminate: () => sharingHeightContainer(CheckboxIndeterminateShowcase, 'CheckboxIndeterminate'),\n  CheckboxInlineStyling: () => sharingHeightContainer(CheckboxInlineStylingShowcase, 'CheckboxInlineStyling'),\n  CheckboxSimpleUsage: () => sharingHeightContainer(CheckboxSimpleUsageShowcase, 'CheckboxSimpleUsage'),\n  CheckboxStatus: () => sharingHeightContainer(CheckboxStatusShowcase, 'CheckboxStatus'),\n  CheckboxText: () => sharingHeightContainer(CheckboxTextShowcase, 'CheckboxText'),\n  DatepickerBoundingMonth: () => sharingHeightContainer(DatepickerBoundingMonthShowcase, 'DatepickerBoundingMonth'),\n  DatepickerCustomDay: () => sharingHeightContainer(DatepickerCustomDayShowcase, 'DatepickerCustomDay'),\n  DatepickerCustomLocale: () => sharingHeightContainer(DatepickerCustomLocaleShowcase, 'DatepickerCustomLocale'),\n  DatepickerFilter: () => sharingHeightContainer(DatepickerFilterShowcase, 'DatepickerFilter'),\n  DatepickerMoment: () => sharingHeightContainer(DatepickerMomentShowcase, 'DatepickerMoment'),\n  DatepickerSimpleUsage: () => sharingHeightContainer(DatepickerSimpleUsageShowcase, 'DatepickerSimpleUsage'),\n  DatepickerWithIcon: () => sharingHeightContainer(DatepickerWithIconShowcase, 'DatepickerWithIcon'),\n  RangeDatepickerSimpleUsage: () => sharingHeightContainer(RangeDatepickerSimpleUsageShowcase, 'RangeDatepickerSimpleUsage'),\n  DrawerCustomHeader: () => sharingHeightContainer(DrawerCustomHeaderShowcase, 'DrawerCustomHeader'),\n  DrawerFooter: () => sharingHeightContainer(DrawerFooterShowcase, 'DrawerFooter'),\n  DrawerHeader: () => sharingHeightContainer(DrawerHeaderShowcase, 'DrawerHeader'),\n  DrawerHeaderFooterInlineStyling: () => sharingHeightContainer(DrawerHeaderFooterInlineStylingShowcase, 'DrawerHeaderFooterInlineStyling'),\n  DrawerHeaderFooterSimpleUsage: () => sharingHeightContainer(DrawerHeaderFooterSimpleUsageShowcase, 'DrawerHeaderFooterSimpleUsage'),\n  DrawerHeaderFooterWithAccessory: () => sharingHeightContainer(DrawerHeaderFooterWithAccessoryShowcase, 'DrawerHeaderFooterWithAccessory'),\n  DrawerHeaderFooterWithExternalSourceIcon: () => sharingHeightContainer(DrawerHeaderFooterWithExternalSourceIconShowcase, 'DrawerHeaderFooterWithExternalSourceIcon'),\n  DrawerNotificationBadgeItem: () => sharingHeightContainer(DrawerNotificationBadgeItemShowcase, 'DrawerNotificationBadgeItem'),\n  DrawerSimpleUsage: () => sharingHeightContainer(DrawerSimpleUsageShowcase, 'DrawerSimpleUsage'),\n  DrawerWithIcons: () => sharingHeightContainer(DrawerWithIconsShowcase, 'DrawerWithIcons'),\n  IconAnimation: () => sharingHeightContainer(IconAnimationShowcase, 'IconAnimation'),\n  IconAnimationInfinite: () => sharingHeightContainer(IconAnimationInfiniteShowcase, 'IconAnimationInfinite'),\n  IconExternalSource: () => sharingHeightContainer(IconExternalSourceShowcase, 'IconExternalSource'),\n  IconInlineStyling: () => sharingHeightContainer(IconInlineStylingShowcase, 'IconInlineStyling'),\n  IconSimpleUsage: () => sharingHeightContainer(IconSimpleUsageShowcase, 'IconSimpleUsage'),\n  IconWithinButton: () => sharingHeightContainer(IconWithinButtonShowcase, 'IconWithinButton'),\n  IconWithinInput: () => sharingHeightContainer(IconWithinInputShowcase, 'IconWithinInput'),\n  InputInlineStyling: () => sharingHeightContainer(InputInlineStylingShowcase, 'InputInlineStyling'),\n  InputSimpleUsage: () => sharingHeightContainer(InputSimpleUsageShowcase, 'InputSimpleUsage'),\n  InputSize: () => sharingHeightContainer(InputSizeShowcase, 'InputSize'),\n  InputStatus: () => sharingHeightContainer(InputStatusShowcase, 'InputStatus'),\n  InputWithCaption: () => sharingHeightContainer(InputWithCaptionShowcase, 'InputWithCaption'),\n  InputWithExternalSourceIcon: () => sharingHeightContainer(InputWithExternalSourceIconShowcase, 'InputWithExternalSourceIcon'),\n  InputWithIcon: () => sharingHeightContainer(InputWithIconShowcase, 'InputWithIcon'),\n  InputWithLabel: () => sharingHeightContainer(InputWithLabelShowcase, 'InputWithLabel'),\n  LayoutInlineStyling: () => sharingHeightContainer(LayoutInlineStylingShowcase, 'LayoutInlineStyling'),\n  LayoutLevel: () => sharingHeightContainer(LayoutLevelShowcase, 'LayoutLevel'),\n  LayoutSimpleUsage: () => sharingHeightContainer(LayoutSimpleUsageShowcase, 'LayoutSimpleUsage'),\n  ListCompositeItem: () => sharingHeightContainer(ListCompositeItemShowcase, 'ListCompositeItem'),\n  ListInlineStyling: () => sharingHeightContainer(ListInlineStylingShowcase, 'ListInlineStyling'),\n  ListItemInlineStyling: () => sharingHeightContainer(ListItemInlineStylingShowcase, 'ListItemInlineStyling'),\n  ListItemSimpleUsage: () => sharingHeightContainer(ListItemSimpleUsageShowcase, 'ListItemSimpleUsage'),\n  ListItemWithAccessory: () => sharingHeightContainer(ListItemWithAccessoryShowcase, 'ListItemWithAccessory'),\n  ListItemWithExternalIcon: () => sharingHeightContainer(ListItemWithExternalIconShowcase, 'ListItemWithExternalIcon'),\n  ListItemWithIcon: () => sharingHeightContainer(ListItemWithIconShowcase, 'ListItemWithIcon'),\n  ListSimpleUsage: () => sharingHeightContainer(ListSimpleUsageShowcase, 'ListSimpleUsage'),\n  MenuAppearance: () => sharingHeightContainer(MenuAppearanceShowcase, 'MenuAppearance'),\n  MenuInlineStyling: () => sharingHeightContainer(MenuInlineStylingShowcase, 'MenuInlineStyling'),\n  MenuSimpleUsage: () => sharingHeightContainer(MenuSimpleUsageShowcase, 'MenuSimpleUsage'),\n  MenuWithIcons: () => sharingHeightContainer(MenuWithIconsShowcase, 'MenuWithIcons'),\n  MenuWithSubMenu: () => sharingHeightContainer(MenuWithSubMenuShowcase, 'MenuWithSubMenu'),\n  OverflowMenuExternalSourceIcons: () => sharingHeightContainer(OverflowMenuExternalSourceIconsShowcase, 'OverflowMenuExternalSourceIcons'),\n  OverflowMenuSimpleUsage: () => sharingHeightContainer(OverflowMenuSimpleUsageShowcase, 'OverflowMenuSimpleUsage'),\n  OverflowMenuWithDisabledItems: () => sharingHeightContainer(OverflowMenuWithDisabledItemsShowcase, 'OverflowMenuWithDisabledItems'),\n  OverflowMenuWithIcons: () => sharingHeightContainer(OverflowMenuWithIconsShowcase, 'OverflowMenuWithIcons'),\n  OverflowMenuWithoutDivider: () => sharingHeightContainer(OverflowMenuWithoutDividerShowcase, 'OverflowMenuWithoutDivider'),\n  PopoverPlacement: () => sharingHeightContainer(PopoverPlacementShowcase, 'PopoverPlacement'),\n  PopoverSimpleUsage: () => sharingHeightContainer(PopoverSimpleUsageShowcase, 'PopoverSimpleUsage'),\n  RadioInlineStyling: () => sharingHeightContainer(RadioInlineStylingShowcase, 'RadioInlineStyling'),\n  RadioSimpleUsage: () => sharingHeightContainer(RadioSimpleUsageShowcase, 'RadioSimpleUsage'),\n  RadioStatus: () => sharingHeightContainer(RadioStatusShowcase, 'RadioStatus'),\n  RadioWithText: () => sharingHeightContainer(RadioWithTextShowcase, 'RadioWithText'),\n  RadioGroupSimpleUsage: () => sharingHeightContainer(RadioGroupSimpleUsageShowcase, 'RadioGroupSimpleUsage'),\n  SelectCustomIcon: () => sharingHeightContainer(SelectCustomIconShowcase, 'SelectCustomIcon'),\n  SelectInlineStyling: () => sharingHeightContainer(SelectInlineStylingShowcase, 'SelectInlineStyling'),\n  SelectMultiPreselectedInline: () => sharingHeightContainer(SelectMultiPreselectedInlineShowcase, 'SelectMultiPreselectedInline'),\n  SelectMultiPreselectedReference: () => sharingHeightContainer(SelectMultiPreselectedReferenceShowcase, 'SelectMultiPreselectedReference'),\n  SelectMultiSelect: () => sharingHeightContainer(SelectMultiSelectShowcase, 'SelectMultiSelect'),\n  SelectSimpleUsage: () => sharingHeightContainer(SelectSimpleUsageShowcase, 'SelectSimpleUsage'),\n  SelectStatus: () => sharingHeightContainer(SelectStatusShowcase, 'SelectStatus'),\n  SelectWithGroups: () => sharingHeightContainer(SelectWithGroupsShowcase, 'SelectWithGroups'),\n  SpinnerLoadingData: () => sharingHeightContainer(SpinnerLoadingDataShowcase, 'SpinnerLoadingData'),\n  SpinnerSimpleUsage: () => sharingHeightContainer(SpinnerSimpleUsageShowcase, 'SpinnerSimpleUsage'),\n  SpinnerSizes: () => sharingHeightContainer(SpinnerSizesShowcase, 'SpinnerSizes'),\n  SpinnerStatuses: () => sharingHeightContainer(SpinnerStatusesShowcase, 'SpinnerStatuses'),\n  TabBarSimpleUsage: () => sharingHeightContainer(TabBarSimpleUsageShowcase, 'TabBarSimpleUsage'),\n  TabInlineStyling: () => sharingHeightContainer(TabInlineStylingShowcase, 'TabInlineStyling'),\n  TabSimpleUsage: () => sharingHeightContainer(TabSimpleUsageShowcase, 'TabSimpleUsage'),\n  TabViewInlineStyling: () => sharingHeightContainer(TabViewInlineStylingShowcase, 'TabViewInlineStyling'),\n  TabViewLazyLoading: () => sharingHeightContainer(TabViewLazyLoadingShowcase, 'TabViewLazyLoading'),\n  TabViewSimpleUsage: () => sharingHeightContainer(TabViewSimpleUsageShowcase, 'TabViewSimpleUsage'),\n  TabWithExternalSourceIcon: () => sharingHeightContainer(TabWithExternalSourceIconShowcase, 'TabWithExternalSourceIcon'),\n  TabWithIcon: () => sharingHeightContainer(TabWithIconShowcase, 'TabWithIcon'),\n  TextAppearances: () => sharingHeightContainer(TextAppearancesShowcase, 'TextAppearances'),\n  TextCategories: () => sharingHeightContainer(TextCategoriesShowcase, 'TextCategories'),\n  TextInlineStyling: () => sharingHeightContainer(TextInlineStylingShowcase, 'TextInlineStyling'),\n  TextSimpleUsage: () => sharingHeightContainer(TextSimpleUsageShowcase, 'TextSimpleUsage'),\n  TextStatuses: () => sharingHeightContainer(TextStatusesShowcase, 'TextStatuses'),\n  ToggleInlineStyling: () => sharingHeightContainer(ToggleInlineStylingShowcase, 'ToggleInlineStyling'),\n  ToggleSimpleUsage: () => sharingHeightContainer(ToggleSimpleUsageShowcase, 'ToggleSimpleUsage'),\n  ToggleSize: () => sharingHeightContainer(ToggleSizeShowcase, 'ToggleSize'),\n  ToggleStatus: () => sharingHeightContainer(ToggleStatusShowcase, 'ToggleStatus'),\n  ToggleWithText: () => sharingHeightContainer(ToggleWithTextShowcase, 'ToggleWithText'),\n  TooltipInlineStyling: () => sharingHeightContainer(TooltipInlineStylingShowcase, 'TooltipInlineStyling'),\n  TooltipPlacement: () => sharingHeightContainer(TooltipPlacementShowcase, 'TooltipPlacement'),\n  TooltipSimpleUsage: () => sharingHeightContainer(TooltipSimpleUsageShowcase, 'TooltipSimpleUsage'),\n  TooltipWithExternalSourceIcon: () => sharingHeightContainer(TooltipWithExternalSourceIconShowcase, 'TooltipWithExternalSourceIcon'),\n  TooltipWithIcon: () => sharingHeightContainer(TooltipWithIconShowcase, 'TooltipWithIcon'),\n  TopNavigationActionExternalSourceIcon: () => sharingHeightContainer(TopNavigationActionExternalSourceIconShowcase, 'TopNavigationActionExternalSourceIcon'),\n  TopNavigationActionInlineStyling: () => sharingHeightContainer(TopNavigationActionInlineStylingShowcase, 'TopNavigationActionInlineStyling'),\n  TopNavigationActionSimpleUsage: () => sharingHeightContainer(TopNavigationActionSimpleUsageShowcase, 'TopNavigationActionSimpleUsage'),\n  TopNavigationActions: () => sharingHeightContainer(TopNavigationActionsShowcase, 'TopNavigationActions'),\n  TopNavigationAlignments: () => sharingHeightContainer(TopNavigationAlignmentsShowcase, 'TopNavigationAlignments'),\n  TopNavigationInlineStyling: () => sharingHeightContainer(TopNavigationInlineStylingShowcase, 'TopNavigationInlineStyling'),\n  TopNavigationSimpleUsage: () => sharingHeightContainer(TopNavigationSimpleUsageShowcase, 'TopNavigationSimpleUsage'),\n  TopNavigationWithMenu: () => sharingHeightContainer(TopNavigationWithMenuShowcase, 'TopNavigationWithMenu'),\n  ViewPagerInlineStyling: () => sharingHeightContainer(ViewPagerInlineStylingShowcase, 'ViewPagerInlineStyling'),\n  ViewPagerLazyLoading: () => sharingHeightContainer(ViewPagerLazyLoadingShowcase, 'ViewPagerLazyLoading'),\n  ViewPagerSimpleUsage: () => sharingHeightContainer(ViewPagerSimpleUsageShowcase, 'ViewPagerSimpleUsage')\n};\n\nconst AppStack = createStackNavigator(routes, { headerMode: 'none' });\nexport const AppNavigator = createBrowserApp(AppStack, { history: 'hash' });","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { AppIconRegistry } from '@pg/icons';\n\nexport const MaterialIconsPack = {\n  name: 'material',\n  icons: createIconsMap(),\n};\n\nfunction createIconsMap() {\n  return new Proxy({}, {\n    get(target, name) {\n      return IconProvider(name);\n    },\n  });\n}\n\nconst IconProvider = (name) => ({\n  toReactElement: (props) => MaterialIcon({ name, ...props }),\n});\n\nconst MaterialIconRegistry: AppIconRegistry = {\n  ['arrow-ios-downward']: 'keyboard-arrow-down',\n  ['arrow-ios-upward']: 'keyboard-arrow-up',\n  ['arrow-back']: 'arrow-back',\n  ['color-palette']: 'palette',\n  ['grid']: 'dashboard',\n  ['list']: 'list',\n  ['menu']: 'menu',\n  ['more-vertical']: 'more-vert',\n  ['search']: 'search',\n  ['settings']: 'settings',\n  ['star']: 'star',\n  ['trash']: 'delete',\n};\n\nfunction MaterialIcon(props) {\n  const { name, style } = props;\n  const { height, tintColor, ...iconStyle } = StyleSheet.flatten(style);\n  return (\n    <MaterialIcons\n      name={MaterialIconRegistry[name]}\n      size={height}\n      color={tintColor}\n      style={iconStyle}\n    />\n  );\n}\n","import React from 'react';\nimport {\n  Animated,\n  Easing,\n  ImageRequireSource,\n  StyleSheet,\n} from 'react-native';\n\ninterface Props {\n  image: ImageRequireSource;\n  isLoaded: boolean;\n}\n\ninterface State {\n  animationValue: Animated.Value;\n  animationCompleted: boolean;\n}\n\nexport class LoadingAnimation extends React.Component<Props, State> {\n\n  public state: State = {\n    animationValue: new Animated.Value(0),\n    animationCompleted: false,\n  };\n\n  public componentDidUpdate(prevProps: Props): void {\n    if (this.props.isLoaded && this.props.isLoaded !== prevProps.isLoaded) {\n      this.triggerAnimation();\n    }\n  }\n\n  private triggerAnimation(): void {\n    Animated.timing(this.state.animationValue, {\n      toValue: 1,\n      duration: 700,\n      useNativeDriver: true,\n      easing: Easing.in(Easing.exp),\n    }).start(() => this.onAnimationCompleted());\n  }\n\n  private onAnimationCompleted(): void {\n    this.setState({ animationCompleted: true });\n  }\n\n  public renderAnimatedComponent(): React.ReactNode {\n    const opacity: Animated.AnimatedInterpolation = this.state.animationValue.interpolate({\n      inputRange: [0, 1],\n      outputRange: [1, 0],\n    });\n    const transform: Object[] = [\n      {\n        scale: this.state.animationValue.interpolate({\n          inputRange: [0, 1],\n          outputRange: [1, 1.5],\n        }),\n      },\n    ];\n\n    return (\n      <Animated.View\n        style={[styles.container, { opacity }]}>\n        <Animated.Image\n          source={this.props.image}\n          style={[styles.image, { transform }]}\n        />\n      </Animated.View>\n    );\n  }\n\n  public render(): React.ReactNode {\n    const { animationCompleted } = this.state;\n    return animationCompleted ? null : this.renderAnimatedComponent();\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    ...StyleSheet.absoluteFillObject,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#fff',\n  },\n  image: {\n    width: undefined,\n    height: undefined,\n    ...StyleSheet.absoluteFillObject,\n    resizeMode: 'contain',\n  },\n});\n","import React from 'react';\nimport { ImageRequireSource } from 'react-native';\nimport {\n  AppLoading,\n  SplashScreen,\n} from 'expo';\nimport { Asset } from 'expo-asset';\nimport * as Font from 'expo-font';\nimport { LoadingAnimation } from './loadingAnimation.component';\n\nexport interface Assets {\n  images?: ImageRequireSource[];\n  fonts?: { [key: string]: number };\n}\n\ninterface Props {\n  assets: Assets;\n  splash: ImageRequireSource;\n  children: React.ReactNode;\n}\n\ninterface State {\n  loaded: boolean;\n}\n\ntype LoadingElement = React.ReactElement<{}>;\n\n/**\n * Loads child component after asynchronous tasks are done\n */\nexport class ApplicationLoader extends React.Component<Props, State> {\n\n  constructor(props: Props) {\n    super(props);\n    SplashScreen.preventAutoHide();\n  }\n\n  public state: State = {\n    loaded: false,\n  };\n\n  private onLoadSuccess = () => {\n    // setTimeout(() => {\n      this.setState({ loaded: true });\n      SplashScreen.hide();\n    // }, 1);\n  };\n\n  private onLoadError = (error: Error) => {\n    console.warn(error);\n  };\n\n  private loadResources = (): Promise<void> => {\n    return this.loadResourcesAsync(this.props.assets);\n  };\n\n  private loadFonts = (fonts: {[key: string]: number}): Promise<void> => {\n    return Font.loadAsync(fonts);\n  };\n\n  private loadImages = (images: ImageRequireSource[]): Promise<void[]> => {\n    const tasks: Promise<void>[] = images.map((image: ImageRequireSource): Promise<void> => {\n      return Asset.fromModule(image).downloadAsync();\n    });\n\n    return Promise.all(tasks);\n  };\n\n  private async loadResourcesAsync(assets: Assets): Promise<void> {\n    const { fonts, images } = assets;\n\n    // @ts-ignore (expo type error)\n    return Promise.all([\n      fonts && this.loadFonts(fonts),\n      images && this.loadImages(images),\n    ]);\n  }\n\n  private renderLoading = (): LoadingElement => {\n    return (\n      <AppLoading\n        startAsync={this.loadResources}\n        onFinish={this.onLoadSuccess}\n        onError={this.onLoadError}\n        autoHideSplash={false}\n      />\n    );\n  };\n\n  public render(): React.ReactNode {\n    return (\n      <React.Fragment>\n        {this.state.loaded ? this.props.children : this.renderLoading()}\n        <LoadingAnimation\n          isLoaded={this.state.loaded}\n          image={this.props.splash}\n        />\n      </React.Fragment>\n    );\n  }\n}\n","import React from 'react';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { mapping, light, dark } from '@eva-design/eva';\nimport { EvaIconsPack } from '@ui-kitten/eva-icons';\nimport {\n  ApplicationProvider,\n  ApplicationProviderProps,\n  IconPack,\n  IconRegistry,\n} from 'react-native-ui-kitten';\nimport { AppNavigator } from '@pg/navigation/app.navigator';\nimport { MaterialIconsPack } from '@pg/icons/materialIconPack';\nimport {\n  AppTheme,\n  ThemeContext,\n  ThemeContextType,\n} from '@pg/themes/themeContext';\nimport { ApplicationLoader } from './applicationLoader.component';\n\nconst themes = {\n  Light: light,\n  Dark: dark,\n};\n\nconst customMapping = {\n  strict: { 'text-font-family': 'roboto-regular' },\n};\n\nconst fonts = {\n  'opensans-regular': require('../assets/fonts/opensans-regular.ttf'),\n  'roboto-regular': require('../assets/fonts/roboto-regular.ttf'),\n};\n\nconst icons: IconPack<any>[] = [\n  EvaIconsPack,\n  MaterialIconsPack,\n];\n\nexport default () => {\n\n  const [theme, setTheme] = React.useState<AppTheme>(AppTheme.light);\n\n  const isDarkMode = (): boolean => {\n    return theme === AppTheme.dark;\n  };\n\n  const applicationProviderConfig: ApplicationProviderProps = {\n    mapping: mapping,\n    theme: themes[theme],\n    customMapping: customMapping,\n  };\n\n  const themeContextProviderConfig: ThemeContextType = {\n    theme: theme,\n    setTheme: setTheme,\n    isDarkMode: isDarkMode,\n  };\n\n  return (\n    <React.Fragment>\n      <IconRegistry icons={icons}/>\n      <ApplicationLoader assets={{ fonts }} splash={require('../assets/images/splash.png')}>\n        <IconRegistry icons={icons} />\n        <ApplicationProvider {...applicationProviderConfig}>\n          <SafeAreaProvider>\n            <ThemeContext.Provider value={themeContextProviderConfig}>\n              <AppNavigator />\n            </ThemeContext.Provider>\n          </SafeAreaProvider>\n        </ApplicationProvider>\n      </ApplicationLoader>\n    </React.Fragment>\n  );\n};\n","import App from './src/app/app.component';\n\nexport default App;\n","var map = {\n\t\"./af\": 221,\n\t\"./af.js\": 221,\n\t\"./ar\": 222,\n\t\"./ar-dz\": 223,\n\t\"./ar-dz.js\": 223,\n\t\"./ar-kw\": 224,\n\t\"./ar-kw.js\": 224,\n\t\"./ar-ly\": 225,\n\t\"./ar-ly.js\": 225,\n\t\"./ar-ma\": 226,\n\t\"./ar-ma.js\": 226,\n\t\"./ar-sa\": 227,\n\t\"./ar-sa.js\": 227,\n\t\"./ar-tn\": 228,\n\t\"./ar-tn.js\": 228,\n\t\"./ar.js\": 222,\n\t\"./az\": 229,\n\t\"./az.js\": 229,\n\t\"./be\": 230,\n\t\"./be.js\": 230,\n\t\"./bg\": 231,\n\t\"./bg.js\": 231,\n\t\"./bm\": 232,\n\t\"./bm.js\": 232,\n\t\"./bn\": 233,\n\t\"./bn.js\": 233,\n\t\"./bo\": 234,\n\t\"./bo.js\": 234,\n\t\"./br\": 235,\n\t\"./br.js\": 235,\n\t\"./bs\": 236,\n\t\"./bs.js\": 236,\n\t\"./ca\": 237,\n\t\"./ca.js\": 237,\n\t\"./cs\": 238,\n\t\"./cs.js\": 238,\n\t\"./cv\": 239,\n\t\"./cv.js\": 239,\n\t\"./cy\": 240,\n\t\"./cy.js\": 240,\n\t\"./da\": 241,\n\t\"./da.js\": 241,\n\t\"./de\": 242,\n\t\"./de-at\": 243,\n\t\"./de-at.js\": 243,\n\t\"./de-ch\": 244,\n\t\"./de-ch.js\": 244,\n\t\"./de.js\": 242,\n\t\"./dv\": 245,\n\t\"./dv.js\": 245,\n\t\"./el\": 246,\n\t\"./el.js\": 246,\n\t\"./en-SG\": 247,\n\t\"./en-SG.js\": 247,\n\t\"./en-au\": 248,\n\t\"./en-au.js\": 248,\n\t\"./en-ca\": 249,\n\t\"./en-ca.js\": 249,\n\t\"./en-gb\": 250,\n\t\"./en-gb.js\": 250,\n\t\"./en-ie\": 251,\n\t\"./en-ie.js\": 251,\n\t\"./en-il\": 252,\n\t\"./en-il.js\": 252,\n\t\"./en-nz\": 253,\n\t\"./en-nz.js\": 253,\n\t\"./eo\": 254,\n\t\"./eo.js\": 254,\n\t\"./es\": 255,\n\t\"./es-do\": 256,\n\t\"./es-do.js\": 256,\n\t\"./es-us\": 257,\n\t\"./es-us.js\": 257,\n\t\"./es.js\": 255,\n\t\"./et\": 258,\n\t\"./et.js\": 258,\n\t\"./eu\": 259,\n\t\"./eu.js\": 259,\n\t\"./fa\": 260,\n\t\"./fa.js\": 260,\n\t\"./fi\": 261,\n\t\"./fi.js\": 261,\n\t\"./fo\": 262,\n\t\"./fo.js\": 262,\n\t\"./fr\": 263,\n\t\"./fr-ca\": 264,\n\t\"./fr-ca.js\": 264,\n\t\"./fr-ch\": 265,\n\t\"./fr-ch.js\": 265,\n\t\"./fr.js\": 263,\n\t\"./fy\": 266,\n\t\"./fy.js\": 266,\n\t\"./ga\": 267,\n\t\"./ga.js\": 267,\n\t\"./gd\": 268,\n\t\"./gd.js\": 268,\n\t\"./gl\": 269,\n\t\"./gl.js\": 269,\n\t\"./gom-latn\": 270,\n\t\"./gom-latn.js\": 270,\n\t\"./gu\": 271,\n\t\"./gu.js\": 271,\n\t\"./he\": 272,\n\t\"./he.js\": 272,\n\t\"./hi\": 273,\n\t\"./hi.js\": 273,\n\t\"./hr\": 274,\n\t\"./hr.js\": 274,\n\t\"./hu\": 275,\n\t\"./hu.js\": 275,\n\t\"./hy-am\": 276,\n\t\"./hy-am.js\": 276,\n\t\"./id\": 277,\n\t\"./id.js\": 277,\n\t\"./is\": 278,\n\t\"./is.js\": 278,\n\t\"./it\": 279,\n\t\"./it-ch\": 280,\n\t\"./it-ch.js\": 280,\n\t\"./it.js\": 279,\n\t\"./ja\": 281,\n\t\"./ja.js\": 281,\n\t\"./jv\": 282,\n\t\"./jv.js\": 282,\n\t\"./ka\": 283,\n\t\"./ka.js\": 283,\n\t\"./kk\": 284,\n\t\"./kk.js\": 284,\n\t\"./km\": 285,\n\t\"./km.js\": 285,\n\t\"./kn\": 286,\n\t\"./kn.js\": 286,\n\t\"./ko\": 287,\n\t\"./ko.js\": 287,\n\t\"./ku\": 288,\n\t\"./ku.js\": 288,\n\t\"./ky\": 289,\n\t\"./ky.js\": 289,\n\t\"./lb\": 290,\n\t\"./lb.js\": 290,\n\t\"./lo\": 291,\n\t\"./lo.js\": 291,\n\t\"./lt\": 292,\n\t\"./lt.js\": 292,\n\t\"./lv\": 293,\n\t\"./lv.js\": 293,\n\t\"./me\": 294,\n\t\"./me.js\": 294,\n\t\"./mi\": 295,\n\t\"./mi.js\": 295,\n\t\"./mk\": 296,\n\t\"./mk.js\": 296,\n\t\"./ml\": 297,\n\t\"./ml.js\": 297,\n\t\"./mn\": 298,\n\t\"./mn.js\": 298,\n\t\"./mr\": 299,\n\t\"./mr.js\": 299,\n\t\"./ms\": 300,\n\t\"./ms-my\": 301,\n\t\"./ms-my.js\": 301,\n\t\"./ms.js\": 300,\n\t\"./mt\": 302,\n\t\"./mt.js\": 302,\n\t\"./my\": 303,\n\t\"./my.js\": 303,\n\t\"./nb\": 304,\n\t\"./nb.js\": 304,\n\t\"./ne\": 305,\n\t\"./ne.js\": 305,\n\t\"./nl\": 306,\n\t\"./nl-be\": 307,\n\t\"./nl-be.js\": 307,\n\t\"./nl.js\": 306,\n\t\"./nn\": 308,\n\t\"./nn.js\": 308,\n\t\"./pa-in\": 309,\n\t\"./pa-in.js\": 309,\n\t\"./pl\": 310,\n\t\"./pl.js\": 310,\n\t\"./pt\": 311,\n\t\"./pt-br\": 312,\n\t\"./pt-br.js\": 312,\n\t\"./pt.js\": 311,\n\t\"./ro\": 313,\n\t\"./ro.js\": 313,\n\t\"./ru\": 314,\n\t\"./ru.js\": 314,\n\t\"./sd\": 315,\n\t\"./sd.js\": 315,\n\t\"./se\": 316,\n\t\"./se.js\": 316,\n\t\"./si\": 317,\n\t\"./si.js\": 317,\n\t\"./sk\": 318,\n\t\"./sk.js\": 318,\n\t\"./sl\": 319,\n\t\"./sl.js\": 319,\n\t\"./sq\": 320,\n\t\"./sq.js\": 320,\n\t\"./sr\": 321,\n\t\"./sr-cyrl\": 322,\n\t\"./sr-cyrl.js\": 322,\n\t\"./sr.js\": 321,\n\t\"./ss\": 323,\n\t\"./ss.js\": 323,\n\t\"./sv\": 324,\n\t\"./sv.js\": 324,\n\t\"./sw\": 325,\n\t\"./sw.js\": 325,\n\t\"./ta\": 326,\n\t\"./ta.js\": 326,\n\t\"./te\": 327,\n\t\"./te.js\": 327,\n\t\"./tet\": 328,\n\t\"./tet.js\": 328,\n\t\"./tg\": 329,\n\t\"./tg.js\": 329,\n\t\"./th\": 330,\n\t\"./th.js\": 330,\n\t\"./tl-ph\": 331,\n\t\"./tl-ph.js\": 331,\n\t\"./tlh\": 332,\n\t\"./tlh.js\": 332,\n\t\"./tr\": 333,\n\t\"./tr.js\": 333,\n\t\"./tzl\": 334,\n\t\"./tzl.js\": 334,\n\t\"./tzm\": 335,\n\t\"./tzm-latn\": 336,\n\t\"./tzm-latn.js\": 336,\n\t\"./tzm.js\": 335,\n\t\"./ug-cn\": 337,\n\t\"./ug-cn.js\": 337,\n\t\"./uk\": 338,\n\t\"./uk.js\": 338,\n\t\"./ur\": 339,\n\t\"./ur.js\": 339,\n\t\"./uz\": 340,\n\t\"./uz-latn\": 341,\n\t\"./uz-latn.js\": 341,\n\t\"./uz.js\": 340,\n\t\"./vi\": 342,\n\t\"./vi.js\": 342,\n\t\"./x-pseudo\": 343,\n\t\"./x-pseudo.js\": 343,\n\t\"./yo\": 344,\n\t\"./yo.js\": 344,\n\t\"./zh-cn\": 345,\n\t\"./zh-cn.js\": 345,\n\t\"./zh-hk\": 346,\n\t\"./zh-hk.js\": 346,\n\t\"./zh-tw\": 347,\n\t\"./zh-tw.js\": 347\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 496;","module.exports = __webpack_public_path__ + \"./fonts/opensans-regular.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/roboto-regular.ttf\";"],"sourceRoot":""}