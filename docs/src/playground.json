[
  {
    "code": "import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Avatar,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport const AvatarInlineStylingShowcase = () => (\n  <Layout style={styles.container}>\n    <Avatar\n      style={styles.avatar}\n      source={{ uri: 'https://images.unsplash.com/photo-1494790108377-be9c29b29330' }}\n    />\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n  avatar: {\n    width: 96,\n    height: 96,\n    borderRadius: 16,\n  },\n});\n",
    "path": "src/playground/src/components/showcases/avatar/avatarInlineStyling.component.tsx",
    "name": "AvatarInlineStyling"
  },
  {
    "code": "import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Avatar,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport const AvatarRemoteImagesShowcase = () => (\n  <Layout style={styles.container}>\n    <Avatar source={{ uri: 'https://images.unsplash.com/photo-1494790108377-be9c29b29330' }}/>\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n});\n",
    "path": "src/playground/src/components/showcases/avatar/avatarRemoteImages.component.tsx",
    "name": "AvatarRemoteImages"
  },
  {
    "code": "import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Avatar,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport const AvatarShapeShowcase = () => (\n  <Layout style={styles.container}>\n    <Avatar\n      style={styles.item}\n      shape='round'\n      source={{ uri: 'https://images.unsplash.com/photo-1494790108377-be9c29b29330' }}\n    />\n    <Avatar\n      style={styles.item}\n      shape='rounded'\n      source={{ uri: 'https://images.unsplash.com/photo-1494790108377-be9c29b29330' }}\n    />\n    <Avatar\n      style={styles.item}\n      shape='square'\n      source={{ uri: 'https://images.unsplash.com/photo-1494790108377-be9c29b29330' }}\n    />\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n  },\n  item: {\n    marginVertical: 8,\n  },\n});\n",
    "path": "src/playground/src/components/showcases/avatar/avatarShape.component.tsx",
    "name": "AvatarShape"
  },
  {
    "code": "import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Avatar,\n  AvatarProps,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport const AvatarSimpleUsageShowcase = () => (\n  <Layout style={styles.container}>\n    <Avatar source={{ uri: 'https://images.unsplash.com/photo-1494790108377-be9c29b29330' }} />\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n});\n",
    "path": "src/playground/src/components/showcases/avatar/avatarSimpleUsage.component.tsx",
    "name": "AvatarSimpleUsage"
  },
  {
    "code": "import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Avatar,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport const AvatarSizeShowcase = () => (\n  <Layout style={styles.container}>\n    <Avatar\n      style={styles.item}\n      size='tiny'\n      source={{ uri: 'https://images.unsplash.com/photo-1494790108377-be9c29b29330' }}\n    />\n    <Avatar\n      style={styles.item}\n      size='small'\n      source={{ uri: 'https://images.unsplash.com/photo-1494790108377-be9c29b29330' }}\n    />\n    <Avatar\n      style={styles.item}\n      size='medium'\n      source={{ uri: 'https://images.unsplash.com/photo-1494790108377-be9c29b29330' }}\n    />\n    <Avatar\n      style={styles.item}\n      size='large'\n      source={{ uri: 'https://images.unsplash.com/photo-1494790108377-be9c29b29330' }}\n    />\n    <Avatar\n      style={styles.item}\n      size='giant'\n      source={{ uri: 'https://images.unsplash.com/photo-1494790108377-be9c29b29330' }}\n    />\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n  },\n  item: {\n    marginVertical: 8,\n  },\n});\n",
    "path": "src/playground/src/components/showcases/avatar/avatarSize.component.tsx",
    "name": "AvatarSize"
  },
  {
    "code": "import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  BottomNavigation,\n  BottomNavigationTab,\n} from 'react-native-ui-kitten';\n\nexport class BottomNavigationInlineStylingShowcase extends React.Component {\n\n  state = {\n    selectedIndex: 0,\n  };\n\n  onTabSelect = (selectedIndex) => {\n    this.setState({ selectedIndex });\n  };\n\n  render() {\n    return (\n      <BottomNavigation\n        style={styles.bottomNavigation}\n        indicatorStyle={styles.indicator}\n        selectedIndex={this.state.selectedIndex}\n        onSelect={this.onTabSelect}>\n        <BottomNavigationTab title='DASHBOARD'/>\n        <BottomNavigationTab title='SETTINGS'/>\n      </BottomNavigation>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  bottomNavigation: { backgroundColor: 'white' },\n  indicator: { backgroundColor: 'black' },\n});\n",
    "path": "src/playground/src/components/showcases/bottomNavigation/bottomNavigationInlineStyling.component.tsx",
    "name": "BottomNavigationInlineStyling"
  },
  {
    "code": "import React from 'react';\nimport {\n  BottomNavigation,\n  BottomNavigationTab,\n} from 'react-native-ui-kitten';\n\nexport class BottomNavigationSimpleUsageShowcase extends React.Component {\n\n  state = {\n    selectedIndex: 0,\n  };\n\n  onTabSelect = (selectedIndex) => {\n    this.setState({ selectedIndex });\n  };\n\n  render() {\n    return (\n      <BottomNavigation\n        selectedIndex={this.state.selectedIndex}\n        onSelect={this.onTabSelect}>\n        <BottomNavigationTab title='DASHBOARD'/>\n        <BottomNavigationTab title='SETTINGS'/>\n      </BottomNavigation>\n    );\n  }\n}\n",
    "path": "src/playground/src/components/showcases/bottomNavigation/bottomNavigationSimpleUsage.component.tsx",
    "name": "BottomNavigationSimpleUsage"
  },
  {
    "code": "import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { BottomNavigationTab } from 'react-native-ui-kitten';\n\nexport const BottomNavigationTabInlineStylingShowcase = () => (\n  <BottomNavigationTab\n    style={styles.tab}\n    titleStyle={styles.tabTitle}\n    title='TAB 1'\n  />\n);\n\nconst styles = StyleSheet.create({\n  tab: { backgroundColor: '#EDF1F7' },\n  tabTitle: { color: '#3366FF' },\n});\n",
    "path": "src/playground/src/components/showcases/bottomNavigation/bottomNavigationTabInlineStyling.component.tsx",
    "name": "BottomNavigationTabInlineStyling"
  },
  {
    "code": "import React from 'react';\nimport { BottomNavigationTab } from 'react-native-ui-kitten';\n\nexport const BottomNavigationTabSimpleUsageShowcase = () => (\n  <BottomNavigationTab title='TAB 1'/>\n);\n",
    "path": "src/playground/src/components/showcases/bottomNavigation/bottomNavigationTabSimpleUsage.component.tsx",
    "name": "BottomNavigationTabSimpleUsage"
  },
  {
    "code": "import React from 'react';\nimport { Image } from 'react-native';\nimport { BottomNavigationTab } from 'react-native-ui-kitten';\n\nconst DashboardIcon = (style) => (\n  <Image\n    style={style}\n    source={{uri: 'https://akveo.github.io/eva-icons/fill/png/128/layout.png'}}\n  />\n);\n\nexport const BottomNavigationTabWithExternalSourceIconShowcase = () => (\n  <BottomNavigationTab\n    title='DASHBOARD'\n    icon={DashboardIcon}\n  />\n);\n",
    "path": "src/playground/src/components/showcases/bottomNavigation/bottomNavigationTabWithExternalSourceIcon.component.tsx",
    "name": "BottomNavigationTabWithExternalSourceIcon"
  },
  {
    "code": "/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport {\n  BottomNavigationTab,\n  Icon,\n} from 'react-native-ui-kitten';\n\nconst DashboardIcon = (style) => (\n  <Icon {...style} name='layout'/>\n);\n\nexport const BottomNavigationTabWithIconShowcase = () => (\n  <BottomNavigationTab\n    title='DASHBOARD'\n    icon={DashboardIcon}\n  />\n);\n",
    "path": "src/playground/src/components/showcases/bottomNavigation/bottomNavigationTabWithIcon.component.tsx",
    "name": "BottomNavigationTabWithIcon"
  },
  {
    "code": "// IMPORTANT: To use Icon component make sure to follow this guide:\n// https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n\nimport React from 'react';\nimport {\n  BottomNavigation,\n  BottomNavigationTab,\n  Icon,\n} from 'react-native-ui-kitten';\n\nconst DashboardIcon = (style) => (\n  <Icon {...style} name='layout'/>\n);\n\nconst SettingsIcon = (style) => (\n  <Icon {...style} name='settings'/>\n);\n\nexport class BottomNavigationWithIconsShowcase extends React.Component {\n\n  state = {\n    selectedIndex: 0,\n  };\n\n  onTabSelect = (selectedIndex) => {\n    this.setState({ selectedIndex });\n  };\n\n  render() {\n    return (\n      <BottomNavigation\n        selectedIndex={this.state.selectedIndex}\n        onSelect={this.onTabSelect}>\n        <BottomNavigationTab\n          title='DASHBOARD'\n          icon={DashboardIcon}\n        />\n        <BottomNavigationTab\n          title='SETTINGS'\n          icon={SettingsIcon}\n        />\n      </BottomNavigation>\n    );\n  }\n}\n",
    "path": "src/playground/src/components/showcases/bottomNavigation/bottomNavigationWithIcons.component.tsx",
    "name": "BottomNavigationWithIcons"
  },
  {
    "code": "import React from 'react';\nimport {\n  BottomNavigation,\n  BottomNavigationTab,\n} from 'react-native-ui-kitten';\n\nexport class BottomNavigationWithoutIndicatorShowcase extends React.Component {\n\n  state = {\n    selectedIndex: 0,\n  };\n\n  onTabSelect = (selectedIndex) => {\n    this.setState({ selectedIndex });\n  };\n\n  render() {\n    return (\n      <BottomNavigation\n        appearance='noIndicator'\n        selectedIndex={this.state.selectedIndex}\n        onSelect={this.onTabSelect}>\n        <BottomNavigationTab title='DASHBOARD'/>\n        <BottomNavigationTab title='SETTINGS'/>\n      </BottomNavigation>\n    );\n  }\n}\n",
    "path": "src/playground/src/components/showcases/bottomNavigation/bottomNavigationWithoutIndicator.component.tsx",
    "name": "BottomNavigationWithoutIndicator"
  },
  {
    "code": "import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport const ButtonAppearancesShowcase = () => (\n  <Layout style={styles.container}>\n    <Button style={styles.button} appearance='filled'>FILLED</Button>\n    <Button style={styles.button} appearance='outline'>OUTLINE</Button>\n    <Button style={styles.button} appearance='ghost'>GHOST</Button>\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    paddingVertical: 4,\n    paddingHorizontal: 4,\n  },\n  button: {\n    marginVertical: 4,\n    marginHorizontal: 4,\n  },\n});\n",
    "path": "src/playground/src/components/showcases/button/buttonAppearances.component.tsx",
    "name": "ButtonAppearances"
  },
  {
    "code": "import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport const ButtonGhostShowcase = () => (\n  <Layout style={styles.container}>\n    <Button style={styles.button} appearance='ghost' status='primary'>PRIMARY</Button>\n    <Button style={styles.button} appearance='ghost' status='success'>SUCCESS</Button>\n    <Button style={styles.button} appearance='ghost' status='info'>INFO</Button>\n    <Button style={styles.button} appearance='ghost' status='warning'>WARNING</Button>\n    <Button style={styles.button} appearance='ghost' status='danger'>DANGER</Button>\n    <Button style={styles.button} appearance='ghost' status='basic'>BASIC</Button>\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    paddingVertical: 4,\n    paddingHorizontal: 4,\n  },\n  button: {\n    marginVertical: 4,\n    marginHorizontal: 4,\n  },\n});\n",
    "path": "src/playground/src/components/showcases/button/buttonGhost.component.tsx",
    "name": "ButtonGhost"
  },
  {
    "code": "import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport const ButtonOutlineShowcase = () => (\n  <Layout style={styles.container}>\n    <Button style={styles.button} appearance='outline' status='primary'>PRIMARY</Button>\n    <Button style={styles.button} appearance='outline' status='success'>SUCCESS</Button>\n    <Button style={styles.button} appearance='outline' status='info'>INFO</Button>\n    <Button style={styles.button} appearance='outline' status='warning'>WARNING</Button>\n    <Button style={styles.button} appearance='outline' status='danger'>DANGER</Button>\n    <Button style={styles.button} appearance='outline' status='basic'>BASIC</Button>\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    paddingVertical: 4,\n    paddingHorizontal: 4,\n  },\n  button: {\n    marginVertical: 4,\n    marginHorizontal: 4,\n  },\n});\n",
    "path": "src/playground/src/components/showcases/button/buttonOutline.component.tsx",
    "name": "ButtonOutline"
  },
  {
    "code": "import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport const ButtonSimpleUsageShowcase = () => (\n  <Layout style={styles.container}>\n    <Button style={styles.button}>ACTIVE</Button>\n    <Button style={styles.button} disabled={true}>DISABLED</Button>\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    paddingVertical: 4,\n    paddingHorizontal: 4,\n  },\n  button: {\n    marginVertical: 4,\n    marginHorizontal: 4,\n  },\n});\n",
    "path": "src/playground/src/components/showcases/button/buttonSimpleUsage.component.tsx",
    "name": "ButtonSimpleUsage"
  },
  {
    "code": "import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport const ButtonSizeShowcase = () => (\n  <Layout style={styles.container}>\n    <Button style={styles.button} size='tiny'>TINY</Button>\n    <Button style={styles.button} size='small'>SMALL</Button>\n    <Button style={styles.button} size='medium'>MEDIUM</Button>\n    <Button style={styles.button} size='large'>LARGE</Button>\n    <Button style={styles.button} size='giant'>GIANT</Button>\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    paddingVertical: 4,\n    paddingHorizontal: 4,\n  },\n  button: {\n    marginVertical: 4,\n    marginHorizontal: 4,\n  },\n});\n",
    "path": "src/playground/src/components/showcases/button/buttonSize.component.tsx",
    "name": "ButtonSize"
  },
  {
    "code": "import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport const ButtonStatusShowcase = () => (\n  <Layout style={styles.container}>\n    <Button style={styles.button} status='primary'>PRIMARY</Button>\n    <Button style={styles.button} status='success'>SUCCESS</Button>\n    <Button style={styles.button} status='info'>INFO</Button>\n    <Button style={styles.button} status='warning'>WARNING</Button>\n    <Button style={styles.button} status='danger'>DANGER</Button>\n    <Button style={styles.button} status='basic'>BASIC</Button>\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    paddingVertical: 4,\n    paddingHorizontal: 4,\n  },\n  button: {\n    marginVertical: 4,\n    marginHorizontal: 4,\n  },\n});\n",
    "path": "src/playground/src/components/showcases/button/buttonStatus.component.tsx",
    "name": "ButtonStatus"
  },
  {
    "code": "/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  Icon,\n  Layout,\n} from 'react-native-ui-kitten';\n\nconst StarIcon = (style) => (\n  <Icon {...style} name='star'/>\n);\n\nexport const ButtonWithIconShowcase = () => (\n  <Layout style={styles.container}>\n    <Button style={styles.button} status='primary' icon={StarIcon}>PRIMARY</Button>\n    <Button style={styles.button} status='success' icon={StarIcon}>SUCCESS</Button>\n    <Button style={styles.button} status='danger' icon={StarIcon}/>\n    <Button style={styles.button} appearance='ghost' status='danger' icon={StarIcon}/>\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    paddingVertical: 4,\n    paddingHorizontal: 4,\n  },\n  button: {\n    marginVertical: 4,\n    marginHorizontal: 4,\n  },\n});\n",
    "path": "src/playground/src/components/showcases/button/buttonWithIcon.component.tsx",
    "name": "ButtonWithIcon"
  },
  {
    "code": "import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  ButtonGroup,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport const ButtonGroupAppearanceShowcase = () => (\n  <Layout style={styles.container}>\n    <ButtonGroup\n      style={styles.buttonGroup}\n      appearance='filled'>\n      <Button style={styles.button}>L</Button>\n      <Button style={styles.button}>M</Button>\n      <Button style={styles.button}>R</Button>\n    </ButtonGroup>\n    <ButtonGroup\n      style={styles.buttonGroup}\n      appearance='outline'>\n      <Button style={styles.button}>L</Button>\n      <Button style={styles.button}>M</Button>\n      <Button style={styles.button}>R</Button>\n    </ButtonGroup>\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n  },\n  buttonGroup: {\n    marginVertical: 8,\n  },\n  button: {\n    flex: 1,\n  },\n});\n",
    "path": "src/playground/src/components/showcases/buttonGroup/buttonGroupAppearance.component.tsx",
    "name": "ButtonGroupAppearance"
  },
  {
    "code": "import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  ButtonGroup,\n} from 'react-native-ui-kitten';\n\nexport const ButtonGroupInlineStylingShowcase = () => (\n  <ButtonGroup style={styles.buttonGroup}>\n    <Button style={styles.button}>L</Button>\n    <Button style={styles.button}>M</Button>\n    <Button style={styles.button}>R</Button>\n  </ButtonGroup>\n);\n\nconst styles = StyleSheet.create({\n  buttonGroup: {\n    margin: 16,\n    borderRadius: 8,\n  },\n  button: {\n    flex: 1,\n  },\n});\n",
    "path": "src/playground/src/components/showcases/buttonGroup/buttonGroupInlineStyling.component.tsx",
    "name": "ButtonGroupInlineStyling"
  },
  {
    "code": "import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  ButtonGroup,\n} from 'react-native-ui-kitten';\n\nexport const ButtonGroupSimpleUsageShowcase = () => (\n  <ButtonGroup style={styles.container}>\n    <Button style={styles.button}>L</Button>\n    <Button style={styles.button}>M</Button>\n    <Button style={styles.button}>R</Button>\n  </ButtonGroup>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    margin: 16,\n  },\n  button: {\n    flex: 1,\n  },\n});\n",
    "path": "src/playground/src/components/showcases/buttonGroup/buttonGroupSimpleUsage.component.tsx",
    "name": "ButtonGroupSimpleUsage"
  },
  {
    "code": "import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  ButtonGroup,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport const ButtonGroupSizeShowcase = () => (\n  <Layout style={styles.container}>\n    <ButtonGroup\n      style={styles.buttonGroup}\n      size='tiny'>\n      <Button style={styles.button}>L</Button>\n      <Button style={styles.button}>M</Button>\n      <Button style={styles.button}>R</Button>\n    </ButtonGroup>\n    <ButtonGroup\n      style={styles.buttonGroup}\n      size='small'>\n      <Button style={styles.button}>L</Button>\n      <Button style={styles.button}>M</Button>\n      <Button style={styles.button}>R</Button>\n    </ButtonGroup>\n    <ButtonGroup\n      style={styles.buttonGroup}\n      size='medium'>\n      <Button style={styles.button}>L</Button>\n      <Button style={styles.button}>M</Button>\n      <Button style={styles.button}>R</Button>\n    </ButtonGroup>\n    <ButtonGroup\n      style={styles.buttonGroup}\n      size='large'>\n      <Button style={styles.button}>L</Button>\n      <Button style={styles.button}>M</Button>\n      <Button style={styles.button}>R</Button>\n    </ButtonGroup>\n    <ButtonGroup\n      style={styles.buttonGroup}\n      size='giant'>\n      <Button style={styles.button}>L</Button>\n      <Button style={styles.button}>M</Button>\n      <Button style={styles.button}>R</Button>\n    </ButtonGroup>\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n  },\n  buttonGroup: {\n    marginVertical: 8,\n  },\n  button: {\n    flex: 1,\n  },\n});\n",
    "path": "src/playground/src/components/showcases/buttonGroup/buttonGroupSize.component.tsx",
    "name": "ButtonGroupSize"
  },
  {
    "code": "import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  ButtonGroup,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport const ButtonGroupStatusShowcase = () => (\n  <Layout style={styles.container}>\n    <ButtonGroup\n      style={styles.buttonGroup}\n      status='primary'>\n      <Button style={styles.button}>L</Button>\n      <Button style={styles.button}>M</Button>\n      <Button style={styles.button}>R</Button>\n    </ButtonGroup>\n    <ButtonGroup\n      style={styles.buttonGroup}\n      status='success'>\n      <Button style={styles.button}>L</Button>\n      <Button style={styles.button}>M</Button>\n      <Button style={styles.button}>R</Button>\n    </ButtonGroup>\n    <ButtonGroup\n      style={styles.buttonGroup}\n      status='info'>\n      <Button style={styles.button}>L</Button>\n      <Button style={styles.button}>M</Button>\n      <Button style={styles.button}>R</Button>\n    </ButtonGroup>\n    <ButtonGroup\n      style={styles.buttonGroup}\n      status='warning'>\n      <Button style={styles.button}>L</Button>\n      <Button style={styles.button}>M</Button>\n      <Button style={styles.button}>R</Button>\n    </ButtonGroup>\n    <ButtonGroup\n      style={styles.buttonGroup}\n      status='danger'>\n      <Button style={styles.button}>L</Button>\n      <Button style={styles.button}>M</Button>\n      <Button style={styles.button}>R</Button>\n    </ButtonGroup>\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n  buttonGroup: {\n    marginBottom: 10,\n  },\n  button: {\n    flex: 1,\n  },\n});\n",
    "path": "src/playground/src/components/showcases/buttonGroup/buttonGroupStatus.component.tsx",
    "name": "ButtonGroupStatus"
  },
  {
    "code": "import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Calendar,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport class CalendarBoundingMonthShowcase extends React.Component {\n\n  state = {\n    date: new Date(),\n  };\n\n  onSelect = (date) => {\n    this.setState({ date });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Calendar\n          date={this.state.date}\n          boundingMonth={false}\n          onSelect={this.onSelect}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n    minHeight: 376,\n  },\n});\n",
    "path": "src/playground/src/components/showcases/calendar/calendarBoundingMonth.component.tsx",
    "name": "CalendarBoundingMonth"
  },
  {
    "code": "import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Calendar,\n  Layout,\n} from 'react-native-ui-kitten';\n\nconst now = new Date();\n\nexport class CalendarBoundsShowcase extends React.Component {\n\n  state = {\n    date: new Date(),\n  };\n\n  onSelect = (date) => {\n    this.setState({ date });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Calendar\n          min={new Date(now.getFullYear(), now.getMonth(), 15)}\n          max={new Date(now.getFullYear(), now.getMonth() + 1, 15)}\n          date={this.state.date}\n          onSelect={this.onSelect}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n    minHeight: 376,\n  },\n});\n",
    "path": "src/playground/src/components/showcases/calendar/calendarBounds.component.tsx",
    "name": "CalendarBounds"
  },
  {
    "code": "import React from 'react';\nimport {\n  StyleSheet,\n  View,\n} from 'react-native';\nimport {\n  Calendar,\n  Layout,\n  Text,\n} from 'react-native-ui-kitten';\n\nexport class CalendarCustomDayShowcase extends React.Component {\n\n  state = {\n    date: new Date(),\n  };\n\n  onSelect = (date) => {\n    this.setState({ date });\n  };\n\n  renderDay = ({ date }, style) => (\n    <View\n      style={[styles.dayContainer, style.container]}>\n      <Text style={style.text}>{`${date.getDate()}`}</Text>\n      <Text style={[style.text, styles.value]}>\n        {`${100 * date.getDate() + Math.pow(date.getDate(), 2)}$`}\n      </Text>\n    </View>\n  );\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Calendar\n          date={this.state.date}\n          onSelect={this.onSelect}\n          renderDay={this.renderDay}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n    minHeight: 376,\n  },\n  dayContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    aspectRatio: 1,\n  },\n  value: {\n    fontSize: 12,\n    fontWeight: '400',\n  },\n});\n",
    "path": "src/playground/src/components/showcases/calendar/calendarCustomDay.component.tsx",
    "name": "CalendarCustomDay"
  },
  {
    "code": "import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Calendar,\n  Layout,\n  NativeDateService,\n} from 'react-native-ui-kitten';\n\nconst i18n = {\n  dayNames: {\n    short: ['周日', '周一', '周二', '周三', '周四', '周五', '周六'],\n    long: ['星期天', '星期一', '星期二', '星期三', '星期四', '星期五', '星期六'],\n  },\n  monthNames: {\n    short: ['1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月', '12月'],\n    long: ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月'],\n  },\n};\n\nexport class CalendarCustomLocaleShowcase extends React.Component {\n\n  state = {\n    date: new Date(),\n  };\n\n  dateService = new NativeDateService('zh', { i18n });\n\n  onSelect = (date) => {\n    this.setState({ date });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Calendar\n          date={this.state.date}\n          dateService={this.dateService}\n          onSelect={this.onSelect}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n    minHeight: 376,\n  },\n});\n",
    "path": "src/playground/src/components/showcases/calendar/calendarCustomLocale.component.tsx",
    "name": "CalendarCustomLocale"
  },
  {
    "code": "import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Calendar,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport class CalendarFilterShowcase extends React.Component {\n\n  state = {\n    date: new Date(),\n  };\n\n  onSelect = (date) => {\n    this.setState({ date });\n  };\n\n  filter = (date) => {\n    return date.getDay() !== 0 && date.getDay() !== 6;\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Calendar\n          date={this.state.date}\n          onSelect={this.onSelect}\n          filter={this.filter}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n    minHeight: 376,\n  },\n});\n",
    "path": "src/playground/src/components/showcases/calendar/calendarFilter.component.tsx",
    "name": "CalendarFilter"
  },
  {
    "code": "/**\n * IMPORTANT: To use Moment make sure to install Moment Date Service\n * npm i @ui-kitten/moment\n */\n\nimport React from 'react';\nimport { StyleSheet } from 'react-native';\nimport moment from 'moment';\nimport {\n  Calendar,\n  Layout,\n} from 'react-native-ui-kitten';\nimport { MomentDateService } from '@ui-kitten/moment';\n\nexport class CalendarMomentShowcase extends React.Component {\n\n  state = {\n    date: moment(),\n  };\n\n  dateService = new MomentDateService();\n\n  onSelect = (date) => {\n    this.setState({ date });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Calendar\n          date={this.state.date}\n          dateService={this.dateService}\n          onSelect={this.onSelect}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n    minHeight: 376,\n  },\n});\n",
    "path": "src/playground/src/components/showcases/calendar/calendarMoment.component.tsx",
    "name": "CalendarMoment"
  },
  {
    "code": "import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Calendar,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport class CalendarSimpleUsageShowcase extends React.Component {\n\n  state = {\n    date: new Date(),\n  };\n\n  onSelect = (date) => {\n    this.setState({ date });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Calendar\n          date={this.state.date}\n          onSelect={this.onSelect}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n    minHeight: 376,\n  },\n});\n",
    "path": "src/playground/src/components/showcases/calendar/calendarSimpleUsage.component.tsx",
    "name": "CalendarSimpleUsage"
  },
  {
    "code": "import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Calendar,\n  Layout,\n  NativeDateService,\n} from 'react-native-ui-kitten';\n\nexport class CalendarStartDayOfWeekShowcase extends React.Component {\n\n  state = {\n    date: new Date(),\n  };\n\n  dateService = new NativeDateService('en', { startDayOfWeek: 1 });\n\n  onSelect = (date) => {\n    this.setState({ date });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Calendar\n          date={this.state.date}\n          dateService={this.dateService}\n          onSelect={this.onSelect}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n    minHeight: 376,\n  },\n});\n",
    "path": "src/playground/src/components/showcases/calendar/calendarStartDayOfWeek.component.tsx",
    "name": "CalendarStartDayOfWeek"
  },
  {
    "code": "import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  RangeCalendar,\n} from 'react-native-ui-kitten';\n\nexport class RangeCalendarSimpleUsageShowcase extends React.Component {\n\n  state = {\n    range: {\n      startDate: null,\n      endDate: null,\n    },\n  };\n\n  onSelect = (range) => {\n    this.setState({ range });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <RangeCalendar\n          range={this.state.range}\n          onSelect={this.onSelect}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n",
    "path": "src/playground/src/components/showcases/calendar/rangeCalendarSimpleUsage.component.tsx",
    "name": "RangeCalendarSimpleUsage"
  },
  {
    "code": "import React from 'react';\nimport {\n  Image,\n  StyleSheet,\n  View,\n} from 'react-native';\nimport {\n  Layout,\n  Card,\n  Text,\n} from 'react-native-ui-kitten';\n\nconst bodyText: string = 'A nebula is an interstellar cloud of dust, hydrogen, helium and other ionized gases. ' +\n  'Originally, nebula was a name for any diffuse astronomical object, including galaxies beyond the Milky Way.';\nconst headerImageUri: string = 'https://cdn.pixabay.com/photo/2017/01/20/00/30/maldives-1993704__340.jpg';\n\nexport const CustomHeader = () => {\n  return (\n    <View>\n      <Image\n        source={{ uri: headerImageUri }}\n        style={styles.headerImage}\n      />\n      <View style={styles.headerTextContainer}>\n        <Text\n          category='h6'\n          style={styles.headerText}>\n          Title\n        </Text>\n      </View>\n    </View>\n  );\n};\n\nexport const CardCustomHeaderShowcase = () => (\n  <Layout style={styles.container}>\n    <Card header={CustomHeader}>\n      <Text style={styles.bodyText}>\n        {bodyText}\n      </Text>\n    </Card>\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingVertical: 4,\n    paddingHorizontal: 4,\n  },\n  card: {\n    marginVertical: 6,\n  },\n  bodyText: {\n    color: '#8f8b8b',\n  },\n  headerTextContainer: {\n    paddingHorizontal: 24,\n    paddingVertical: 16,\n  },\n  headerText: {\n    color: '#6e5f5e',\n  },\n  headerImage: {\n    width: '100%',\n    height: 230,\n  },\n});\n",
    "path": "src/playground/src/components/showcases/card/cardCustomHeader.component.tsx",
    "name": "CardCustomHeader"
  },
  {
    "code": "import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Card,\n  CardHeader,\n  Text,\n} from 'react-native-ui-kitten';\n\nconst bodyText: string = 'A nebula is an interstellar cloud of dust, hydrogen, helium and other ionized gases. ' +\n  'Originally, nebula was a name for any diffuse astronomical object, including galaxies beyond the Milky Way.';\n\nconst Header = () => (\n  <CardHeader\n    title='Title'\n    description='Description'\n  />\n);\n\nexport const CardEvaHeaderShowcase = () => (\n  <Layout style={styles.container}>\n    <Card header={Header}>\n      <Text style={styles.bodyText}>\n        {bodyText}\n      </Text>\n    </Card>\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingVertical: 4,\n    paddingHorizontal: 4,\n  },\n  card: {\n    marginVertical: 6,\n  },\n  bodyText: {\n    color: '#8f8b8b',\n  },\n});\n",
    "path": "src/playground/src/components/showcases/card/cardEvaHeader.component.tsx",
    "name": "CardEvaHeader"
  },
  {
    "code": "import React from 'react';\nimport {\n  StyleSheet,\n  View,\n} from 'react-native';\nimport {\n  Layout,\n  Card,\n  Text,\n  Button,\n} from 'react-native-ui-kitten';\n\nconst bodyText: string = 'A nebula is an interstellar cloud of dust, hydrogen, helium and other ionized gases. ' +\n  'Originally, nebula was a name for any diffuse astronomical object, including galaxies beyond the Milky Way.';\n\nconst Footer = () => {\n  return (\n    <View style={styles.footerContainer}>\n      <Button\n        size='small'\n        style={styles.footerControl}>\n        Accept\n      </Button>\n      <Button\n        size='small'\n        status='basic'>\n        Cancel\n      </Button>\n    </View>\n  );\n};\n\nexport const CardFooterShowcase = () => (\n  <Layout style={styles.container}>\n    <Card footer={Footer}>\n      <Text style={styles.bodyText}>\n        {bodyText}\n      </Text>\n    </Card>\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingVertical: 4,\n    paddingHorizontal: 4,\n  },\n  card: {\n    marginVertical: 6,\n  },\n  bodyText: {\n    color: '#8f8b8b',\n  },\n  footerContainer: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n  },\n  footerControl: {\n    marginRight: 12,\n  },\n});\n",
    "path": "src/playground/src/components/showcases/card/cardFooter.component.tsx",
    "name": "CardFooter"
  },
  {
    "code": "import React from 'react';\nimport {\n  StyleSheet,\n  View,\n} from 'react-native';\nimport {\n  Layout,\n  Card,\n  Text,\n  Button,\n  CardHeader,\n} from 'react-native-ui-kitten';\n\nconst bodyText: string = 'A nebula is an interstellar cloud of dust, hydrogen, helium and other ionized gases. ' +\n  'Originally, nebula was a name for any diffuse astronomical object, including galaxies beyond the Milky Way.';\n\nconst Footer = () => {\n  return (\n    <View style={styles.footerContainer}>\n      <Button\n        size='small'\n        style={styles.footerControl}>\n        Accept\n      </Button>\n      <Button\n        size='small'\n        status='basic'>\n        Cancel\n      </Button>\n    </View>\n  );\n};\n\nconst Header = () => (\n  <CardHeader\n    title='Title'\n    description='Description'\n  />\n);\n\nexport const CardHeaderFooterShowcase = () => (\n  <Layout style={styles.container}>\n    <Card\n      header={Header}\n      footer={Footer}>\n      <Text style={styles.bodyText}>\n        {bodyText}\n      </Text>\n    </Card>\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingVertical: 4,\n    paddingHorizontal: 4,\n  },\n  card: {\n    marginVertical: 6,\n  },\n  bodyText: {\n    color: '#8f8b8b',\n  },\n  footerContainer: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n  },\n  footerControl: {\n    marginRight: 12,\n  },\n});\n",
    "path": "src/playground/src/components/showcases/card/cardHeaderFooter.component.tsx",
    "name": "CardHeaderFooter"
  },
  {
    "code": "import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Card,\n  Text,\n} from 'react-native-ui-kitten';\n\nconst bodyText: string = 'A nebula is an interstellar cloud of dust, hydrogen, helium and other ionized gases. ' +\n  'Originally, nebula was a name for any diffuse astronomical object, including galaxies beyond the Milky Way.';\n\nexport const CardSimpleUsageShowcase = () => (\n  <Layout style={styles.container}>\n    <Card>\n      <Text style={styles.bodyText}>\n        {bodyText}\n      </Text>\n    </Card>\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingVertical: 4,\n    paddingHorizontal: 4,\n  },\n  card: {\n    marginVertical: 6,\n  },\n  bodyText: {\n    color: '#8f8b8b',\n  },\n});\n",
    "path": "src/playground/src/components/showcases/card/cardSimpleUsage.component.tsx",
    "name": "CardSimpleUsage"
  },
  {
    "code": "import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Card,\n  CardHeader,\n  Text,\n  List,\n} from 'react-native-ui-kitten';\n\nconst bodyText: string = 'A nebula is an interstellar cloud of dust, hydrogen, helium and other ionized gases. ' +\n  'Originally, nebula was a name for any diffuse astronomical object, including galaxies beyond the Milky Way.';\n\nexport class CardStatusesShowcase extends React.Component {\n\n  statuses = [\n    'primary',\n    'success',\n    'info',\n    'warning',\n    'danger',\n  ];\n\n  renderHeader = () => (\n    <CardHeader\n      title='Title'\n      description='Description'\n    />\n  );\n\n  renderItem = (info) => (\n    <Card\n      status={info.item}\n      style={styles.card}\n      header={this.renderHeader}>\n      <Text style={styles.bodyText}>\n        {bodyText}\n      </Text>\n    </Card>\n  );\n\n  render() {\n    return (\n      <List\n        style={styles.container}\n        data={this.statuses}\n        renderItem={this.renderItem}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    height: 500,\n    paddingVertical: 4,\n    paddingHorizontal: 4,\n  },\n  card: {\n    marginVertical: 4,\n  },\n  bodyText: {\n    color: '#8f8b8b',\n  },\n});\n",
    "path": "src/playground/src/components/showcases/card/cardStatuses.component.tsx",
    "name": "CardStatuses"
  },
  {
    "code": "import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  CheckBox,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport class CheckboxIndeterminateShowcase extends React.Component {\n\n  state = {\n    mainCheckboxChecked: false,\n    mainCheckboxIndeterminate: false,\n    checkbox1Checked: false,\n    checkbox2Checked: false,\n    checkbox3Checked: false,\n  };\n\n  onMainCheckboxChange = (checked) => {\n    if (checked) {\n      this.setState({\n        checkbox1Checked: true,\n        checkbox2Checked: true,\n        checkbox3Checked: true,\n      });\n    } else {\n      this.setState({\n        checkbox1Checked: false,\n        checkbox2Checked: false,\n        checkbox3Checked: false,\n      });\n    }\n    this.setState({ mainCheckboxChecked: checked });\n  };\n\n  onCheckbox1Change = (checked) => {\n    this.setState({ checkbox1Checked: checked }, this.setMainCheckboxDependingState);\n  };\n\n  onCheckbox2Change = (checked) => {\n    this.setState({ checkbox2Checked: checked }, this.setMainCheckboxDependingState);\n  };\n\n  onCheckbox3Change = (checked) => {\n    this.setState({ checkbox3Checked: checked }, this.setMainCheckboxDependingState);\n  };\n\n  setMainCheckboxDependingState = () => {\n    const { checkbox1Checked, checkbox2Checked, checkbox3Checked } = this.state;\n    const states = [checkbox1Checked, checkbox2Checked, checkbox3Checked];\n    const someChecked = states.some((item) => item === true);\n    const everyChecked = states.every((item) => item === true);\n\n    if (someChecked && !everyChecked) {\n      this.setState({\n        mainCheckboxChecked: true,\n        mainCheckboxIndeterminate: true,\n      });\n    } else if (!someChecked && !everyChecked) {\n      this.setState({\n        mainCheckboxChecked: false,\n        mainCheckboxIndeterminate: false,\n      });\n    } else if (everyChecked) {\n      this.setState({\n        mainCheckboxChecked: true,\n        mainCheckboxIndeterminate: false,\n      });\n    }\n  };\n\n  render() {\n    const {\n      mainCheckboxChecked,\n      mainCheckboxIndeterminate,\n      checkbox1Checked,\n      checkbox2Checked,\n      checkbox3Checked,\n    } = this.state;\n\n    return (\n      <Layout style={styles.container}>\n        <CheckBox\n          style={styles.checkbox}\n          text='Main'\n          checked={mainCheckboxChecked}\n          indeterminate={mainCheckboxIndeterminate}\n          onChange={this.onMainCheckboxChange}\n        />\n        <CheckBox\n          text='Checkbox 1'\n          style={[styles.checkbox, styles.leftSpace]}\n          checked={checkbox1Checked}\n          onChange={this.onCheckbox1Change}\n        />\n        <CheckBox\n          text='Checkbox 2'\n          style={[styles.checkbox, styles.leftSpace]}\n          checked={checkbox2Checked}\n          onChange={this.onCheckbox2Change}\n        />\n        <CheckBox\n          text='Checkbox 3'\n          style={[styles.checkbox, styles.leftSpace]}\n          checked={checkbox3Checked}\n          onChange={this.onCheckbox3Change}\n        />\n      </Layout>\n    );\n  }\n}\n\nexport const styles = StyleSheet.create({\n  container: {\n    paddingVertical: 4,\n    paddingHorizontal: 8,\n  },\n  checkbox: {\n    marginVertical: 4,\n  },\n  leftSpace: {\n    marginHorizontal: 4,\n  },\n});\n",
    "path": "src/playground/src/components/showcases/checkbox/checkboxIndeterminate.component.tsx",
    "name": "CheckboxIndeterminate"
  },
  {
    "code": "import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { CheckBox } from 'react-native-ui-kitten';\n\nexport class CheckboxInlineStylingShowcase extends React.Component {\n\n  state = {\n    checked: false,\n  };\n\n  onCheckedChange = (checked) => {\n    this.setState({ checked });\n  };\n\n  render() {\n    return (\n      <CheckBox\n        style={styles.checkbox}\n        textStyle={styles.text}\n        checked={this.state.checked}\n        text='Place your Text'\n        onChange={this.onCheckedChange}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  checkbox: {\n    margin: 8,\n  },\n  text: {\n    color: '#3366FF',\n    fontSize: 18,\n  },\n});\n",
    "path": "src/playground/src/components/showcases/checkbox/checkboxInlineStyling.component.tsx",
    "name": "CheckboxInlineStyling"
  },
  {
    "code": "import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  CheckBox,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport class CheckboxSimpleUsageShowcase extends React.Component {\n\n  state = {\n    checked1: false,\n  };\n\n  onChecked1Change = (checked1) => {\n    this.setState({ checked1 });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <CheckBox\n          style={styles.checkbox}\n          text='Active'\n          checked={this.state.checked1}\n          onChange={this.onChecked1Change}\n        />\n        <CheckBox\n          style={styles.checkbox}\n          text='Disabled'\n          disabled={true}\n        />\n        <CheckBox\n          style={styles.checkbox}\n          text='Checked Disabled'\n          disabled={true}\n          checked={true}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    paddingVertical: 4,\n    paddingHorizontal: 4,\n  },\n  checkbox: {\n    marginVertical: 4,\n    marginHorizontal: 4,\n  },\n});\n",
    "path": "src/playground/src/components/showcases/checkbox/checkboxSimpleUsage.component.tsx",
    "name": "CheckboxSimpleUsage"
  },
  {
    "code": "import React from 'react';\nimport {\n  StyleSheet,\n  View,\n} from 'react-native';\nimport {\n  CheckBox,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport class CheckboxStatusShowcase extends React.Component {\n\n  state = {\n    primaryChecked: false,\n    successChecked: false,\n    infoChecked: false,\n    warningChecked: false,\n    dangerChecked: false,\n    basicChecked: false,\n  };\n\n  onPrimaryChange = (primaryChecked) => {\n    this.setState({ primaryChecked });\n  };\n\n  onSuccessChange = (successChecked) => {\n    this.setState({ successChecked });\n  };\n\n  onInfoChange = (infoChecked) => {\n    this.setState({ infoChecked });\n  };\n\n  onWarningChange = (warningChecked) => {\n    this.setState({ warningChecked });\n  };\n\n  onDangerChange = (dangerChecked) => {\n    this.setState({ dangerChecked });\n  };\n\n  onBasicChange = (basicChecked) => {\n    this.setState({ basicChecked });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <CheckBox\n          style={styles.checkbox}\n          status='primary'\n          text='Primary'\n          checked={this.state.primaryChecked}\n          onChange={this.onPrimaryChange}\n        />\n        <CheckBox\n          style={styles.checkbox}\n          status='success'\n          text='Success'\n          checked={this.state.successChecked}\n          onChange={this.onSuccessChange}\n        />\n        <CheckBox\n          style={styles.checkbox}\n          status='info'\n          text='Info'\n          checked={this.state.infoChecked}\n          onChange={this.onInfoChange}\n        />\n        <CheckBox\n          style={styles.checkbox}\n          status='warning'\n          text='Warning'\n          checked={this.state.warningChecked}\n          onChange={this.onWarningChange}\n        />\n        <CheckBox\n          style={styles.checkbox}\n          status='danger'\n          text='Danger'\n          checked={this.state.dangerChecked}\n          onChange={this.onDangerChange}\n        />\n        <CheckBox\n          style={styles.checkbox}\n          status='basic'\n          text='Basic'\n          checked={this.state.basicChecked}\n          onChange={this.onBasicChange}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    paddingVertical: 4,\n    paddingHorizontal: 4,\n  },\n  checkbox: {\n    marginVertical: 4,\n    marginHorizontal: 4,\n  },\n});\n",
    "path": "src/playground/src/components/showcases/checkbox/checkboxStatus.component.tsx",
    "name": "CheckboxStatus"
  },
  {
    "code": "import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { CheckBox } from 'react-native-ui-kitten';\n\nexport class CheckboxTextShowcase extends React.Component {\n\n  state = {\n    checked: false,\n  };\n\n  onCheckedChange = (checked) => {\n    this.setState({ checked });\n  };\n\n  render() {\n    return (\n      <CheckBox\n        style={styles.checkbox}\n        checked={this.state.checked}\n        text='Place your Text'\n        onChange={this.onCheckedChange}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  checkbox: {\n    margin: 8,\n  },\n});\n",
    "path": "src/playground/src/components/showcases/checkbox/checkboxText.component.tsx",
    "name": "CheckboxText"
  },
  {
    "code": "import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Datepicker,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport class DatepickerBoundingMonthShowcase extends React.Component {\n\n  state = {\n    date: new Date(),\n  };\n\n  onSelect = (date) => {\n    this.setState({ date });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Datepicker\n          date={this.state.date}\n          boundingMonth={false}\n          onSelect={this.onSelect}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 400,\n    padding: 16,\n  },\n});\n",
    "path": "src/playground/src/components/showcases/datepicker/datepickerBoundingMonth.component.tsx",
    "name": "DatepickerBoundingMonth"
  },
  {
    "code": "import React from 'react';\nimport {\n  StyleSheet,\n  View,\n} from 'react-native';\nimport {\n  Datepicker,\n  Layout,\n  Text,\n} from 'react-native-ui-kitten';\n\nexport class DatepickerCustomDayShowcase extends React.Component {\n\n  state = {\n    date: new Date(),\n  };\n\n  onSelect = (date) => {\n    this.setState({ date });\n  };\n\n  renderDay = ({ date }, style) => (\n    <View\n      style={[styles.dayContainer, style.container]}>\n      <Text style={style.text}>{`${date.getDate()}`}</Text>\n      <Text style={[style.text, styles.value]}>\n        {`${100 * date.getDate() + Math.pow(date.getDate(), 2)}$`}\n      </Text>\n    </View>\n  );\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Datepicker\n          date={this.state.date}\n          onSelect={this.onSelect}\n          renderDay={this.renderDay}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 400,\n    padding: 16,\n  },\n  dayContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    aspectRatio: 1,\n  },\n  value: {\n    fontSize: 12,\n    fontWeight: '400',\n  },\n});\n",
    "path": "src/playground/src/components/showcases/datepicker/datepickerCustomDay.component.tsx",
    "name": "DatepickerCustomDay"
  },
  {
    "code": "import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Datepicker,\n  Layout,\n  NativeDateService,\n} from 'react-native-ui-kitten';\n\nconst i18n = {\n  dayNames: {\n    short: ['周日', '周一', '周二', '周三', '周四', '周五', '周六'],\n    long: ['星期天', '星期一', '星期二', '星期三', '星期四', '星期五', '星期六'],\n  },\n  monthNames: {\n    short: ['1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月', '12月'],\n    long: ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月'],\n  },\n};\n\nexport class DatepickerCustomLocaleShowcase extends React.Component {\n\n  state = {\n    date: new Date(),\n  };\n\n  dateService = new NativeDateService('zh', i18n);\n\n  onSelect = (date) => {\n    this.setState({ date });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Datepicker\n          date={this.state.date}\n          dateService={this.dateService}\n          onSelect={this.onSelect}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 400,\n    padding: 16,\n  },\n});\n",
    "path": "src/playground/src/components/showcases/datepicker/datepickerCustomLocale.component.tsx",
    "name": "DatepickerCustomLocale"
  },
  {
    "code": "import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Datepicker,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport class DatepickerFilterShowcase extends React.Component {\n\n  state = {\n    date: new Date(),\n  };\n\n  onSelect = (date) => {\n    this.setState({ date });\n  };\n\n  filter = (date) => {\n    return date.getDay() !== 0 && date.getDay() !== 6;\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Datepicker\n          date={this.state.date}\n          filter={this.filter}\n          onSelect={this.onSelect}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 400,\n    padding: 16,\n  },\n});\n",
    "path": "src/playground/src/components/showcases/datepicker/datepickerFilter.component.tsx",
    "name": "DatepickerFilter"
  },
  {
    "code": "/**\n * IMPORTANT: To use Moment make sure to install Moment Date Service\n * npm i @ui-kitten/moment\n */\n\nimport React from 'react';\nimport { StyleSheet } from 'react-native';\nimport moment from 'moment';\nimport {\n  Datepicker,\n  Layout,\n} from 'react-native-ui-kitten';\nimport { MomentDateService } from '@ui-kitten/moment';\n\nexport class DatepickerMomentShowcase extends React.Component {\n\n  dateService = new MomentDateService();\n\n  state = {\n    date: moment(),\n  };\n\n  onSelect = (date) => {\n    this.setState({ date });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Datepicker\n          date={this.state.date}\n          dateService={this.dateService}\n          onSelect={this.onSelect}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 400,\n    padding: 16,\n  },\n});\n",
    "path": "src/playground/src/components/showcases/datepicker/datepickerMoment.component.tsx",
    "name": "DatepickerMoment"
  },
  {
    "code": "import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Datepicker,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport class DatepickerSimpleUsageShowcase extends React.Component {\n\n  state = {\n    date: new Date(),\n  };\n\n  onSelect = (date) => {\n    this.setState({ date });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Datepicker\n          date={this.state.date}\n          onSelect={this.onSelect}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 400,\n    padding: 16,\n  },\n});\n",
    "path": "src/playground/src/components/showcases/datepicker/datepickerSimpleUsage.component.tsx",
    "name": "DatepickerSimpleUsage"
  },
  {
    "code": "/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Datepicker,\n  Icon,\n  Layout,\n} from 'react-native-ui-kitten';\n\nconst CalendarIcon = (style) => (\n  <Icon {...style} name='calendar'/>\n);\n\nexport class DatepickerWithIconShowcase extends React.Component {\n\n  state = {\n    date: new Date(),\n  };\n\n  onSelect = (date) => {\n    this.setState({ date });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Datepicker\n          date={this.state.date}\n          icon={CalendarIcon}\n          onSelect={this.onSelect}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 400,\n    padding: 16,\n  },\n});\n",
    "path": "src/playground/src/components/showcases/datepicker/datepickerWithIcon.component.tsx",
    "name": "DatepickerWithIcon"
  },
  {
    "code": "import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  RangeDatepicker,\n} from 'react-native-ui-kitten';\n\nexport class RangeDatepickerSimpleUsageShowcase extends React.Component {\n\n  state = {\n    range: {\n      startDate: null,\n      endDate: null,\n    },\n  };\n\n  onSelect = (range) => {\n    this.setState({ range });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <RangeDatepicker\n          range={this.state.range}\n          onSelect={this.onSelect}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 400,\n    padding: 16,\n  },\n});\n\n",
    "path": "src/playground/src/components/showcases/datepicker/rangeDatepickerSimpleUsage.component.tsx",
    "name": "RangeDatepickerSimpleUsage"
  },
  {
    "code": "import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { SafeAreaView } from 'react-navigation';\nimport {\n  Drawer,\n  Layout,\n  Text,\n} from 'react-native-ui-kitten';\n\nexport class DrawerCustomHeaderShowcase extends React.Component {\n\n  drawerData = [\n    { title: 'Dashboard' },\n    { title: 'Messages' },\n    { title: 'Settings' },\n    { title: 'Articles' },\n    { title: 'Ecommerce' },\n    { title: 'Chat' },\n  ];\n\n  onRouteSelect = (index) => {\n    // const { [index]: route } = this.drawerData;\n    // navigate with React Navigation\n    // this.props.navigation.navigate(route.title);\n  };\n\n  renderHeader = () => (\n    <Layout level='2'>\n      <Text category='h6'>Drawer Header</Text>\n    </Layout>\n  );\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <SafeAreaView>\n          <Drawer\n            data={this.drawerData}\n            header={this.renderHeader}\n            onSelect={this.onRouteSelect}\n          />\n        </SafeAreaView>\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n});\n",
    "path": "src/playground/src/components/showcases/drawer/drawerCustomHeader.component.tsx",
    "name": "DrawerCustomHeader"
  },
  {
    "code": "import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { SafeAreaView } from 'react-navigation';\nimport {\n  Drawer,\n  DrawerHeaderFooter,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport class DrawerFooterShowcase extends React.Component {\n\n  drawerData = [\n    { title: 'Dashboard' },\n    { title: 'Messages' },\n    { title: 'Settings' },\n    { title: 'Articles' },\n    { title: 'Ecommerce' },\n    { title: 'Chat' },\n  ];\n\n  onRouteSelect = (index) => {\n    // const { [index]: route } = this.drawerData;\n    // navigate with React Navigation\n    // this.props.navigation.navigate(route.title);\n  };\n\n  renderFooter = () => (\n    <DrawerHeaderFooter description='Drawer Footer'/>\n  );\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <SafeAreaView>\n          <Drawer\n            data={this.drawerData}\n            footer={this.renderFooter}\n            onSelect={this.onRouteSelect}\n          />\n        </SafeAreaView>\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n});\n",
    "path": "src/playground/src/components/showcases/drawer/drawerFooter.component.tsx",
    "name": "DrawerFooter"
  },
  {
    "code": "/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { SafeAreaView } from 'react-navigation';\nimport {\n  Drawer,\n  DrawerHeaderFooter,\n  Icon,\n  Layout,\n} from 'react-native-ui-kitten';\n\nconst PersonIcon = (style) => (\n  <Icon {...style} name='person'/>\n);\n\nexport class DrawerHeaderShowcase extends React.Component {\n\n  drawerData = [\n    { title: 'Dashboard' },\n    { title: 'Messages' },\n    { title: 'Settings' },\n    { title: 'Articles' },\n    { title: 'Ecommerce' },\n    { title: 'Chat' },\n  ];\n\n  onRouteSelect = (index) => {\n    // const { [index]: route } = this.drawerData;\n    // navigate with React Navigation\n    // this.props.navigation.navigate(route.title);\n  };\n\n  renderProfileHeader = () => (\n    <DrawerHeaderFooter\n      title='John Doe'\n      description='React Native Developer'\n      icon={PersonIcon}\n    />\n  );\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <SafeAreaView>\n          <Drawer\n            data={this.drawerData}\n            header={this.renderProfileHeader}\n            onSelect={this.onRouteSelect}\n          />\n        </SafeAreaView>\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n});\n",
    "path": "src/playground/src/components/showcases/drawer/drawerHeader.component.tsx",
    "name": "DrawerHeader"
  },
  {
    "code": "import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { DrawerHeaderFooter } from 'react-native-ui-kitten';\n\nexport const DrawerHeaderFooterInlineStylingShowcase = () => (\n  <DrawerHeaderFooter\n    style={styles.drawerHeader}\n    titleStyle={styles.drawerHeaderTitle}\n    descriptionStyle={styles.drawerHeaderDescription}\n    title='John Doe'\n    description='React Native Developer'\n  />\n);\n\nconst styles = StyleSheet.create({\n  drawerHeader: { backgroundColor: 'black' },\n  drawerHeaderTitle: { color: 'white' },\n  drawerHeaderDescription: { color: 'gray' },\n});\n",
    "path": "src/playground/src/components/showcases/drawer/drawerHeaderFooterInlineStyling.component.tsx",
    "name": "DrawerHeaderFooterInlineStyling"
  },
  {
    "code": "/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport {\n  DrawerHeaderFooter,\n  Icon,\n} from 'react-native-ui-kitten';\n\nconst ProfileIcon = (style) => (\n  <Icon {...style} name='person'/>\n);\n\nexport const DrawerHeaderFooterSimpleUsageShowcase = () => (\n  <DrawerHeaderFooter\n    title='John Doe'\n    description='React Native Developer'\n    icon={ProfileIcon}\n  />\n);\n",
    "path": "src/playground/src/components/showcases/drawer/drawerHeaderFooterSimpleUsage.component.tsx",
    "name": "DrawerHeaderFooterSimpleUsage"
  },
  {
    "code": "/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport {\n  Button,\n  DrawerHeaderFooter,\n  Icon,\n} from 'react-native-ui-kitten';\n\nconst LogoutIcon = (style) => (\n  <Icon {...style} name='log-out'/>\n);\n\nconst LogoutButton = (style) => (\n  <Button style={style} icon={LogoutIcon}/>\n);\n\nexport const DrawerHeaderFooterWithAccessoryShowcase = () => (\n  <DrawerHeaderFooter\n    title='John Doe'\n    description='React Native Developer'\n    accessory={LogoutButton}\n  />\n);\n",
    "path": "src/playground/src/components/showcases/drawer/drawerHeaderFooterWithAccessory.component.tsx",
    "name": "DrawerHeaderFooterWithAccessory"
  },
  {
    "code": "import React from 'react';\nimport { Image } from 'react-native';\nimport { DrawerHeaderFooter } from 'react-native-ui-kitten';\n\nconst ProfileIcon = (style) => (\n  <Image style={style} source={{uri: 'https://akveo.github.io/eva-icons/fill/png/128/profile.png'}}/>\n);\n\nexport const DrawerHeaderFooterWithExternalSourceIconShowcase = () => (\n  <DrawerHeaderFooter\n    title='John Doe'\n    description='React Native Developer'\n    icon={ProfileIcon}\n  />\n);\n",
    "path": "src/playground/src/components/showcases/drawer/drawerHeaderFooterWithExternalSourceIcon.component.tsx",
    "name": "DrawerHeaderFooterWithExternalSourceIcon"
  },
  {
    "code": "import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { SafeAreaView } from 'react-navigation';\nimport {\n  Drawer,\n  Layout,\n  Text,\n} from 'react-native-ui-kitten';\n\nconst NotificationBadge = (style) => (\n  <Layout style={[style, styles.badge]}>\n    <Text>NEW</Text>\n  </Layout>\n);\n\nexport class DrawerNotificationBadgeItemShowcase extends React.Component {\n\n  drawerData = [\n    { title: 'Dashboard' },\n    { title: 'Messages', accessory: NotificationBadge },\n    { title: 'Settings' },\n    { title: 'Articles' },\n  ];\n\n  onRouteSelect = (index) => {\n    // const { [index]: route } = this.drawerData;\n    // navigate with React Navigation\n    // this.props.navigation.navigate(route.title);\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <SafeAreaView>\n          <Drawer\n            data={this.drawerData}\n            onSelect={this.onRouteSelect}\n          />\n        </SafeAreaView>\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n  badge: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: 24,\n    width: 48,\n    paddingHorizontal: 24,\n    borderRadius: 12,\n    backgroundColor: 'orange',\n  },\n});\n",
    "path": "src/playground/src/components/showcases/drawer/drawerNotificationBadgeItem.component.tsx",
    "name": "DrawerNotificationBadgeItem"
  },
  {
    "code": "import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { SafeAreaView } from 'react-navigation';\nimport {\n  Drawer,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport class DrawerSimpleUsageShowcase extends React.Component {\n\n  drawerData = [\n    { title: 'Dashboard' },\n    { title: 'Messages' },\n    { title: 'Settings' },\n    { title: 'Articles' },\n    { title: 'Ecommerce' },\n    { title: 'Chat' },\n  ];\n\n  onRouteSelect = (index) => {\n    // const { [index]: route } = this.drawerData;\n    // navigate with React Navigation\n    // this.props.navigation.navigate(route.title);\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <SafeAreaView>\n          <Drawer\n            data={this.drawerData}\n            onSelect={this.onRouteSelect}\n          />\n        </SafeAreaView>\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n});\n",
    "path": "src/playground/src/components/showcases/drawer/drawerSimpleUsage.component.tsx",
    "name": "DrawerSimpleUsage"
  },
  {
    "code": "/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { SafeAreaView } from 'react-navigation';\nimport {\n  Drawer,\n  Icon,\n  Layout,\n} from 'react-native-ui-kitten';\n\nconst DashboardIcon = (style) => (\n  <Icon {...style} name='layout'/>\n);\n\nconst MessagesIcon = (style) => (\n  <Icon {...style} name='email'/>\n);\n\nconst SettingsIcon = (style) => (\n  <Icon {...style} name='settings'/>\n);\n\nexport class DrawerWithIconsShowcase extends React.Component {\n\n  drawerData = [\n    { title: 'Dashboard', icon: DashboardIcon },\n    { title: 'Messages', icon: MessagesIcon },\n    { title: 'Settings', icon: SettingsIcon },\n  ];\n\n  onRouteSelect = (index) => {\n    // const { [index]: route } = this.drawerData;\n    // navigate with React Navigation\n    // this.props.navigation.navigate(route.title);\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <SafeAreaView>\n          <Drawer\n            data={this.drawerData}\n            onSelect={this.onRouteSelect}\n          />\n        </SafeAreaView>\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n});\n",
    "path": "src/playground/src/components/showcases/drawer/drawerWithIcons.component.tsx",
    "name": "DrawerWithIcons"
  },
  {
    "code": "/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport {\n  Button,\n  Icon,\n} from 'react-native-ui-kitten';\n\nexport class IconAnimationShowcase extends React.Component {\n\n  iconRef = React.createRef();\n\n  onPress = () => {\n    this.iconRef.current.startAnimation();\n  };\n\n  renderIcon = (style) => (\n    <Icon\n      {...style}\n      ref={this.iconRef}\n      name='star'\n      animation='shake'\n    />\n  );\n\n  render() {\n    return (\n      <Button\n        icon={this.renderIcon}\n        onPress={this.onPress}>\n        START ANIMATION\n      </Button>\n    );\n  }\n}\n",
    "path": "src/playground/src/components/showcases/icon/iconAnimation.component.tsx",
    "name": "IconAnimation"
  },
  {
    "code": "/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport {\n  Button,\n  Icon,\n} from 'react-native-ui-kitten';\n\nexport class IconAnimationInfiniteShowcase extends React.Component {\n\n  iconRef = React.createRef();\n\n  onPress = () => {\n    this.iconRef.current.startAnimation();\n  };\n\n  renderIcon = (style) => (\n    <Icon\n      {...style}\n      ref={this.iconRef}\n      name='star'\n      animation='shake'\n      animationConfig={{ cycles: -1 }}\n    />\n  );\n\n  render() {\n    return (\n      <Button\n        icon={this.renderIcon}\n        onPress={this.onPress}>\n        START ANIMATION\n      </Button>\n    );\n  }\n}\n",
    "path": "src/playground/src/components/showcases/icon/iconAnimationInfinite.component.tsx",
    "name": "IconAnimationInfinite"
  },
  {
    "code": "import React from 'react';\nimport { Image } from 'react-native';\nimport { Button } from 'react-native-ui-kitten';\n\nconst RemoteBulbIcon = (style) => (\n  <Image\n    style={style}\n    source={{ uri: 'https://akveo.github.io/eva-icons/outline/png/128/bulb-outline.png' }}\n  />\n);\n\nexport const IconExternalSourceShowcase = (props) => (\n  <Button icon={RemoteBulbIcon}>\n    Login with Facebook\n  </Button>\n);\n",
    "path": "src/playground/src/components/showcases/icon/iconExternalSource.component.tsx",
    "name": "IconExternalSource"
  },
  {
    "code": "/**\n * Visit react-native-svg documentation for more details on styling\n * https://github.com/react-native-community/react-native-svg#common-props\n */\n\nimport React from 'react';\nimport { Icon } from 'react-native-ui-kitten';\n\nexport const IconInlineStylingShowcase = (props) => (\n  <Icon\n    name='github'\n    width={32}\n    height={32}\n    fill='#FF7E6D'\n  />\n);\n",
    "path": "src/playground/src/components/showcases/icon/iconInlineStyling.component.tsx",
    "name": "IconInlineStyling"
  },
  {
    "code": "/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n *\n * Visit react-native-svg documentation for more details on styling\n * https://github.com/react-native-community/react-native-svg#common-props\n */\n\nimport React from 'react';\nimport { Icon } from 'react-native-ui-kitten';\n\nexport const IconSimpleUsageShowcase = () => (\n  <Icon name='star' width={32} height={32} fill='#3366FF' />\n);\n",
    "path": "src/playground/src/components/showcases/icon/iconSimpleUsage.component.tsx",
    "name": "IconSimpleUsage"
  },
  {
    "code": "/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport {\n  Button,\n  Icon,\n} from 'react-native-ui-kitten';\n\nexport class IconWithinButtonShowcase extends React.Component {\n\n  state = {\n    liked: false,\n  };\n\n  onPress = () => {\n    const liked = !this.state.liked;\n    this.setState({ liked });\n  };\n\n  renderIcon = (style) => (\n    <Icon\n      name={this.state.liked ? 'heart' : 'heart-outline'}\n      {...style}\n    />\n  );\n\n  render() {\n    return (\n      <Button\n        icon={this.renderIcon}\n        onPress={this.onPress}>\n        LIKE\n      </Button>\n    );\n  }\n}\n",
    "path": "src/playground/src/components/showcases/icon/iconWithinButton.component.tsx",
    "name": "IconWithinButton"
  },
  {
    "code": "/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport {\n  Icon,\n  Input,\n} from 'react-native-ui-kitten';\n\nexport class IconWithinInputShowcase extends React.Component {\n\n  state = {\n    value: '',\n    secureTextEntry: true,\n  };\n\n  onChangeText = (value) => {\n    this.setState({ value });\n  };\n\n  onIconPress = () => {\n    const secureTextEntry = !this.state.secureTextEntry;\n    this.setState({ secureTextEntry });\n  };\n\n  renderIcon = (style) => (\n    <Icon\n      {...style}\n      name={!this.state.secureTextEntry ? 'eye' : 'eye-off'}\n    />\n  );\n\n  render() {\n    return (\n      <Input\n        placeholder='Password'\n        value={this.state.value}\n        secureTextEntry={this.state.secureTextEntry}\n        onChangeText={this.onChangeText}\n        icon={this.renderIcon}\n        onIconPress={this.onIconPress}\n      />\n    );\n  }\n}\n",
    "path": "src/playground/src/components/showcases/icon/iconWithinInput.component.tsx",
    "name": "IconWithinInput"
  },
  {
    "code": "import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Input } from 'react-native-ui-kitten';\n\nexport class InputInlineStylingShowcase extends React.Component {\n\n  state = {\n    inputValue: '',\n  };\n\n  onChangeText = (value) => {\n    this.setState({ value });\n  };\n\n  render() {\n    return (\n      <Input\n        value={this.state.inputValue}\n        placeholder='Place your Text'\n        style={styles.input}\n        textStyle={styles.inputText}\n        labelStyle={styles.inputLabel}\n        captionTextStyle={styles.inputCaption}\n        onChangeText={this.onChangeText}\n        label='LABEL'\n        caption='CAPTION'\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  input: { borderRadius: 24 },\n  inputText: { color: '#3366FF' },\n  inputLabel: { color: '#3366FF' },\n  inputCaption: { color: '#3366FF' },\n});\n",
    "path": "src/playground/src/components/showcases/input/inputInlineStyling.component.tsx",
    "name": "InputInlineStyling"
  },
  {
    "code": "import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Input,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport class InputSimpleUsageShowcase extends React.Component {\n\n  state = {\n    value: '',\n  };\n\n  onChangeText = (value) => {\n    this.setState({ value });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Input\n          style={styles.input}\n          value={this.state.value}\n          onChangeText={this.onChangeText}\n          placeholder='Active'\n        />\n        <Input\n          style={styles.input}\n          disabled={true}\n          placeholder='Disabled'\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    paddingVertical: 8,\n    paddingHorizontal: 4,\n  },\n  input: {\n    flex: 1,\n    marginHorizontal: 4,\n  },\n});\n\n",
    "path": "src/playground/src/components/showcases/input/inputSimpleUsage.component.tsx",
    "name": "InputSimpleUsage"
  },
  {
    "code": "import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Input,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport class InputSizeShowcase extends React.Component {\n\n  state = {\n    smallValue: '',\n    mediumValue: '',\n    largeValue: '',\n  };\n\n  onSmallTextChange = (smallValue) => {\n    this.setState({ smallValue });\n  };\n\n  onMediumTextChange = (mediumValue) => {\n    this.setState({ mediumValue });\n  };\n\n  onLargeTextChange = (largeValue) => {\n    this.setState({ largeValue });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Input\n          style={styles.input}\n          size='small'\n          placeholder='Small'\n          value={this.state.smallValue}\n          onChangeText={this.onSmallTextChange}\n        />\n        <Input\n          style={styles.input}\n          size='medium'\n          placeholder='Medium'\n          value={this.state.mediumValue}\n          onChangeText={this.onMediumTextChange}\n        />\n        <Input\n          style={styles.input}\n          size='large'\n          placeholder='Large'\n          value={this.state.largeValue}\n          onChangeText={this.onLargeTextChange}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingVertical: 4,\n    paddingHorizontal: 8,\n  },\n  input: {\n    marginVertical: 4,\n  },\n});\n\n",
    "path": "src/playground/src/components/showcases/input/inputSize.component.tsx",
    "name": "InputSize"
  },
  {
    "code": "import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Input,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport class InputStatusShowcase extends React.Component {\n\n  state = {\n    primaryValue: '',\n    successValue: '',\n    infoValue: '',\n    warningValue: '',\n    dangerValue: '',\n  };\n\n  onPrimaryTextChange = (primaryValue) => {\n    this.setState({ primaryValue });\n  };\n\n  onSuccessTextChange = (successValue) => {\n    this.setState({ successValue });\n  };\n\n  onInfoTextChange = (infoValue) => {\n    this.setState({ infoValue });\n  };\n\n  onWarningTextChange = (warningValue) => {\n    this.setState({ warningValue });\n  };\n\n  onDangerTextChange = (dangerValue) => {\n    this.setState({ dangerValue });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Input\n          style={styles.input}\n          status='primary'\n          placeholder='Primary'\n          value={this.state.primaryValue}\n          onChangeText={this.onPrimaryTextChange}\n        />\n        <Input\n          style={styles.input}\n          status='success'\n          placeholder='Success'\n          value={this.state.successValue}\n          onChangeText={this.onSuccessTextChange}\n        />\n        <Input\n          style={styles.input}\n          status='info'\n          placeholder='Info'\n          value={this.state.infoValue}\n          onChangeText={this.onInfoTextChange}\n        />\n        <Input\n          style={styles.input}\n          status='warning'\n          placeholder='Warning'\n          value={this.state.warningValue}\n          onChangeText={this.onWarningTextChange}\n        />\n        <Input\n          style={styles.input}\n          status='danger'\n          placeholder='Danger'\n          value={this.state.dangerValue}\n          onChangeText={this.onDangerTextChange}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingVertical: 4,\n    paddingHorizontal: 8,\n  },\n  input: {\n    marginVertical: 4,\n  },\n});\n\n",
    "path": "src/playground/src/components/showcases/input/inputStatus.component.tsx",
    "name": "InputStatus"
  },
  {
    "code": "import React from 'react';\nimport { Input } from 'react-native-ui-kitten';\n\nexport class InputWithCaptionShowcase extends React.Component {\n\n  state = {\n    value: '',\n  };\n\n  onChangeText = (value) => {\n    this.setState({ value });\n  };\n\n  isValidValue = () => {\n    return this.state.value.length >= 6;\n  };\n\n  render() {\n    const isValidInputValue = this.isValidValue();\n    return (\n      <Input\n        placeholder='Place your Text'\n        status={isValidInputValue ? 'success' : 'danger'}\n        caption={isValidInputValue ? '' : 'Invalid value'}\n        value={this.state.value}\n        onChangeText={this.onChangeText}\n      />\n    );\n  }\n}\n",
    "path": "src/playground/src/components/showcases/input/inputWithCaption.component.tsx",
    "name": "InputWithCaption"
  },
  {
    "code": "/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport { Icon, Input } from 'react-native-ui-kitten';\nimport { Image } from 'react-native';\n\nexport class InputWithExternalSourceIconShowcase extends React.Component {\n\n  state = {\n    value: '',\n  };\n\n  onChangeText = (value) => {\n    this.setState({ value });\n  };\n\n  renderIcon = (style) => {\n    return (\n      <Image\n        style={style}\n        source={{uri: 'https://akveo.github.io/eva-icons/fill/png/128/eye-off.png'}}\n      />\n    );\n  };\n\n  render() {\n    return (\n      <Input\n        value={this.state.value}\n        placeholder='Place your Text'\n        icon={this.renderIcon}\n        secureTextEntry={true}\n        onChangeText={this.onChangeText}\n      />\n    );\n  }\n}\n",
    "path": "src/playground/src/components/showcases/input/inputWithExternalSourceIcon.component.tsx",
    "name": "InputWithExternalSourceIcon"
  },
  {
    "code": "/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport { Icon, Input } from 'react-native-ui-kitten';\n\nexport class InputWithIconShowcase extends React.Component {\n\n  state = {\n    value: '',\n    secureTextEntry: true,\n  };\n\n  onChangeText = (value) => {\n    this.setState({ value });\n  };\n\n  onIconPress = () => {\n    const secureTextEntry = !this.state.secureTextEntry;\n    this.setState({ secureTextEntry });\n  };\n\n  renderIcon = (style) => {\n    const iconName = this.state.secureTextEntry ? 'eye-off' : 'eye';\n    return (\n      <Icon {...style} name={iconName}/>\n    );\n  };\n\n  render() {\n    return (\n      <Input\n        value={this.state.value}\n        placeholder='Place your Text'\n        icon={this.renderIcon}\n        secureTextEntry={this.state.secureTextEntry}\n        onIconPress={this.onIconPress}\n        onChangeText={this.onChangeText}\n      />\n    );\n  }\n}\n",
    "path": "src/playground/src/components/showcases/input/inputWithIcon.component.tsx",
    "name": "InputWithIcon"
  },
  {
    "code": "import React from 'react';\nimport { Input } from 'react-native-ui-kitten';\n\nexport class InputWithLabelShowcase extends React.Component {\n\n  state = {\n    value: '',\n  };\n\n  onChangeText = (value) => {\n    this.setState({ value });\n  };\n\n  render() {\n    return (\n      <Input\n        label='LABEL'\n        placeholder='Place your Text'\n        value={this.state.value}\n        onChangeText={this.onChangeText}\n      />\n    );\n  }\n}\n",
    "path": "src/playground/src/components/showcases/input/inputWithLabel.component.tsx",
    "name": "InputWithLabel"
  },
  {
    "code": "import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Text,\n} from 'react-native-ui-kitten';\n\nexport const LayoutInlineStylingShowcase = () => {\n\n  return (\n    <Layout style={[styles.container, styles.additionalContainerStyle]}>\n      <Text>Welcome To React Native UI Kitten!</Text>\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n  additionalContainerStyle: {\n    borderColor: 'red',\n    borderWidth: 2,\n    borderRadius: 8,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n",
    "path": "src/playground/src/components/showcases/layout/layoutInlineStyling.component.tsx",
    "name": "LayoutInlineStyling"
  },
  {
    "code": "import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Text,\n} from 'react-native-ui-kitten';\n\nexport const LayoutLevelShowcase = () => {\n\n  return (\n    <Layout style={styles.container} level='4'>\n      <Layout style={styles.container} level='3'>\n        <Layout style={styles.container} level='2'>\n          <Layout style={[styles.container, styles.contentContainer]}>\n            <Text>Welcome To React Native UI Kitten!</Text>\n          </Layout>\n        </Layout>\n      </Layout>\n    </Layout>\n\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n  contentContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n",
    "path": "src/playground/src/components/showcases/layout/layoutLevel.component.tsx",
    "name": "LayoutLevel"
  },
  {
    "code": "import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Text,\n} from 'react-native-ui-kitten';\n\nexport const LayoutSimpleUsageShowcase = () => {\n\n  return (\n    <Layout style={styles.container}>\n      <Text>Welcome To React Native UI Kitten!</Text>\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n});\n",
    "path": "src/playground/src/components/showcases/layout/layoutSimpleUsage.component.tsx",
    "name": "LayoutSimpleUsage"
  },
  {
    "code": "/**\n * This example demonstrates how simply could be composed List Item\n * with classic layouts like icon at the left, forward button at the right, etc.\n *\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  Icon,\n  List,\n  ListItem,\n} from 'react-native-ui-kitten';\n\nconst SAMPLE_DATA = {\n  title: 'Title for Item',\n  description: 'Description for Item',\n};\n\nexport const ListCompositeItemShowcase = () => {\n\n  const data = new Array(8).fill(SAMPLE_DATA);\n\n  const renderItemAccessory = (style) => (\n    <Button style={style}>FOLLOW</Button>\n  );\n\n  const renderItemIcon = (style) => (\n    <Icon {...style} name='person' />\n  );\n\n  const renderItem = ({ item, index }) => (\n    <ListItem\n      title={`${item.title} ${index + 1}`}\n      description={`${item.description} ${index + 1}`}\n      icon={renderItemIcon}\n      accessory={renderItemAccessory}\n    />\n  );\n\n  return (\n    <List\n      style={styles.list}\n      data={data}\n      renderItem={renderItem}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  list: {\n    height: 150,\n  },\n});\n",
    "path": "src/playground/src/components/showcases/list/listCompositeItem.component.tsx",
    "name": "ListCompositeItem"
  },
  {
    "code": "import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  List,\n  ListItem,\n} from 'react-native-ui-kitten';\n\nconst SAMPLE_DATA = {\n  title: 'Title for Item',\n  description: 'Description for Item',\n};\n\nexport const ListInlineStylingShowcase = (props) => {\n\n  const data = new Array(8).fill(SAMPLE_DATA);\n\n  const renderItem = ({ item, index }) => (\n    <ListItem\n      title={`${item.title} ${index + 1}`}\n      description={`${item.description} ${index + 1}`}\n    />\n  );\n\n  return (\n    <List\n      contentContainerStyle={styles.contentContainer}\n      data={data}\n      renderItem={renderItem}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  contentContainer: { paddingHorizontal: 8 },\n});\n",
    "path": "src/playground/src/components/showcases/list/listInlineStyling.component.tsx",
    "name": "ListInlineStyling"
  },
  {
    "code": "import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { ListItem } from 'react-native-ui-kitten';\n\nexport const ListItemInlineStylingShowcase = (props) => (\n  <ListItem\n    style={styles.listItem}\n    titleStyle={styles.listItemTitle}\n    descriptionStyle={styles.listItemDescription}\n    title='Title'\n    description='Description'\n  />\n);\n\nconst styles = StyleSheet.create({\n  listItem: { borderRadius: 8 },\n  listItemTitle: { color: '#3366ff' },\n  listItemDescription: { color: '#2E3A59' },\n});\n",
    "path": "src/playground/src/components/showcases/list/listItemInlineStyling.component.tsx",
    "name": "ListItemInlineStyling"
  },
  {
    "code": "import React from 'react';\nimport { ListItem } from 'react-native-ui-kitten';\n\nexport const ListItemSimpleUsageShowcase = (props) => (\n  <ListItem title='Title' />\n);\n",
    "path": "src/playground/src/components/showcases/list/listItemSimpleUsage.component.tsx",
    "name": "ListItemSimpleUsage"
  },
  {
    "code": "import React from 'react';\nimport {\n  CheckBox,\n  ListItem,\n} from 'react-native-ui-kitten';\n\nexport class ListItemWithAccessoryShowcase extends React.Component {\n\n  state = {\n    checked: false,\n  };\n\n  onCheckBoxCheckedChange = (index) => {\n    const checked = !this.state.checked;\n    this.setState({ checked });\n  };\n\n  renderAccessory = (style, index) => (\n    <CheckBox\n      style={style}\n      checked={this.state.checked}\n      onChange={() => this.onCheckBoxCheckedChange(index)}\n    />\n  );\n\n  render() {\n    return (\n      <ListItem\n        title='Title'\n        description='Description'\n        accessory={this.renderAccessory}\n      />\n    );\n  }\n}\n",
    "path": "src/playground/src/components/showcases/list/listItemWithAccessory.component.tsx",
    "name": "ListItemWithAccessory"
  },
  {
    "code": "import React from 'react';\nimport { Image } from 'react-native';\nimport { ListItem } from 'react-native-ui-kitten';\n\nconst RemoteStarIcon = (style) => (\n  <Image\n    style={style}\n    source={{ uri: 'https://akveo.github.io/eva-icons/fill/png/128/star.png' }}\n  />\n);\n\nexport const ListItemWithExternalIconShowcase = (props) => (\n  <ListItem\n    title='Title'\n    description='Description'\n    icon={RemoteStarIcon}\n  />\n);\n",
    "path": "src/playground/src/components/showcases/list/listItemWithExternalIcon.component.tsx",
    "name": "ListItemWithExternalIcon"
  },
  {
    "code": "/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport {\n  Icon,\n  ListItem,\n} from 'react-native-ui-kitten';\n\nconst StarIcon = (style) => (\n  <Icon {...style} name='star'/>\n);\n\nexport const ListItemWithIconShowcase = (props) => (\n  <ListItem\n    title='Title'\n    description='Description'\n    icon={StarIcon}\n  />\n);\n",
    "path": "src/playground/src/components/showcases/list/listItemWithIcon.component.tsx",
    "name": "ListItemWithIcon"
  },
  {
    "code": "import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  List,\n  ListItem,\n} from 'react-native-ui-kitten';\n\nconst SAMPLE_DATA = {\n  title: 'Item',\n};\n\nexport const ListSimpleUsageShowcase = (props) => {\n\n  const data = new Array(8).fill(SAMPLE_DATA);\n\n  const renderItem = ({ item, index }) => (\n    <ListItem title={`${item.title} ${index + 1}`} />\n  );\n\n  return (\n    <List\n      style={styles.list}\n      data={data}\n      renderItem={renderItem}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  list: {\n    height: 150,\n  },\n});\n",
    "path": "src/playground/src/components/showcases/list/listSimpleUsage.component.tsx",
    "name": "ListSimpleUsage"
  },
  {
    "code": "import React from 'react';\nimport { Menu } from 'react-native-ui-kitten';\n\nexport class MenuAppearanceShowcase extends React.Component {\n\n  state = {\n    selectedIndex: null,\n  };\n\n  data = [\n    { title: 'Item 1' },\n    { title: 'Item 2' },\n    { title: 'Item 3' },\n    { title: 'Item 4' },\n  ];\n\n  onSelect = (selectedIndex) => {\n    this.setState({ selectedIndex });\n  };\n\n  render() {\n    return (\n      <Menu\n        appearance='noDivider'\n        data={this.data}\n        selectedIndex={this.state.selectedIndex}\n        onSelect={this.onSelect}\n      />\n    );\n  }\n}\n",
    "path": "src/playground/src/components/showcases/menu/menuAppearance.component.tsx",
    "name": "MenuAppearance"
  },
  {
    "code": "import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Menu } from 'react-native-ui-kitten';\n\nexport class MenuInlineStylingShowcase extends React.Component {\n\n  state = {\n    selectedIndex: null,\n  };\n\n  data = [\n    {\n      title: 'Item 1',\n      titleStyle: styles.menuItemTitle,\n    },\n    { title: 'Item 2' },\n    {\n      title: 'Item 3',\n      titleStyle: styles.menuItemTitle,\n    },\n    { title: 'Item 4' },\n  ];\n\n  onSelect = (selectedIndex) => {\n    this.setState({ selectedIndex });\n  };\n\n  render() {\n    return (\n      <Menu\n        data={this.data}\n        selectedIndex={this.state.selectedIndex}\n        onSelect={this.onSelect}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  menuItemTitle: {\n    color: 'black',\n    fontSize: 18,\n  },\n});\n",
    "path": "src/playground/src/components/showcases/menu/menuInlineStyling.component.tsx",
    "name": "MenuInlineStyling"
  },
  {
    "code": "import React from 'react';\nimport { Menu } from 'react-native-ui-kitten';\n\nexport class MenuSimpleUsageShowcase extends React.Component {\n\n  state = {\n    selectedIndex: null,\n  };\n\n  data = [\n    { title: 'Item 1' },\n    { title: 'Item 2', disabled: true },\n    { title: 'Item 3' },\n    { title: 'Item 4' },\n  ];\n\n  onSelect = (selectedIndex) => {\n    this.setState({ selectedIndex });\n  };\n\n  render() {\n    return (\n      <Menu\n        data={this.data}\n        selectedIndex={this.state.selectedIndex}\n        onSelect={this.onSelect}\n      />\n    );\n  }\n}\n",
    "path": "src/playground/src/components/showcases/menu/menuSimpleUsage.component.tsx",
    "name": "MenuSimpleUsage"
  },
  {
    "code": "/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport {\n  Icon,\n  Menu,\n} from 'react-native-ui-kitten';\n\nconst StarIcon = (style) => (\n  <Icon {...style} name='star'/>\n);\n\nexport class MenuWithIconsShowcase extends React.Component {\n\n  state = {\n    selectedIndex: null,\n  };\n\n  data = [\n    {\n      title: 'Item 1',\n      icon: StarIcon,\n    },\n    {\n      title: 'Item 2',\n      icon: StarIcon,\n    },\n    {\n      title: 'Item 3',\n      icon: StarIcon,\n    },\n    {\n      title: 'Item 4',\n      icon: StarIcon,\n    },\n  ];\n\n  onSelect = (selectedIndex) => {\n    this.setState({ selectedIndex });\n  };\n\n  render() {\n    return (\n      <Menu\n        data={this.data}\n        selectedIndex={this.state.selectedIndex}\n        onSelect={this.onSelect}\n      />\n    );\n  }\n}\n",
    "path": "src/playground/src/components/showcases/menu/menuWithIcons.component.tsx",
    "name": "MenuWithIcons"
  },
  {
    "code": "import React from 'react';\nimport { Menu } from 'react-native-ui-kitten';\n\nexport class MenuWithSubMenuShowcase extends React.Component {\n\n  state = {\n    selectedIndex: null,\n  };\n\n  data = [\n    { title: 'Item 1' },\n    {\n      title: 'Item 2',\n      subItems: [\n        { title: 'Sub Item 1' },\n        { title: 'Sub Item 2' },\n      ],\n    },\n    { title: 'Item 3' },\n    { title: 'Item 4' },\n  ];\n\n  onSelect = (selectedIndex) => {\n    this.setState({ selectedIndex });\n  };\n\n  render() {\n    return (\n      <Menu\n        data={this.data}\n        selectedIndex={this.state.selectedIndex}\n        onSelect={this.onSelect}\n      />\n    );\n  }\n}\n",
    "path": "src/playground/src/components/showcases/menu/menuWithSubMenu.component.tsx",
    "name": "MenuWithSubMenu"
  },
  {
    "code": "import React from 'react';\nimport {\n  Image,\n  StyleSheet,\n} from 'react-native';\nimport {\n  Button,\n  Layout,\n  OverflowMenu,\n} from 'react-native-ui-kitten';\n\nconst RemoteStarIcon = (style) => (\n  <Image\n    style={style}\n    source={{ uri: 'https://akveo.github.io/eva-icons/fill/png/128/star.png' }}\n  />\n);\n\nexport class OverflowMenuExternalSourceIconsShowcase extends React.Component {\n\n  state = {\n    menuVisible: false,\n    selectedIndex: null,\n  };\n\n  data = [\n    { title: 'Menu Item 1', icon: RemoteStarIcon },\n    { title: 'Menu Item 2', icon: RemoteStarIcon },\n    { title: 'Menu Item 3', icon: RemoteStarIcon },\n    { title: 'Menu Item 4', icon: RemoteStarIcon },\n  ];\n\n  onItemSelect = (selectedIndex) => {\n    this.setState({ selectedIndex }, this.toggleMenu);\n  };\n\n  toggleMenu = () => {\n    const menuVisible = !this.state.menuVisible;\n    this.setState({ menuVisible });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <OverflowMenu\n          data={this.data}\n          visible={this.state.menuVisible}\n          selectedIndex={this.state.selectedIndex}\n          onSelect={this.onItemSelect}\n          onBackdropPress={this.toggleMenu}>\n          <Button onPress={this.toggleMenu}>\n            TOGGLE MENU\n          </Button>\n        </OverflowMenu>\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 256,\n  },\n});\n",
    "path": "src/playground/src/components/showcases/overflowMenu/overflowMenuExternalSourceIcons.component.tsx",
    "name": "OverflowMenuExternalSourceIcons"
  },
  {
    "code": "import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  Layout,\n  OverflowMenu,\n} from 'react-native-ui-kitten';\n\nexport class OverflowMenuSimpleUsageShowcase extends React.Component {\n\n  state = {\n    menuVisible: false,\n    selectedIndex: null,\n  };\n\n  data = [\n    { title: 'Menu Item 1' },\n    { title: 'Menu Item 2' },\n    { title: 'Menu Item 3' },\n    { title: 'Menu Item 4' },\n  ];\n\n  onItemSelect = (selectedIndex) => {\n    this.setState({ selectedIndex }, this.toggleMenu);\n  };\n\n  toggleMenu = () => {\n    const menuVisible = !this.state.menuVisible;\n    this.setState({ menuVisible });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <OverflowMenu\n          data={this.data}\n          visible={this.state.menuVisible}\n          selectedIndex={this.state.selectedIndex}\n          onSelect={this.onItemSelect}\n          onBackdropPress={this.toggleMenu}>\n          <Button onPress={this.toggleMenu}>\n            TOGGLE MENU\n          </Button>\n        </OverflowMenu>\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 256,\n  },\n});\n\n",
    "path": "src/playground/src/components/showcases/overflowMenu/overflowMenuSimpleUsage.component.tsx",
    "name": "OverflowMenuSimpleUsage"
  },
  {
    "code": "import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  Layout,\n  OverflowMenu,\n} from 'react-native-ui-kitten';\n\nexport class OverflowMenuWithDisabledItemsShowcase extends React.Component {\n\n  state = {\n    menuVisible: false,\n    selectedIndex: null,\n  };\n\n  data = [\n    { title: 'Menu Item 1' },\n    { title: 'Menu Item 2', disabled: true },\n    { title: 'Menu Item 3' },\n    { title: 'Menu Item 4' },\n  ];\n\n  onItemSelect = (selectedIndex) => {\n    this.setState({ selectedIndex }, this.toggleMenu);\n  };\n\n  toggleMenu = () => {\n    const menuVisible = !this.state.menuVisible;\n    this.setState({ menuVisible });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <OverflowMenu\n          data={this.data}\n          visible={this.state.menuVisible}\n          selectedIndex={this.state.selectedIndex}\n          onSelect={this.onItemSelect}\n          onBackdropPress={this.toggleMenu}>\n          <Button onPress={this.toggleMenu}>\n            TOGGLE MENU\n          </Button>\n        </OverflowMenu>\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 256,\n  },\n});\n",
    "path": "src/playground/src/components/showcases/overflowMenu/overflowMenuWithDisabledItems.component.tsx",
    "name": "OverflowMenuWithDisabledItems"
  },
  {
    "code": "/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  Icon,\n  Layout,\n  OverflowMenu,\n} from 'react-native-ui-kitten';\n\nconst StarIcon = (style) => (\n  <Icon {...style} name='star'/>\n);\n\nexport class OverflowMenuWithIconsShowcase extends React.Component {\n\n  state = {\n    menuVisible: false,\n    selectedIndex: null,\n  };\n\n  data = [\n    { title: 'Menu Item 1', icon: StarIcon },\n    { title: 'Menu Item 2', icon: StarIcon },\n    { title: 'Menu Item 3', icon: StarIcon },\n    { title: 'Menu Item 4', icon: StarIcon },\n  ];\n\n  onItemSelect = (selectedIndex) => {\n    this.setState({ selectedIndex }, this.toggleMenu);\n  };\n\n  toggleMenu = () => {\n    const menuVisible = !this.state.menuVisible;\n    this.setState({ menuVisible });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <OverflowMenu\n          data={this.data}\n          visible={this.state.menuVisible}\n          selectedIndex={this.state.selectedIndex}\n          onSelect={this.onItemSelect}\n          onBackdropPress={this.toggleMenu}>\n          <Button onPress={this.toggleMenu}>\n            TOGGLE MENU\n          </Button>\n        </OverflowMenu>\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 256,\n  },\n});\n",
    "path": "src/playground/src/components/showcases/overflowMenu/overflowMenuWithIcons.component.tsx",
    "name": "OverflowMenuWithIcons"
  },
  {
    "code": "import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  Layout,\n  OverflowMenu,\n} from 'react-native-ui-kitten';\n\nexport class OverflowMenuWithoutDividerShowcase extends React.Component {\n\n  state = {\n    menuVisible: false,\n    selectedIndex: null,\n  };\n\n  data = [\n    { title: 'Menu Item 1' },\n    { title: 'Menu Item 2' },\n    { title: 'Menu Item 3' },\n    { title: 'Menu Item 4' },\n  ];\n\n  onItemSelect = (selectedIndex) => {\n    this.setState({ selectedIndex }, this.toggleMenu);\n  };\n\n  toggleMenu = () => {\n    const menuVisible = !this.state.menuVisible;\n    this.setState({ menuVisible });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <OverflowMenu\n          appearance='noDivider'\n          data={this.data}\n          visible={this.state.menuVisible}\n          selectedIndex={this.state.selectedIndex}\n          onSelect={this.onItemSelect}\n          onBackdropPress={this.toggleMenu}>\n          <Button onPress={this.toggleMenu}>\n            TOGGLE MENU\n          </Button>\n        </OverflowMenu>\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 256,\n  },\n});\n",
    "path": "src/playground/src/components/showcases/overflowMenu/overflowMenuWithoutDivider.component.tsx",
    "name": "OverflowMenuWithoutDivider"
  },
  {
    "code": "import React from 'react';\nimport {\n  View,\n  StyleSheet,\n} from 'react-native';\nimport {\n  Popover,\n  Button,\n  Text,\n  Layout,\n  Select,\n} from 'react-native-ui-kitten';\n\nexport class PopoverPlacementShowcase extends React.Component {\n\n  state = {\n    visible: false,\n    placement: { text: 'top' },\n  };\n\n  placements = [\n    { text: 'top' },\n    { text: 'top start' },\n    { text: 'top end' },\n    { text: 'left' },\n    { text: 'left start' },\n    { text: 'left end' },\n    { text: 'right' },\n    { text: 'right start' },\n    { text: 'right end' },\n    { text: 'bottom' },\n    { text: 'bottom start' },\n    { text: 'bottom end' },\n  ];\n\n  setVisible = () => {\n    const visible = !this.state.visible;\n\n    this.setState({ visible });\n  };\n\n  setPlacement = (placement) => {\n    this.setState({ placement });\n  };\n\n  renderPopoverContent = () => (\n    <Layout style={styles.popoverContent}>\n      <Text>Hi! This is popover.</Text>\n    </Layout>\n  );\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <Select\n          label='Select Popover Placement'\n          data={this.placements}\n          selectedOption={this.state.placement}\n          onSelect={this.setPlacement}\n        />\n        <View style={styles.subContainer}>\n          <Popover\n            visible={this.state.visible}\n            placement={this.state.placement.text}\n            content={this.renderPopoverContent()}\n            onBackdropPress={this.setVisible}>\n            <Button\n              size='giant'\n              onPress={this.setVisible}>\n              SHOW POPOVER\n            </Button>\n          </Popover>\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n  subContainer: {\n    height: 400,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  button: {\n    width: 150,\n  },\n  popoverContent: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  select: {\n    position: 'absolute',\n  },\n});\n",
    "path": "src/playground/src/components/showcases/popover/popoverPlacement.component.tsx",
    "name": "PopoverPlacement"
  },
  {
    "code": "import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  Layout,\n  Popover,\n  Text,\n} from 'react-native-ui-kitten';\n\nexport class PopoverSimpleUsageShowcase extends React.Component {\n\n  state = {\n    popoverVisible: false,\n  };\n\n  onToggleButtonPress = () => {\n    const popoverVisible = !this.state.popoverVisible;\n    this.setState({ popoverVisible });\n  };\n\n  renderPopoverContent = () => (\n    <Layout style={styles.popoverContent}>\n      <Text>Hi! This is popover.</Text>\n    </Layout>\n  );\n\n  render() {\n    return (\n      <Popover\n        visible={this.state.popoverVisible}\n        content={this.renderPopoverContent()}\n        onBackdropPress={this.onToggleButtonPress}>\n        <Button onPress={this.onToggleButtonPress}>\n          TOGGLE POPOVER\n        </Button>\n      </Popover>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  popoverContent: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n",
    "path": "src/playground/src/components/showcases/popover/popoverSimpleUsage.component.tsx",
    "name": "PopoverSimpleUsage"
  },
  {
    "code": "import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Radio } from 'react-native-ui-kitten';\n\nexport class RadioInlineStylingShowcase extends React.Component {\n\n  state = {\n    checked: false,\n  };\n\n  onChange = (checked) => {\n    this.setState({ checked });\n  };\n\n  render() {\n    return (\n      <Radio\n        style={styles.radio}\n        textStyle={styles.radioText}\n        checked={this.state.checked}\n        text='Place your text'\n        onChange={this.onChange}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  radio: {\n    width: 32,\n    height: 32,\n  },\n  radioText: { color: '#3366FF' },\n});\n",
    "path": "src/playground/src/components/showcases/radio/radioInlineStyling.component.tsx",
    "name": "RadioInlineStyling"
  },
  {
    "code": "import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Radio,\n} from 'react-native-ui-kitten';\n\nexport class RadioSimpleUsageShowcase extends React.Component {\n\n  state = {\n    checked: false,\n  };\n\n  onChange = (checked) => {\n    this.setState({ checked });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Radio\n          style={styles.radio}\n          text='Active'\n          checked={this.state.checked}\n          onChange={this.onChange}\n        />\n        <Radio\n          style={styles.radio}\n          text='Disabled'\n          disabled={true}\n        />\n        <Radio\n          style={styles.radio}\n          text='Checked Disabled'\n          checked={true}\n          disabled={true}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    paddingVertical: 4,\n    paddingHorizontal: 4,\n  },\n  radio: {\n    marginVertical: 4,\n    marginHorizontal: 4,\n  },\n});\n\n",
    "path": "src/playground/src/components/showcases/radio/radioSimpleUsage.component.tsx",
    "name": "RadioSimpleUsage"
  },
  {
    "code": "import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Radio,\n} from 'react-native-ui-kitten';\n\nexport class RadioStatusShowcase extends React.Component {\n\n  state = {\n    primaryChecked: false,\n    successChecked: false,\n    infoChecked: false,\n    warningChecked: false,\n    dangerChecked: false,\n    basicChecked: false,\n  };\n\n  onPrimaryChange = (primaryChecked) => {\n    this.setState({ primaryChecked });\n  };\n\n  onSuccessChange = (successChecked) => {\n    this.setState({ successChecked });\n  };\n\n  onInfoChange = (infoChecked) => {\n    this.setState({ infoChecked });\n  };\n\n  onWarningChange = (warningChecked) => {\n    this.setState({ warningChecked });\n  };\n\n  onDangerChange = (dangerChecked) => {\n    this.setState({ dangerChecked });\n  };\n\n  onBasicChange = (basicChecked) => {\n    this.setState({ basicChecked });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Radio\n          style={styles.radio}\n          status='primary'\n          text='Primary'\n          checked={this.state.primaryChecked}\n          onChange={this.onPrimaryChange}\n        />\n        <Radio\n          style={styles.radio}\n          status='success'\n          text='Success'\n          checked={this.state.successChecked}\n          onChange={this.onSuccessChange}\n        />\n        <Radio\n          style={styles.radio}\n          status='info'\n          text='Info'\n          checked={this.state.infoChecked}\n          onChange={this.onInfoChange}\n        />\n        <Radio\n          style={styles.radio}\n          status='warning'\n          text='Warning'\n          checked={this.state.warningChecked}\n          onChange={this.onWarningChange}\n        />\n        <Radio\n          style={styles.radio}\n          status='danger'\n          text='Danger'\n          checked={this.state.dangerChecked}\n          onChange={this.onDangerChange}\n        />\n        <Radio\n          style={styles.radio}\n          status='basic'\n          text='Basic'\n          checked={this.state.basicChecked}\n          onChange={this.onBasicChange}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    paddingVertical: 4,\n    paddingHorizontal: 4,\n  },\n  radio: {\n    marginVertical: 4,\n    marginHorizontal: 4,\n  },\n});\n",
    "path": "src/playground/src/components/showcases/radio/radioStatus.component.tsx",
    "name": "RadioStatus"
  },
  {
    "code": "import React from 'react';\nimport { Radio } from 'react-native-ui-kitten';\n\nexport class RadioWithTextShowcase extends React.Component {\n\n  state = {\n    checked: false,\n  };\n\n  onChange = (checked) => {\n    this.setState({ checked });\n  };\n\n  render() {\n    return (\n      <Radio\n        text='Place your Text'\n        checked={this.state.checked}\n        onChange={this.onChange}\n      />\n    );\n  }\n}\n",
    "path": "src/playground/src/components/showcases/radio/radioWithText.component.tsx",
    "name": "RadioWithText"
  },
  {
    "code": "import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Radio,\n  RadioGroup,\n} from 'react-native-ui-kitten';\n\nexport class RadioGroupSimpleUsageShowcase extends React.Component {\n\n  state = {\n    selectedIndex: 0,\n  };\n\n  onChange = (selectedIndex) => {\n    this.setState({ selectedIndex });\n  };\n\n  render() {\n    return (\n      <RadioGroup\n        style={styles.container}\n        selectedIndex={this.state.selectedIndex}\n        onChange={this.onChange}>\n        <Radio style={styles.radio} text='Option 1' />\n        <Radio style={styles.radio} text='Option 2' />\n        <Radio style={styles.radio} text='Option 3' />\n      </RadioGroup>\n    );\n  }\n}\n\nexport const styles = StyleSheet.create({\n  container: {\n    paddingVertical: 4,\n    paddingHorizontal: 8,\n  },\n  radio: {\n    marginVertical: 4,\n  },\n});\n",
    "path": "src/playground/src/components/showcases/radioGroup/radioGroupSimpleUsage.component.tsx",
    "name": "RadioGroupSimpleUsage"
  },
  {
    "code": "/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Select,\n  Icon,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport class SelectCustomIconShowcase extends React.Component {\n\n  data = [\n    { text: 'Option 1' },\n    { text: 'Option 2' },\n    { text: 'Option 3' },\n  ];\n\n  state = {\n    selectedOption: null,\n  };\n\n  onSelect = (selectedOption) => {\n    this.setState({ selectedOption });\n  };\n\n  renderIcon = (style, visible) => {\n    const iconName = visible ? 'arrow-ios-upward' : 'arrow-ios-downward';\n    return (\n      <Icon {...style} name={iconName}/>\n    );\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Select\n          data={this.data}\n          selectedOption={this.state.selectedOption}\n          icon={this.renderIcon}\n          onSelect={this.onSelect}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    height: 230,\n    padding: 16,\n  },\n});\n",
    "path": "src/playground/src/components/showcases/select/selectCustomIcon.component.tsx",
    "name": "SelectCustomIcon"
  },
  {
    "code": "import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Select,\n} from 'react-native-ui-kitten';\n\nexport class SelectInlineStylingShowcase extends React.Component {\n\n  private data = [\n    { text: 'Option 1' },\n    { text: 'Option 2', textStyle: styles.option2 },\n    { text: 'Option 3' },\n  ];\n\n  state = {\n    selectedOption: null,\n  };\n\n  onSelect = (selectedOption) => {\n    this.setState({ selectedOption });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Select\n          labelStyle={styles.labelStyle}\n          placeholderStyle={styles.placeholderStyle}\n          controlStyle={styles.controlStyle}\n          data={this.data}\n          selectedOption={this.state.selectedOption}\n          onSelect={this.onSelect}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    height: 230,\n    padding: 16,\n  },\n  labelStyle: {\n    color: 'gray',\n  },\n  placeholderStyle: {\n    color: 'gray',\n  },\n  controlStyle: {\n    borderRadius: 8,\n  },\n  option2: {\n    color: 'red',\n    fontSize: 18,\n  },\n});\n",
    "path": "src/playground/src/components/showcases/select/selectInlineStyling.component.tsx",
    "name": "SelectInlineStyling"
  },
  {
    "code": "/**\n * IMPORTANT: Do not forget to set keyExtractor property in such case!\n */\n\nimport React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Select,\n} from 'react-native-ui-kitten';\n\nexport class SelectMultiPreselectedInlineShowcase extends React.Component {\n\n  data = [\n    { text: 'Option 1' },\n    { text: 'Option 2' },\n    { text: 'Option 3' },\n  ];\n\n  state = {\n    selectedOption: [\n      { text: 'Option 2' },\n      { text: 'Option 3' },\n    ],\n  };\n\n  onSelect = (selectedOption) => {\n    this.setState({ selectedOption });\n  };\n\n  extractKey = (item) => {\n    return item.text;\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Select\n          data={this.data}\n          multiSelect={true}\n          selectedOption={this.state.selectedOption}\n          keyExtractor={this.extractKey}\n          onSelect={this.onSelect}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    height: 230,\n    padding: 16,\n  },\n});\n\n",
    "path": "src/playground/src/components/showcases/select/selectMultiPreselectedInline.component.tsx",
    "name": "SelectMultiPreselectedInline"
  },
  {
    "code": "import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Select,\n} from 'react-native-ui-kitten';\n\nexport class SelectMultiPreselectedReferenceShowcase extends React.Component {\n\n  data = [\n    { text: 'Option 1' },\n    { text: 'Option 2' },\n    { text: 'Option 3' },\n  ];\n\n  state = {\n    selectedOption: [this.data[1], this.data[2]],\n  };\n\n  onSelect = (selectedOption) => {\n    this.setState({ selectedOption });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Select\n          data={this.data}\n          multiSelect={true}\n          selectedOption={this.state.selectedOption}\n          onSelect={this.onSelect}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    height: 230,\n    padding: 16,\n  },\n});\n\n",
    "path": "src/playground/src/components/showcases/select/selectMultiPreselectedReference.component.tsx",
    "name": "SelectMultiPreselectedReference"
  },
  {
    "code": "import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Select,\n} from 'react-native-ui-kitten';\n\nexport class SelectMultiSelectShowcase extends React.Component {\n\n  data = [\n    { text: 'Option 1' },\n    { text: 'Option 2' },\n    { text: 'Option 3' },\n  ];\n\n  state = {\n    selectedOption: [],\n  };\n\n  onSelect = (selectedOption) => {\n    this.setState({ selectedOption });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Select\n          data={this.data}\n          multiSelect={true}\n          selectedOption={this.state.selectedOption}\n          onSelect={this.onSelect}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    height: 230,\n    padding: 16,\n  },\n});\n\n",
    "path": "src/playground/src/components/showcases/select/selectMultiSelect.component.tsx",
    "name": "SelectMultiSelect"
  },
  {
    "code": "import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Select,\n} from 'react-native-ui-kitten';\n\nexport class SelectSimpleUsageShowcase extends React.Component {\n\n  data = [\n    { text: 'Option 1' },\n    { text: 'Option 2' },\n    { text: 'Option 3', disabled: true },\n    { text: 'Option 4' },\n  ];\n\n  state = {\n    selectedOption: null,\n  };\n\n  onSelect = (selectedOption) => {\n    this.setState({ selectedOption });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Select\n          style={styles.select}\n          data={this.data}\n          placeholder='Active'\n          selectedOption={this.state.selectedOption}\n          onSelect={this.onSelect}\n        />\n        <Select\n          style={styles.select}\n          data={this.data}\n          placeholder='Disabled'\n          disabled={true}\n          onSelect={this.onSelect}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    height: 230,\n    paddingVertical: 8,\n    paddingHorizontal: 4,\n  },\n  select: {\n    flex: 1,\n    marginHorizontal: 4,\n  },\n});\n",
    "path": "src/playground/src/components/showcases/select/selectSimpleUsage.component.tsx",
    "name": "SelectSimpleUsage"
  },
  {
    "code": "import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Select,\n} from 'react-native-ui-kitten';\n\nexport class SelectStatusShowcase extends React.Component {\n\n  data = [\n    { text: 'Option 1' },\n    { text: 'Option 2' },\n    { text: 'Option 3' },\n  ];\n\n  state = {\n    selectedOptionPrimary: null,\n    selectedOptionSuccess: null,\n    selectedOptionInfo: null,\n    selectedOptionDanger: null,\n    selectedOptionWarning: null,\n    selectedOptionBasic: null,\n  };\n\n  onPrimarySelect = (selectedOptionPrimary) => {\n    this.setState({ selectedOptionPrimary });\n  };\n\n  onSuccessSelect = (selectedOptionSuccess) => {\n    this.setState({ selectedOptionSuccess });\n  };\n\n  onInfoSelect = (selectedOptionInfo) => {\n    this.setState({ selectedOptionInfo });\n  };\n\n  onDangerSelect = (selectedOptionDanger) => {\n    this.setState({ selectedOptionDanger });\n  };\n\n  onWarningSelect = (selectedOptionWarning) => {\n    this.setState({ selectedOptionWarning });\n  };\n\n  onBasicSelect = (selectedOptionBasic) => {\n    this.setState({ selectedOptionBasic });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Select\n          data={this.data}\n          status='primary'\n          placeholder='Primary'\n          selectedOption={this.state.selectedOptionPrimary}\n          onSelect={this.onPrimarySelect}\n        />\n        <Select\n          data={this.data}\n          status='success'\n          placeholder='Success'\n          selectedOption={this.state.selectedOptionSuccess}\n          onSelect={this.onSuccessSelect}\n        />\n        <Select\n          data={this.data}\n          status='info'\n          placeholder='Info'\n          selectedOption={this.state.selectedOptionInfo}\n          onSelect={this.onInfoSelect}\n        />\n        <Select\n          data={this.data}\n          status='warning'\n          placeholder='Warning'\n          selectedOption={this.state.selectedOptionWarning}\n          onSelect={this.onWarningSelect}\n        />\n        <Select\n          data={this.data}\n          status='danger'\n          placeholder='Danger'\n          selectedOption={this.state.selectedOptionDanger}\n          onSelect={this.onDangerSelect}\n        />\n        <Select\n          data={this.data}\n          status='basic'\n          placeholder='Basic'\n          selectedOption={this.state.selectedOptionBasic}\n          onSelect={this.onBasicSelect}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n});\n",
    "path": "src/playground/src/components/showcases/select/selectStatus.component.tsx",
    "name": "SelectStatus"
  },
  {
    "code": "import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Select,\n} from 'react-native-ui-kitten';\n\nexport class SelectWithGroupsShowcase extends React.Component {\n\n  items = [\n    { text: 'Option 1' },\n    { text: 'Option 2' },\n    {\n      text: 'Option 3',\n      items: [\n        { text: 'SubOption 1' },\n        { text: 'SubOption 2' },\n      ],\n    },\n  ];\n\n  state = {\n    selectedOption: null,\n  };\n\n  onSelect = (selectedOption) => {\n    this.setState({ selectedOption });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Select\n          data={this.items}\n          selectedOption={this.state.selectedOption}\n          onSelect={this.onSelect}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    height: 280,\n    padding: 16,\n  },\n});\n\n",
    "path": "src/playground/src/components/showcases/select/selectWithGroups.component.tsx",
    "name": "SelectWithGroups"
  },
  {
    "code": "import React from 'react';\nimport {\n  StyleSheet,\n  View,\n} from 'react-native';\nimport {\n  List,\n  ListItem,\n  Spinner,\n} from 'react-native-ui-kitten';\n\nconst SAMPLE_DATA = {\n  title: 'Title for Item',\n};\n\nexport class SpinnerLoadingDataShowcase extends React.Component {\n\n  state = {\n    data: [],\n  };\n\n  componentDidMount() {\n    setTimeout(this.loadData, 5000);\n  }\n\n  loadData = () => {\n    const data = new Array(8).fill(SAMPLE_DATA);\n    this.setState({ data });\n  };\n\n  private renderLoading = () => (\n    <View style={styles.loading}>\n      <Spinner/>\n    </View>\n  );\n\n  renderDataItem = ({ item, index }) => (\n    <ListItem title={`${item.title} ${index + 1}`}/>\n  );\n\n  renderData = () => (\n    <List\n      data={this.state.data}\n      renderItem={this.renderDataItem}\n    />\n  );\n\n  render() {\n    const isLoaded: boolean = this.state.data.length > 0;\n    return isLoaded ? this.renderData() : this.renderLoading();\n  }\n}\n\nconst styles = StyleSheet.create({\n  loading: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n",
    "path": "src/playground/src/components/showcases/spinner/spinnerLoadingData.component.tsx",
    "name": "SpinnerLoadingData"
  },
  {
    "code": "import React from 'react';\nimport { Spinner } from 'react-native-ui-kitten';\n\nexport const SpinnerSimpleUsageShowcase = () => (\n  <Spinner/>\n);\n",
    "path": "src/playground/src/components/showcases/spinner/spinnerSimpleUsage.component.tsx",
    "name": "SpinnerSimpleUsage"
  },
  {
    "code": "import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Spinner,\n} from 'react-native-ui-kitten';\n\nexport const SpinnerSizesShowcase = () => (\n  <Layout style={styles.container}>\n    <Spinner size='tiny'/>\n    <Spinner size='small'/>\n    <Spinner size='medium'/>\n    <Spinner size='large'/>\n    <Spinner size='giant'/>\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    flexWrap: 'wrap',\n    paddingVertical: 4,\n    paddingHorizontal: 4,\n  },\n});\n",
    "path": "src/playground/src/components/showcases/spinner/spinnerSizes.component.tsx",
    "name": "SpinnerSizes"
  },
  {
    "code": "import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Spinner,\n} from 'react-native-ui-kitten';\n\nexport const SpinnerStatusesShowcase = () => (\n  <Layout style={styles.container}>\n    <Spinner status='primary'/>\n    <Spinner status='success'/>\n    <Spinner status='info'/>\n    <Spinner status='warning'/>\n    <Spinner status='danger'/>\n    <Spinner status='alternative'/>\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    flexWrap: 'wrap',\n    paddingVertical: 4,\n    paddingHorizontal: 4,\n  },\n});\n",
    "path": "src/playground/src/components/showcases/spinner/spinnerStatuses.component.tsx",
    "name": "SpinnerStatuses"
  },
  {
    "code": "import React from 'react';\nimport {\n  Tab,\n  TabBar,\n} from 'react-native-ui-kitten';\n\nexport class TabBarSimpleUsageShowcase extends React.Component {\n\n  state = {\n    selectedIndex: 0,\n  };\n\n  onBarSelect = (selectedIndex) => {\n    this.setState({ selectedIndex });\n  };\n\n  render() {\n    return (\n      <TabBar\n        selectedIndex={this.state.selectedIndex}\n        onSelect={this.onBarSelect}>\n        <Tab title='Tab 1'/>\n        <Tab title='Tab 2'/>\n        <Tab title='Tab 3'/>\n      </TabBar>\n    );\n  }\n}\n",
    "path": "src/playground/src/components/showcases/tab/tabBarSimpleUsage.component.tsx",
    "name": "TabBarSimpleUsage"
  },
  {
    "code": "import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Tab } from 'react-native-ui-kitten';\n\nexport const TabInlineStylingShowcase = (props) => (\n  <Tab\n    style={styles.tab}\n    titleStyle={styles.tabTitle}\n    title='DASHBOARD'\n  />\n);\n\nconst styles = StyleSheet.create({\n  tab: { backgroundColor: '#EDF1F7' },\n  tabTitle: { color: '#3366FF' },\n});\n",
    "path": "src/playground/src/components/showcases/tab/tabInlineStyling.component.tsx",
    "name": "TabInlineStyling"
  },
  {
    "code": "import React from 'react';\nimport { Tab } from 'react-native-ui-kitten';\n\nexport const TabSimpleUsageShowcase = (props) => (\n  <Tab title='Tab Title' />\n);\n",
    "path": "src/playground/src/components/showcases/tab/tabSimpleUsage.component.tsx",
    "name": "TabSimpleUsage"
  },
  {
    "code": "import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Tab,\n  TabView,\n  Text,\n} from 'react-native-ui-kitten';\n\nexport const TabViewInlineStylingShowcase = (props) => (\n  <TabView\n    style={styles.tabView}\n    tabBarStyle={styles.tabBar}\n    indicatorStyle={styles.tabViewIndicator}>\n    <Tab title='DASHBOARD'>\n      <Text>DASHBOARD</Text>\n    </Tab>\n    <Tab title='SETTINGS'>\n      <Text>SETTINGS</Text>\n    </Tab>\n  </TabView>\n);\n\nconst styles = StyleSheet.create({\n  tabView: { backgroundColor: '#EDF1F7' },\n  tabBar: { backgroundColor: '#C5CEE0' },\n  tabViewIndicator: { backgroundColor: '#3366FF' },\n});\n",
    "path": "src/playground/src/components/showcases/tab/tabViewInlineStyling.component.tsx",
    "name": "TabViewInlineStyling"
  },
  {
    "code": "import React from 'react';\nimport {\n  Tab,\n  TabView,\n  Text,\n} from 'react-native-ui-kitten';\n\nexport class TabViewLazyLoadingShowcase extends React.Component {\n\n  state = {\n    selectedIndex: 0,\n  };\n\n  onSelect = (selectedIndex) => {\n    this.setState({ selectedIndex });\n  };\n\n  shouldLoadTabContent = (index) => {\n    return index === this.state.selectedIndex;\n  };\n\n  render() {\n    return (\n      <TabView\n        selectedIndex={this.state.selectedIndex}\n        shouldLoadComponent={this.shouldLoadTabContent}\n        onSelect={this.onSelect}>\n        <Tab title='DASHBOARD'>\n          <Text>DASHBOARD</Text>\n        </Tab>\n        <Tab title='SETTINGS'>\n          <Text>SETTINGS</Text>\n        </Tab>\n      </TabView>\n    );\n  }\n}\n",
    "path": "src/playground/src/components/showcases/tab/tabViewLazyLoading.component.tsx",
    "name": "TabViewLazyLoading"
  },
  {
    "code": "import React from 'react';\nimport {\n  Tab,\n  TabView,\n  Text,\n} from 'react-native-ui-kitten';\n\nexport class TabViewSimpleUsageShowcase extends React.Component {\n\n  state = {\n    selectedIndex: 0,\n  };\n\n  onSelect = (selectedIndex) => {\n    this.setState({ selectedIndex });\n  };\n\n  render() {\n    return (\n      <TabView\n        selectedIndex={this.state.selectedIndex}\n        onSelect={this.onSelect}>\n        <Tab title='DASHBOARD'>\n          <Text>DASHBOARD</Text>\n        </Tab>\n        <Tab title='SETTINGS'>\n          <Text>SETTINGS</Text>\n        </Tab>\n      </TabView>\n    );\n  }\n}\n",
    "path": "src/playground/src/components/showcases/tab/tabViewSimpleUsage.component.tsx",
    "name": "TabViewSimpleUsage"
  },
  {
    "code": "import React from 'react';\nimport { Image } from 'react-native';\nimport { Tab } from 'react-native-ui-kitten';\n\nconst DashboardIcon = (style) => (\n  <Image style={style} source={{ uri: 'https://akveo.github.io/eva-icons/fill/png/128/layout.png' }}/>\n);\n\nexport const TabWithExternalSourceIconShowcase = (props) => (\n  <Tab title='DASHBOARD' icon={DashboardIcon}/>\n);\n",
    "path": "src/playground/src/components/showcases/tab/tabWithExternalSourceIcon.component.tsx",
    "name": "TabWithExternalSourceIcon"
  },
  {
    "code": "/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport {\n  Icon,\n  Tab,\n} from 'react-native-ui-kitten';\n\nconst DashboardIcon = (style) => (\n  <Icon {...style} name='layout'/>\n);\n\nexport const TabWithIconShowcase = (props) => (\n  <Tab title='DASHBOARD' icon={DashboardIcon}/>\n);\n",
    "path": "src/playground/src/components/showcases/tab/tabWithIcon.component.tsx",
    "name": "TabWithIcon"
  },
  {
    "code": "import React from 'react';\nimport {\n  Layout,\n  Text,\n} from 'react-native-ui-kitten';\n\nexport const TextAppearancesShowcase = () => (\n  <Layout>\n    <Text appearance='default'>Default</Text>\n    <Text appearance='alternative'>Alternative</Text>\n    <Text appearance='hint'>Hint</Text>\n  </Layout>\n);\n",
    "path": "src/playground/src/components/showcases/text/textAppearances.component.tsx",
    "name": "TextAppearances"
  },
  {
    "code": "import React from 'react';\nimport {\n  Layout,\n  Text,\n} from 'react-native-ui-kitten';\n\nexport const TextCategoriesShowcase = () => (\n  <Layout>\n    <Text category='h1'>H1</Text>\n    <Text category='h2'>H2</Text>\n    <Text category='h3'>H3</Text>\n    <Text category='h4'>H4</Text>\n    <Text category='h5'>H5</Text>\n    <Text category='h6'>H6</Text>\n    <Text category='s1'>S1</Text>\n    <Text category='s2'>S2</Text>\n    <Text category='p1'>P1</Text>\n    <Text category='p2'>P2</Text>\n    <Text category='c1'>C1</Text>\n    <Text category='c2'>C2</Text>\n    <Text category='label'>LABEL</Text>\n  </Layout>\n);\n",
    "path": "src/playground/src/components/showcases/text/textCategories.component.tsx",
    "name": "TextCategories"
  },
  {
    "code": "import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Text } from 'react-native-ui-kitten';\n\nexport const TextInlineStylingShowcase = () => (\n  <Text style={styles.text}>Sample Text</Text>\n);\n\nconst styles = StyleSheet.create({\n  text: {\n    color: '#3366FF',\n    fontSize: 18,\n  },\n});\n",
    "path": "src/playground/src/components/showcases/text/textInlineStyling.component.tsx",
    "name": "TextInlineStyling"
  },
  {
    "code": "import React from 'react';\nimport { Text } from 'react-native-ui-kitten';\n\nexport const TextSimpleUsageShowcase = () => (\n  <Text>Sample Text</Text>\n);\n",
    "path": "src/playground/src/components/showcases/text/textSimpleUsage.component.tsx",
    "name": "TextSimpleUsage"
  },
  {
    "code": "import React from 'react';\nimport {\n  Layout,\n  Text,\n} from 'react-native-ui-kitten';\n\nexport const TextStatusesShowcase = () => (\n  <Layout>\n    <Text status='primary'>Primary</Text>\n    <Text status='success'>Success</Text>\n    <Text status='info'>Info</Text>\n    <Text status='warning'>Warning</Text>\n    <Text status='danger'>Danger</Text>\n  </Layout>\n);\n",
    "path": "src/playground/src/components/showcases/text/textStatuses.component.tsx",
    "name": "TextStatuses"
  },
  {
    "code": "import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Toggle } from 'react-native-ui-kitten';\n\nexport class ToggleInlineStylingShowcase extends React.Component {\n\n  state = {\n    checked: false,\n  };\n\n  onToggleValueChange = (checked) => {\n    this.setState({ checked });\n  };\n\n  render() {\n    return (\n      <Toggle\n        checked={this.state.checked}\n        text='Place your Text'\n        textStyle={styles.text}\n        onChange={this.onToggleValueChange}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  text: {\n    color: '#3366FF',\n    fontSize: 18,\n  },\n});\n",
    "path": "src/playground/src/components/showcases/toggle/toggleInlineStyling.component.tsx",
    "name": "ToggleInlineStyling"
  },
  {
    "code": "import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Toggle,\n} from 'react-native-ui-kitten';\n\nexport class ToggleSimpleUsageShowcase extends React.Component {\n\n  state = {\n    checked: false,\n  };\n\n  onToggleValueChange = (checked) => {\n    this.setState({ checked });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Toggle\n          style={styles.toggle}\n          text='Active'\n          checked={this.state.checked}\n          onChange={this.onToggleValueChange}\n        />\n        <Toggle\n          style={styles.toggle}\n          text='Disabled'\n          disabled={true}\n        />\n        <Toggle\n          style={styles.toggle}\n          text='Checked Disabled'\n          checked={true}\n          disabled={true}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    paddingVertical: 4,\n    paddingHorizontal: 4,\n  },\n  toggle: {\n    marginVertical: 4,\n    marginHorizontal: 4,\n  },\n});\n",
    "path": "src/playground/src/components/showcases/toggle/toggleSimpleUsage.component.tsx",
    "name": "ToggleSimpleUsage"
  },
  {
    "code": "import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Toggle,\n} from 'react-native-ui-kitten';\n\nexport class ToggleSizeShowcase extends React.Component {\n\n  state = {\n    tinyChecked: false,\n    smallChecked: false,\n    mediumChecked: false,\n    largeChecked: false,\n    giantChecked: false,\n  };\n\n  onTinyChange = (tinyChecked) => {\n    this.setState({ tinyChecked });\n  };\n\n  onSmallChange = (smallChecked) => {\n    this.setState({ smallChecked });\n  };\n\n  onMediumChange = (mediumChecked) => {\n    this.setState({ mediumChecked });\n  };\n\n  onLargeChange = (largeChecked) => {\n    this.setState({ largeChecked });\n  };\n\n  onGiantChange = (giantChecked) => {\n    this.setState({ giantChecked });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Toggle\n          style={styles.toggle}\n          checked={this.state.tinyChecked}\n          text='Tiny'\n          size='tiny'\n          onChange={this.onTinyChange}\n        />\n        <Toggle\n          style={styles.toggle}\n          checked={this.state.smallChecked}\n          text='Small'\n          size='small'\n          onChange={this.onSmallChange}\n        />\n        <Toggle\n          style={styles.toggle}\n          checked={this.state.mediumChecked}\n          text='Medium'\n          size='medium'\n          onChange={this.onMediumChange}\n        />\n        <Toggle\n          style={styles.toggle}\n          checked={this.state.largeChecked}\n          text='Large'\n          size='large'\n          onChange={this.onLargeChange}\n        />\n        <Toggle\n          style={styles.toggle}\n          checked={this.state.giantChecked}\n          text='Giant'\n          size='giant'\n          onChange={this.onGiantChange}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    paddingVertical: 4,\n    paddingHorizontal: 4,\n  },\n  toggle: {\n    marginVertical: 4,\n    marginHorizontal: 4,\n  },\n});\n",
    "path": "src/playground/src/components/showcases/toggle/toggleSize.component.tsx",
    "name": "ToggleSize"
  },
  {
    "code": "import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Toggle,\n} from 'react-native-ui-kitten';\n\nexport class ToggleStatusShowcase extends React.Component {\n\n  state = {\n    primaryChecked: false,\n    successChecked: false,\n    infoChecked: false,\n    warningChecked: false,\n    dangerChecked: false,\n    basicChecked: false,\n  };\n\n  onPrimaryChange = (primaryChecked) => {\n    this.setState({ primaryChecked });\n  };\n\n  onSuccessChange = (successChecked) => {\n    this.setState({ successChecked });\n  };\n\n  onInfoChange = (infoChecked) => {\n    this.setState({ infoChecked });\n  };\n\n  onWarningChange = (warningChecked) => {\n    this.setState({ warningChecked });\n  };\n\n  onDangerChange = (dangerChecked) => {\n    this.setState({ dangerChecked });\n  };\n\n  onBasicChange = (basicChecked) => {\n    this.setState({ basicChecked });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Toggle\n          style={styles.toggle}\n          checked={this.state.primaryChecked}\n          text='Primary'\n          status='primary'\n          onChange={this.onPrimaryChange}\n        />\n        <Toggle\n          style={styles.toggle}\n          checked={this.state.successChecked}\n          text='Success'\n          status='success'\n          onChange={this.onSuccessChange}\n        />\n        <Toggle\n          style={styles.toggle}\n          checked={this.state.infoChecked}\n          text='Info'\n          status='info'\n          onChange={this.onInfoChange}\n        />\n        <Toggle\n          style={styles.toggle}\n          checked={this.state.warningChecked}\n          text='Warning'\n          status='warning'\n          onChange={this.onWarningChange}\n        />\n        <Toggle\n          style={styles.toggle}\n          checked={this.state.dangerChecked}\n          text='Danger'\n          status='danger'\n          onChange={this.onDangerChange}\n        />\n        <Toggle\n          style={styles.toggle}\n          checked={this.state.basicChecked}\n          text='Basic'\n          status='basic'\n          onChange={this.onBasicChange}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    paddingVertical: 4,\n    paddingHorizontal: 4,\n  },\n  toggle: {\n    marginVertical: 4,\n    marginHorizontal: 4,\n  },\n});\n",
    "path": "src/playground/src/components/showcases/toggle/toggleStatus.component.tsx",
    "name": "ToggleStatus"
  },
  {
    "code": "import React from 'react';\nimport { Toggle } from 'react-native-ui-kitten';\n\nexport class ToggleWithTextShowcase extends React.Component {\n\n  state = {\n    checked: false,\n  };\n\n  onChange = (checked) => {\n    this.setState({ checked });\n  };\n\n  render() {\n    return (\n      <Toggle\n        checked={this.state.checked}\n        text='Place your Text'\n        onChange={this.onChange}\n      />\n    );\n  }\n}\n",
    "path": "src/playground/src/components/showcases/toggle/toggleWithText.component.tsx",
    "name": "ToggleWithText"
  },
  {
    "code": "import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  Tooltip,\n} from 'react-native-ui-kitten';\n\nexport class TooltipInlineStylingShowcase extends React.Component {\n\n  state = {\n    tooltipVisible: false,\n  };\n\n  onToggleButtonPress = () => {\n    const tooltipVisible = !this.state.tooltipVisible;\n    this.setState({ tooltipVisible });\n  };\n\n  render() {\n    return (\n      <Tooltip\n        visible={this.state.tooltipVisible}\n        text={'Hi! I\\'m a Tooltip'}\n        textStyle={styles.tooltipText}\n        onBackdropPress={this.onToggleButtonPress}>\n        <Button onPress={this.onToggleButtonPress}>\n          TOGGLE TOOLTIP\n        </Button>\n      </Tooltip>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  tooltipText: {\n    color: 'white',\n    fontSize: 18,\n  },\n});\n",
    "path": "src/playground/src/components/showcases/tooltip/tooltipInlineStyling.component.tsx",
    "name": "TooltipInlineStyling"
  },
  {
    "code": "import React from 'react';\nimport {\n  View,\n  StyleSheet,\n} from 'react-native';\nimport {\n  Tooltip,\n  Button,\n  Select,\n} from 'react-native-ui-kitten';\n\nexport class TooltipPlacementShowcase extends React.Component {\n\n  state = {\n    visible: false,\n    placement: { text: 'top' },\n  };\n\n  placements = [\n    { text: 'top' },\n    { text: 'top start' },\n    { text: 'top end' },\n    { text: 'left' },\n    { text: 'left start' },\n    { text: 'left end' },\n    { text: 'right' },\n    { text: 'right start' },\n    { text: 'right end' },\n    { text: 'bottom' },\n    { text: 'bottom start' },\n    { text: 'bottom end' },\n  ];\n\n  setVisible = () => {\n    const visible = !this.state.visible;\n\n    this.setState({ visible });\n  };\n\n  setPlacement = (placement) => {\n    this.setState({ placement });\n  };\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <Select\n          label='Select Tooltip Placement'\n          data={this.placements}\n          selectedOption={this.state.placement}\n          onSelect={this.setPlacement}\n        />\n        <View style={styles.subContainer}>\n          <Tooltip\n            visible={this.state.visible}\n            placement={this.state.placement.text}\n            text='Hi! This is tooltip.'\n            onBackdropPress={this.setVisible}>\n            <Button\n              size='giant'\n              onPress={this.setVisible}>\n              SHOW TOOLTIP\n            </Button>\n          </Tooltip>\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n  subContainer: {\n    height: 400,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  button: {\n    width: 150,\n  },\n  select: {\n    position: 'absolute',\n  },\n});\n",
    "path": "src/playground/src/components/showcases/tooltip/tooltipPlacement.component.tsx",
    "name": "TooltipPlacement"
  },
  {
    "code": "import React from 'react';\nimport {\n  Button,\n  Tooltip,\n} from 'react-native-ui-kitten';\n\nexport class TooltipSimpleUsageShowcase extends React.Component {\n\n  state = {\n    tooltipVisible: false,\n  };\n\n  onToggleButtonPress = () => {\n    const tooltipVisible = !this.state.tooltipVisible;\n    this.setState({ tooltipVisible });\n  };\n\n  render() {\n    return (\n      <Tooltip\n        visible={this.state.tooltipVisible}\n        text={'Hi! I\\'m a Tooltip'}\n        onBackdropPress={this.onToggleButtonPress}>\n        <Button onPress={this.onToggleButtonPress}>\n          TOGGLE TOOLTIP\n        </Button>\n      </Tooltip>\n    );\n  }\n}\n",
    "path": "src/playground/src/components/showcases/tooltip/tooltipSimpleUsage.component.tsx",
    "name": "TooltipSimpleUsage"
  },
  {
    "code": "import React from 'react';\nimport { Image } from 'react-native';\nimport {\n  Button,\n  Tooltip,\n} from 'react-native-ui-kitten';\n\nconst InfoIcon = (style) => (\n  <Image\n    style={style}\n    source={{ uri: 'https://akveo.github.io/eva-icons/fill/png/128/info.png' }}\n  />\n);\n\nexport class TooltipWithExternalSourceIconShowcase extends React.Component {\n\n  state = {\n    tooltipVisible: false,\n  };\n\n  onToggleButtonPress = () => {\n    const tooltipVisible = !this.state.tooltipVisible;\n    this.setState({ tooltipVisible });\n  };\n\n  render() {\n    return (\n      <Tooltip\n        visible={this.state.tooltipVisible}\n        text={'Hi! I\\'m a Tooltip'}\n        icon={InfoIcon}\n        onBackdropPress={this.onToggleButtonPress}>\n        <Button onPress={this.onToggleButtonPress}>\n          TOGGLE TOOLTIP\n        </Button>\n      </Tooltip>\n    );\n  }\n}\n",
    "path": "src/playground/src/components/showcases/tooltip/tooltipWithExternalSourceIcon.component.tsx",
    "name": "TooltipWithExternalSourceIcon"
  },
  {
    "code": "/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport {\n  Button,\n  Icon,\n  Tooltip,\n} from 'react-native-ui-kitten';\n\nconst InfoIcon = (style) => (\n  <Icon {...style} name='info'/>\n);\n\nexport class TooltipWithIconShowcase extends React.Component {\n\n  state = {\n    tooltipVisible: false,\n  };\n\n  onToggleButtonPress = () => {\n    const tooltipVisible = !this.state.tooltipVisible;\n    this.setState({ tooltipVisible });\n  };\n\n  render() {\n    return (\n      <Tooltip\n        visible={this.state.tooltipVisible}\n        text={'Hi! I\\'m a Tooltip'}\n        icon={InfoIcon}\n        onBackdropPress={this.onToggleButtonPress}>\n        <Button onPress={this.onToggleButtonPress}>\n          TOGGLE TOOLTIP\n        </Button>\n      </Tooltip>\n    );\n  }\n}\n",
    "path": "src/playground/src/components/showcases/tooltip/tooltipWithIcon.component.tsx",
    "name": "TooltipWithIcon"
  },
  {
    "code": "import React from 'react';\nimport { Image } from 'react-native';\nimport { TopNavigationAction } from 'react-native-ui-kitten';\n\nconst BackIcon = (style) => (\n  <Image\n    style={style}\n    source={{uri: 'https://akveo.github.io/eva-icons/fill/png/128/arrow-back.png'}}\n  />\n);\n\nexport const TopNavigationActionExternalSourceIconShowcase = () => (\n  <TopNavigationAction icon={BackIcon}/>\n);\n",
    "path": "src/playground/src/components/showcases/topNavigation/topNavigationActionExternalSourceIcon.component.tsx",
    "name": "TopNavigationActionExternalSourceIcon"
  },
  {
    "code": "import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Icon,\n  TopNavigationAction,\n} from 'react-native-ui-kitten';\n\nconst EditIcon = (style) => (\n  <Icon {...style} name='edit' />\n);\n\nexport const TopNavigationActionInlineStylingShowcase = () => (\n  <TopNavigationAction\n    style={styles.action}\n    icon={EditIcon}\n  />\n);\n\nconst styles = StyleSheet.create({\n  action: { marginHorizontal: 4 },\n});\n",
    "path": "src/playground/src/components/showcases/topNavigation/topNavigationActionInlineStyling.component.tsx",
    "name": "TopNavigationActionInlineStyling"
  },
  {
    "code": "/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport {\n  Icon,\n  TopNavigation,\n  TopNavigationAction,\n} from 'react-native-ui-kitten';\n\nconst BackIcon = (style) => (\n  <Icon {...style} name='arrow-back'/>\n);\n\nconst EditIcon = (style) => (\n  <Icon {...style} name='edit'/>\n);\n\nconst MenuIcon = (style) => (\n  <Icon {...style} name='more-vertical'/>\n);\n\nconst BackAction = (props) => (\n  <TopNavigationAction {...props} icon={BackIcon}/>\n);\n\nconst EditAction = (props) => (\n  <TopNavigationAction {...props} icon={EditIcon}/>\n);\n\nconst MenuAction = (props) => (\n  <TopNavigationAction {...props} icon={MenuIcon}/>\n);\n\nexport const TopNavigationActionsShowcase = () => {\n\n  const onBackPress = () => {\n  };\n\n  const renderLeftControl = () => (\n    <BackAction onPress={onBackPress}/>\n  );\n\n  const renderRightControls = () => [\n    <EditAction/>,\n    <MenuAction/>,\n  ];\n\n  return (\n    <TopNavigation\n      title='Application Title'\n      leftControl={renderLeftControl()}\n      rightControls={renderRightControls()}\n    />\n  );\n};\n",
    "path": "src/playground/src/components/showcases/topNavigation/topNavigationActions.component.tsx",
    "name": "TopNavigationActions"
  },
  {
    "code": "/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport {\n  Icon,\n  TopNavigationAction,\n} from 'react-native-ui-kitten';\n\nconst BackIcon = (style) => (\n  <Icon {...style} name='arrow-back'/>\n);\n\nexport const TopNavigationActionSimpleUsageShowcase = () => (\n  <TopNavigationAction icon={BackIcon} />\n);\n",
    "path": "src/playground/src/components/showcases/topNavigation/topNavigationActionSimpleUsage.component.tsx",
    "name": "TopNavigationActionSimpleUsage"
  },
  {
    "code": "/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport {\n  Icon,\n  Layout,\n  TopNavigation,\n  TopNavigationAction,\n} from 'react-native-ui-kitten';\n\nconst BackIcon = (style) => (\n  <Icon {...style} name='arrow-back' />\n);\n\nconst BackAction = () => (\n  <TopNavigationAction icon={BackIcon}/>\n);\n\nexport const TopNavigationAlignmentsShowcase = () => (\n  <Layout>\n    <TopNavigation\n      title='Start'\n      alignment='start'\n      leftControl={BackAction()}\n    />\n    <TopNavigation\n      title='Center'\n      alignment='center'\n      leftControl={BackAction()}\n    />\n  </Layout>\n);\n",
    "path": "src/playground/src/components/showcases/topNavigation/topNavigationAlignments.component.tsx",
    "name": "TopNavigationAlignments"
  },
  {
    "code": "/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Icon,\n  TopNavigation,\n  TopNavigationAction,\n} from 'react-native-ui-kitten';\n\nconst BackIcon = (style) => (\n  <Icon {...style} name='arrow-back' />\n);\n\nconst BackAction = () => (\n  <TopNavigationAction icon={BackIcon}/>\n);\n\nexport const TopNavigationInlineStylingShowcase = () => (\n  <TopNavigation\n    style={styles.topNavigation}\n    title='Title'\n    subtitle='Subtitle'\n    leftControl={BackAction()}\n    titleStyle={styles.title}\n    subtitleStyle={styles.subtitle}\n  />\n);\n\nconst styles = StyleSheet.create({\n  topNavigation: { backgroundColor: '#1A2138' },\n  title: { color: '#EDF1F7' },\n  subtitle: { color: '#C5CEE0' },\n});\n",
    "path": "src/playground/src/components/showcases/topNavigation/topNavigationInlineStyling.component.tsx",
    "name": "TopNavigationInlineStyling"
  },
  {
    "code": "/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport {\n  Icon,\n  TopNavigation,\n  TopNavigationAction,\n} from 'react-native-ui-kitten';\n\nconst BackIcon = (style) => (\n  <Icon {...style} name='arrow-back' />\n);\n\nconst BackAction = () => (\n  <TopNavigationAction icon={BackIcon}/>\n);\n\nexport const TopNavigationSimpleUsageShowcase = () => (\n  <TopNavigation\n    leftControl={BackAction()}\n    title='Application Title'\n  />\n);\n",
    "path": "src/playground/src/components/showcases/topNavigation/topNavigationSimpleUsage.component.tsx",
    "name": "TopNavigationSimpleUsage"
  },
  {
    "code": "import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Icon,\n  Layout,\n  OverflowMenu,\n  TopNavigation,\n  TopNavigationAction,\n} from 'react-native-ui-kitten';\n\nconst BackIcon = (style) => (\n  <Icon {...style} name='arrow-back'/>\n);\n\nconst MenuIcon = (style) => (\n  <Icon {...style} name='more-vertical'/>\n);\n\nconst InfoIcon = (style) => (\n  <Icon {...style} name='info'/>\n);\n\nconst LogoutIcon = (style) => (\n  <Icon {...style} name='log-out'/>\n);\n\nexport class TopNavigationWithMenuShowcase extends React.Component {\n\n  state = {\n    menuVisible: false,\n  };\n\n  menuData = [\n    { title: 'About', icon: InfoIcon },\n    { title: 'Logout', icon: LogoutIcon },\n  ];\n\n  onMenuActionPress = () => {\n    const menuVisible = !this.state.menuVisible;\n    this.setState({ menuVisible });\n  };\n\n  onMenuItemSelect = (index) => {\n    // Handle Item Select\n\n    this.setState({ menuVisible: false });\n  };\n\n  renderMenuAction = () => (\n    <OverflowMenu\n      visible={this.state.menuVisible}\n      data={this.menuData}\n      placement='bottom end'\n      onSelect={this.onMenuItemSelect}\n      onBackdropPress={this.onMenuActionPress}>\n      <TopNavigationAction\n        icon={MenuIcon}\n        onPress={this.onMenuActionPress}\n      />\n    </OverflowMenu>\n  );\n\n  renderBackAction = () => (\n    <TopNavigationAction icon={BackIcon} />\n  );\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <TopNavigation\n          title='Application Title'\n          leftControl={this.renderBackAction()}\n          rightControls={this.renderMenuAction()}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 192,\n  },\n});\n\n",
    "path": "src/playground/src/components/showcases/topNavigation/topNavigationWithMenu.component.tsx",
    "name": "TopNavigationWithMenu"
  },
  {
    "code": "import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  ViewPager,\n  Layout,\n  Text,\n} from 'react-native-ui-kitten';\n\nexport class ViewPagerInlineStylingShowcase extends React.Component {\n\n  state = {\n    selectedIndex: 0,\n  };\n\n  onSelect = (selectedIndex) => {\n    this.setState({ selectedIndex });\n  };\n\n  render() {\n    return (\n      <ViewPager\n        style={styles.container}\n        selectedIndex={this.state.selectedIndex}\n        onSelect={this.onSelect}>\n        <Layout\n          level='2'\n          style={styles.tab}>\n          <Text category='h5'>Tab 1</Text>\n        </Layout>\n        <Layout\n          level='2'\n          style={styles.tab}>\n          <Text category='h5'>Tab 2</Text>\n        </Layout>\n      </ViewPager>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 16,\n  },\n  tab: {\n    height: 200,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n",
    "path": "src/playground/src/components/showcases/viewPager/viewPagerInlineStyling.component.tsx",
    "name": "ViewPagerInlineStyling"
  },
  {
    "code": "import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  ViewPager,\n  Layout,\n  Text,\n} from 'react-native-ui-kitten';\n\nexport class ViewPagerLazyLoadingShowcase extends React.Component {\n\n  state = {\n    selectedIndex: 0,\n  };\n\n  onSelect = (selectedIndex) => {\n    this.setState({ selectedIndex });\n  };\n\n  shouldLoadComponent = (index) => {\n    return index === this.state.selectedIndex;\n  };\n\n  render() {\n    return (\n      <ViewPager\n        selectedIndex={this.state.selectedIndex}\n        shouldLoadComponent={this.shouldLoadComponent}\n        onSelect={this.onSelect}>\n        <Layout\n          level='2'\n          style={styles.tab}>\n          <Text category='h5'>Tab 1</Text>\n        </Layout>\n        <Layout\n          level='2'\n          style={styles.tab}>\n          <Text category='h5'>Tab 2</Text>\n        </Layout>\n      </ViewPager>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  tab: {\n    height: 200,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n",
    "path": "src/playground/src/components/showcases/viewPager/viewPagerLazyLoading.component.tsx",
    "name": "ViewPagerLazyLoading"
  },
  {
    "code": "import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Text,\n  ViewPager,\n} from 'react-native-ui-kitten';\n\nexport class ViewPagerSimpleUsageShowcase extends React.Component {\n\n  state = {\n    selectedIndex: 0,\n  };\n\n  onIndexChange = (selectedIndex) => {\n    this.setState({ selectedIndex });\n  };\n\n  render() {\n    return (\n      <ViewPager\n        selectedIndex={this.state.selectedIndex}\n        onSelect={this.onIndexChange}>\n        <Layout\n          level='2'\n          style={styles.tab}>\n          <Text category='h5'>Tab 1</Text>\n        </Layout>\n        <Layout\n          level='2'\n          style={styles.tab}>\n          <Text category='h5'>Tab 2</Text>\n        </Layout>\n      </ViewPager>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  tab: {\n    height: 200,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n",
    "path": "src/playground/src/components/showcases/viewPager/viewPagerSimpleUsage.component.tsx",
    "name": "ViewPagerSimpleUsage"
  }
]