// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`@modal-service: service checks * show multiple modals one by one 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View>
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID="@modal/single"
    >
      <Text>
        Show Single Modal
      </Text>
    </View>
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID="@modal/multiple"
    >
      <Text>
        Show Single Modal
      </Text>
    </View>
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID="@modal/backdrop"
    >
      <Text>
        Show Back-Drop Allowed Modal
      </Text>
    </View>
  </View>
  <View
    style={
      Object {
        "alignItems": "center",
        "justifyContent": "center",
        "position": "absolute",
      }
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "red",
          "height": 300,
          "width": 300,
        }
      }
    >
      <Text
        testID="@modal/modal-text-1"
      >
        Test Modal 2
      </Text>
      <View
        accessibilityRole="button"
        accessibilityStates={Array []}
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#007AFF",
                  "fontSize": 18,
                  "padding": 8,
                  "textAlign": "center",
                },
              ]
            }
          >
            Close Modal
          </Text>
        </View>
      </View>
    </View>
  </View>
  <View
    style={
      Object {
        "alignItems": "center",
        "justifyContent": "center",
        "position": "absolute",
      }
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "red",
          "height": 300,
          "width": 300,
        }
      }
    >
      <Text
        testID="@modal/modal-text-2"
      >
        Test Modal 2
      </Text>
      <View
        accessibilityRole="button"
        accessibilityStates={Array []}
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#007AFF",
                  "fontSize": 18,
                  "padding": 8,
                  "textAlign": "center",
                },
              ]
            }
          >
            Close Modal
          </Text>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`@modal-service: service checks * showDialog have been called 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View>
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID="@modal/single"
    >
      <Text>
        Show Single Modal
      </Text>
    </View>
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID="@modal/multiple"
    >
      <Text>
        Show Single Modal
      </Text>
    </View>
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID="@modal/backdrop"
    >
      <Text>
        Show Back-Drop Allowed Modal
      </Text>
    </View>
  </View>
  <View
    style={
      Object {
        "alignItems": "center",
        "justifyContent": "center",
        "position": "absolute",
      }
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "red",
          "height": 300,
          "width": 300,
        }
      }
    >
      <Text
        testID="@modal/modal-text"
      >
        Test Modal 1
      </Text>
      <View
        accessibilityRole="button"
        accessibilityStates={Array []}
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Array [
              Object {},
            ]
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#007AFF",
                  "fontSize": 18,
                  "padding": 8,
                  "textAlign": "center",
                },
              ]
            }
          >
            Close Modal
          </Text>
        </View>
      </View>
    </View>
  </View>
</View>
`;
